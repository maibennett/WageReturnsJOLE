
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   14.2   Copyright 1985-2015 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     Special Edition                  College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

14-user Stata network perpetual license:
       Serial number:  401406252408
         Licensed to:  University of Oklahoma Economics Department
                       Norman, Oklahoma 73072

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  Maximum number of variables is set to 5000; see help set_maxvar.


running /home/ransom/ado/personal/profile.do ...

. do y97_create_master_then_trim.do 

. do y97_create_master

. version 14.1

. clear all

. set more off

. capture log close

. 
. log using "y97_create_master.log", replace
-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /home/data/ransom/WageReturnsRepo/Data/y97/y97_create_master.log
  log type:  text
 opened on:  30 Jan 2019, 09:54:15

. 
. **************************************************
. * Create all permanent variables and save all data
. **************************************************
. 
. !unzip y97_raw.dta.zip

Archive:  y97_raw.dta.zip
  inflating: y97_raw.dta             

. use y97_raw.dta

. !rm y97_raw.dta


. 
. * Bring in CPI and min_wage
. do cpi_min_wage.do

. ***********************************************
. * Create fed min wage and cpi
. * http://www.dol.gov/whd/minwage/chart.htm
. * http://lmi2.detma.org/lmi/pdf/MinimumWage.pdf
. * and
. * http://www.bls.gov/cpi/
. ***********************************************
. 
. generat fedMinWage=0.25 if year==1938
(332,408 missing values generated)

. replace fedMinWage=0.30 if year==1939
(0 real changes made)

. replace fedMinWage=0.30 if year==1940
(0 real changes made)

. replace fedMinWage=0.30 if year==1941
(0 real changes made)

. replace fedMinWage=0.30 if year==1942
(0 real changes made)

. replace fedMinWage=0.30 if year==1943
(0 real changes made)

. replace fedMinWage=0.30 if year==1944
(0 real changes made)

. replace fedMinWage=0.40 if year==1945
(0 real changes made)

. replace fedMinWage=0.40 if year==1946
(0 real changes made)

. replace fedMinWage=0.40 if year==1947
(0 real changes made)

. replace fedMinWage=0.40 if year==1948
(0 real changes made)

. replace fedMinWage=0.40 if year==1949
(0 real changes made)

. replace fedMinWage=0.75 if year==1950
(0 real changes made)

. replace fedMinWage=0.75 if year==1951
(0 real changes made)

. replace fedMinWage=0.75 if year==1952
(0 real changes made)

. replace fedMinWage=0.75 if year==1953
(0 real changes made)

. replace fedMinWage=0.75 if year==1954
(0 real changes made)

. replace fedMinWage=0.75 if year==1955
(0 real changes made)

. replace fedMinWage=1.00 if year==1956
(0 real changes made)

. replace fedMinWage=1.00 if year==1957
(0 real changes made)

. replace fedMinWage=1.00 if year==1958
(0 real changes made)

. replace fedMinWage=1.00 if year==1959
(0 real changes made)

. replace fedMinWage=1.00 if year==1960
(0 real changes made)

. replace fedMinWage=1.15 if year==1961
(0 real changes made)

. replace fedMinWage=1.15 if year==1962
(0 real changes made)

. replace fedMinWage=1.25 if year==1963
(0 real changes made)

. replace fedMinWage=1.25 if year==1964
(0 real changes made)

. replace fedMinWage=1.25 if year==1965
(0 real changes made)

. replace fedMinWage=1.25 if year==1966
(0 real changes made)

. replace fedMinWage=1.40 if year==1967
(0 real changes made)

. replace fedMinWage=1.60 if year==1968
(0 real changes made)

. replace fedMinWage=1.60 if year==1969
(0 real changes made)

. replace fedMinWage=1.60 if year==1970
(0 real changes made)

. replace fedMinWage=1.60 if year==1971
(0 real changes made)

. replace fedMinWage=1.60 if year==1972
(0 real changes made)

. replace fedMinWage=1.60 if year==1973
(0 real changes made)

. replace fedMinWage=2.00 if year==1974
(0 real changes made)

. replace fedMinWage=2.10 if year==1975
(0 real changes made)

. replace fedMinWage=2.30 if year==1976
(0 real changes made)

. replace fedMinWage=2.30 if year==1977
(0 real changes made)

. replace fedMinWage=2.65 if year==1978
(0 real changes made)

. replace fedMinWage=2.90 if year==1979
(0 real changes made)

. replace fedMinWage=3.10 if year==1980
(8,984 real changes made)

. replace fedMinWage=3.35 if year==1981
(8,984 real changes made)

. replace fedMinWage=3.35 if year==1982
(8,984 real changes made)

. replace fedMinWage=3.35 if year==1983
(8,984 real changes made)

. replace fedMinWage=3.35 if year==1984
(8,984 real changes made)

. replace fedMinWage=3.35 if year==1985
(8,984 real changes made)

. replace fedMinWage=3.35 if year==1986
(8,984 real changes made)

. replace fedMinWage=3.35 if year==1987
(8,984 real changes made)

. replace fedMinWage=3.35 if year==1988
(8,984 real changes made)

. replace fedMinWage=3.35 if year==1989
(8,984 real changes made)

. replace fedMinWage=3.80 if year==1990
(8,984 real changes made)

. replace fedMinWage=4.25 if year==1991
(8,984 real changes made)

. replace fedMinWage=4.25 if year==1992
(8,984 real changes made)

. replace fedMinWage=4.25 if year==1993
(8,984 real changes made)

. replace fedMinWage=4.25 if year==1994
(8,984 real changes made)

. replace fedMinWage=4.25 if year==1995
(8,984 real changes made)

. replace fedMinWage=4.75 if year==1996
(8,984 real changes made)

. replace fedMinWage=5.15 if year==1997
(8,984 real changes made)

. replace fedMinWage=5.15 if year==1998
(8,984 real changes made)

. replace fedMinWage=5.15 if year==1999
(8,984 real changes made)

. replace fedMinWage=5.15 if year==2000
(8,984 real changes made)

. replace fedMinWage=5.15 if year==2001
(8,984 real changes made)

. replace fedMinWage=5.15 if year==2002
(8,984 real changes made)

. replace fedMinWage=5.15 if year==2003
(8,984 real changes made)

. replace fedMinWage=5.15 if year==2004
(8,984 real changes made)

. replace fedMinWage=5.15 if year==2005
(8,984 real changes made)

. replace fedMinWage=5.15 if year==2006
(8,984 real changes made)

. replace fedMinWage=5.85 if year==2007
(8,984 real changes made)

. replace fedMinWage=6.55 if year==2008
(8,984 real changes made)

. replace fedMinWage=7.25 if year==2009
(8,984 real changes made)

. replace fedMinWage=7.25 if year==2010
(8,984 real changes made)

. replace fedMinWage=7.25 if year==2011
(8,984 real changes made)

. replace fedMinWage=7.25 if year==2012
(8,984 real changes made)

. 
. generat cpi= 14.100 if year==1938
(332,408 missing values generated)

. replace cpi= 13.900 if year==1939
(0 real changes made)

. replace cpi= 14.000 if year==1940
(0 real changes made)

. replace cpi= 14.700 if year==1941
(0 real changes made)

. replace cpi= 16.300 if year==1942
(0 real changes made)

. replace cpi= 17.300 if year==1943
(0 real changes made)

. replace cpi= 17.600 if year==1944
(0 real changes made)

. replace cpi= 18.000 if year==1945
(0 real changes made)

. replace cpi= 19.500 if year==1946
(0 real changes made)

. replace cpi= 22.300 if year==1947
(0 real changes made)

. replace cpi= 24.100 if year==1948
(0 real changes made)

. replace cpi= 23.800 if year==1949
(0 real changes made)

. replace cpi= 24.100 if year==1950
(0 real changes made)

. replace cpi= 26.000 if year==1951
(0 real changes made)

. replace cpi= 26.500 if year==1952
(0 real changes made)

. replace cpi= 26.700 if year==1953
(0 real changes made)

. replace cpi= 26.900 if year==1954
(0 real changes made)

. replace cpi= 26.800 if year==1955
(0 real changes made)

. replace cpi= 27.200 if year==1956
(0 real changes made)

. replace cpi= 28.100 if year==1957
(0 real changes made)

. replace cpi= 28.900 if year==1958
(0 real changes made)

. replace cpi= 29.100 if year==1959
(0 real changes made)

. replace cpi= 29.600 if year==1960
(0 real changes made)

. replace cpi= 29.900 if year==1961
(0 real changes made)

. replace cpi= 30.200 if year==1962
(0 real changes made)

. replace cpi= 30.600 if year==1963
(0 real changes made)

. replace cpi= 31.000 if year==1964
(0 real changes made)

. replace cpi= 31.500 if year==1965
(0 real changes made)

. replace cpi= 32.400 if year==1966
(0 real changes made)

. replace cpi= 33.400 if year==1967
(0 real changes made)

. replace cpi= 34.800 if year==1968
(0 real changes made)

. replace cpi= 36.700 if year==1969
(0 real changes made)

. replace cpi= 38.800 if year==1970
(0 real changes made)

. replace cpi= 40.500 if year==1971
(0 real changes made)

. replace cpi= 41.800 if year==1972
(0 real changes made)

. replace cpi= 44.400 if year==1973
(0 real changes made)

. replace cpi= 49.300 if year==1974
(0 real changes made)

. replace cpi= 53.800 if year==1975
(0 real changes made)

. replace cpi= 56.900 if year==1976
(0 real changes made)

. replace cpi= 60.600 if year==1977
(0 real changes made)

. replace cpi= 65.200 if year==1978
(0 real changes made)

. replace cpi= 72.600 if year==1979
(0 real changes made)

. replace cpi= 82.400 if year==1980
(8,984 real changes made)

. replace cpi= 90.900 if year==1981
(8,984 real changes made)

. replace cpi= 96.500 if year==1982
(8,984 real changes made)

. replace cpi= 99.600 if year==1983
(8,984 real changes made)

. replace cpi=103.900 if year==1984
(8,984 real changes made)

. replace cpi=107.600 if year==1985
(8,984 real changes made)

. replace cpi=109.600 if year==1986
(8,984 real changes made)

. replace cpi=113.600 if year==1987
(8,984 real changes made)

. replace cpi=118.300 if year==1988
(8,984 real changes made)

. replace cpi=124.000 if year==1989
(8,984 real changes made)

. replace cpi=130.700 if year==1990
(8,984 real changes made)

. replace cpi=136.200 if year==1991
(8,984 real changes made)

. replace cpi=140.300 if year==1992
(8,984 real changes made)

. replace cpi=144.500 if year==1993
(8,984 real changes made)

. replace cpi=148.200 if year==1994
(8,984 real changes made)

. replace cpi=152.400 if year==1995
(8,984 real changes made)

. replace cpi=156.900 if year==1996
(8,984 real changes made)

. replace cpi=160.500 if year==1997
(8,984 real changes made)

. replace cpi=163.000 if year==1998
(8,984 real changes made)

. replace cpi=166.600 if year==1999
(8,984 real changes made)

. replace cpi=172.200 if year==2000
(8,984 real changes made)

. replace cpi=177.100 if year==2001
(8,984 real changes made)

. replace cpi=179.900 if year==2002
(8,984 real changes made)

. replace cpi=184.000 if year==2003
(8,984 real changes made)

. replace cpi=188.900 if year==2004
(8,984 real changes made)

. replace cpi=195.300 if year==2005
(8,984 real changes made)

. replace cpi=201.600 if year==2006
(8,984 real changes made)

. replace cpi=207.342 if year==2007
(8,984 real changes made)

. replace cpi=215.303 if year==2008
(8,984 real changes made)

. replace cpi=214.537 if year==2009
(8,984 real changes made)

. replace cpi=218.056 if year==2010
(8,984 real changes made)

. replace cpi=224.939 if year==2011
(8,984 real changes made)

. replace cpi=229.594 if year==2012
(8,984 real changes made)

. replace cpi=232.957 if year==2013
(8,984 real changes made)

. 
. replace fedMinWage = fedMinWage*100
(296,472 real changes made)

. replace cpi=cpi/100
(305,456 real changes made)

. 
. lab var fedMinWage "Federal Minimum Wage (undeflated)"

. lab var cpi "CPI-Urban/100 (1982-84)"

. 
end of do-file

. 
. * Create age, foreignBorn, race, sex, family background measures, missed inte
> rview history, etc.
. do y97_create_demographics.do

. * Create age, foreignBorn, race, sex, female, family income, parental co-resi
> dence status, missed interview, etc.
. 
. **get sex dummies
. capture noisily drop male female
variable male not found

. gen male =   (sex==1)

. gen female = (sex==2)

. 
. **Recode parental education variables
. recode  Bio_father_highest_educ (95 = .)
(Bio_father_highest_educ: 296 changes made)

. recode  Bio_mother_highest_educ (95 = .)
(Bio_mother_highest_educ: 222 changes made)

. rename  Bio_mother_highest_educ Meduc

. generat m_Meduc = mi(Meduc)

. replace Meduc = 0 if mi(Meduc)
(25,678 real changes made)

. rename  Bio_father_highest_educ Feduc

. generat m_Feduc = mi(Feduc)

. replace Feduc = 0 if mi(Feduc)
(68,968 real changes made)

. 
. **Fix Born_abroad variable, etc.
. bys ID: egen born_here = mean(Born_in_US)
(9250 missing values generated)

. replace born_here=1 if born_here>0 & born_here<1
(444 real changes made)

. generat foreignBorn = 1-born_here
(9,250 missing values generated)

. drop    born_here

. 
. ** Fix AFQT
. generat m_afqt   = mi(afqt_std   )

. generat m_afqtAR = mi(asvabAR_std)

. generat m_afqtCS = mi(asvabCS_std)

. generat m_afqtMK = mi(asvabMK_std)

. generat m_afqtNO = mi(asvabNO_std)

. generat m_afqtPC = mi(asvabPC_std)

. generat m_afqtWK = mi(asvabWK_std)

. replace afqt_std    = 0 if mi(afqt_std   )
(73,334 real changes made)

. replace asvabAR_std = 0 if mi(asvabAR_std)
(69,227 real changes made)

. replace asvabCS_std = 0 if mi(asvabCS_std)
(73,260 real changes made)

. replace asvabMK_std = 0 if mi(asvabMK_std)
(69,967 real changes made)

. replace asvabNO_std = 0 if mi(asvabNO_std)
(73,334 real changes made)

. replace asvabPC_std = 0 if mi(asvabPC_std)
(69,597 real changes made)

. replace asvabWK_std = 0 if mi(asvabWK_std)
(69,338 real changes made)

. 
. *Fix Family Income
. generate        Finc96     = Family_income if year==1996
(325,820 missing values generated)

. bys ID: egen    famInc1996 = mean(Finc96)
(88652 missing values generated)

. bys ID: replace famInc1996 = .r if Finc96[17]==.r
(0 real changes made)

. bys ID: replace famInc1996 = .d if Finc96[17]==.d
(0 real changes made)

. bys ID: replace famInc1996 = .i if Finc96[17]==.i
(53,946 real changes made, 53,946 to missing)

. bys ID: replace famInc1996 = .v if Finc96[17]==.v
(34,706 real changes made, 34,706 to missing)

. bys ID: replace famInc1996 = .n if Finc96[17]==.n
(0 real changes made)

. bys ID: replace famInc1996 = .  if Finc96[17]==.
(0 real changes made)

. drop Finc96

. generat m_famInc1996 = mi(famInc1996)

. replace famInc1996   = famInc1996/1.569 // 1.569 is the 1982-84 CPI-Urban in 
> 1996
(328,708 real changes made, 88,652 to missing)

. replace famInc1996   = famInc1996/1000
(240,056 real changes made)

. replace famInc1996   = 0 if mi(famInc1996)
(88,652 real changes made)

. 
. * Fix relationship to Head of Household
. generat      true_rel_HH_headA = Relationship_HH_head if year==1997
(323,455 missing values generated)

. replace      true_rel_HH_headA = min(Relationship_to_Par_age12_, Relationship
> _HH_head) if (mi(Relationship_HH_head) | mi(Relationship_to_Par_age12_)) & ye
> ar==1997 & Relationship_HH_head~=Relationship_to_Par_age12_
(31 real changes made, 10 to missing)

. bys ID: egen true_rel_HH_head  = mean(true_rel_HH_headA)
(370 missing values generated)

. drop         true_rel_HH_headA

. label   val  true_rel_HH_head vl_relPar

. 
. * Get whether or not person lives with mom in 1997
. gen liveWithMom14 = inlist(true_rel_HH_head,1,2,4)

. 
. * Get whether or not person lives in female-headed household in 1997
. gen femaleHeadHH1997 = true_rel_HH_head==4

. 
. * Get Household size in 1997
. rename  HH_size HHsize1997

. 
. * Fix Weights Variable
. replace weight_panel = . if year~=1997
(143,744 real changes made, 143,744 to missing)

. bys ID: egen weight  = mean(weight_panel)

. drop weight_panel

. 
. * Generate cohort dummies
. capture noisily drop age_now
variable age_now not found

. generat born_1980 = (birth_year==1980)

. generat born_1981 = (birth_year==1981)

. generat born_1982 = (birth_year==1982)

. generat born_1983 = (birth_year==1983)

. generat born_1984 = (birth_year==1984)

. 
. * Generate age
. genera now_1997 = (1997-1960)*12

. genera DOB = (birth_year-1960)*12+birth_month-1

. format now_1997 %tm

. format DOB %tm

. genera age      = (now_1997-DOB)/12

. genera age_now  = year-birth_year-1

. 
. * Generate race dummies
. renam race_ethnicity race

. gener white    = (race==4)

. gener black    = (race==1)

. gener hispanic = (race==2)

. gener mixed    = (race==3)

. label val race vl_race

. 
. * missed interviews
. * variables that flag if the year is missing, how long the missing has 
. *  gone on, how long the missing lasts, if it's the last missing spell
. *  and if it's the first long missing spell (long = 3+ missed interviews)
. generat Interview_date                      = Int_month+239 // add 239 to con
> vert from NLSY base month (Dec 1979) to Stata base month (Jan 1960)
(201,207 missing values generated)

. format  Interview_date %tm

. replace Interview_date                      = .n if Int_month==.n
(21,527 real changes made, 21,527 to missing)

. 
. foreach x of numlist 1/17 {
  2.     local temp=`x'+19
  3.     bys ID: gen R`x'interviewDate  = Interview_date[`temp']
  4.     bys ID: gen R`x'interviewDay   = mdy(InterviewM[`temp'],InterviewD[`te
> mp'],InterviewY[`temp'])
  5.     bys ID: gen R`x'interviewWeek  = wofd(mdy(InterviewM[`temp'],Interview
> D[`temp'],InterviewY[`temp']))
  6.     format R`x'interviewDate %tm
  7.     format R`x'interviewDay  %td
  8.     format R`x'interviewWeek %tw
  9. }
(28,712 missing values generated)
(28,712 missing values generated)
(28,712 missing values generated)
(33,448 missing values generated)
(33,448 missing values generated)
(33,448 missing values generated)
(40,774 missing values generated)
(40,774 missing values generated)
(40,774 missing values generated)
(40,256 missing values generated)
(40,256 missing values generated)
(40,256 missing values generated)
(45,510 missing values generated)
(45,510 missing values generated)
(45,510 missing values generated)
(54,834 missing values generated)
(54,834 missing values generated)
(54,834 missing values generated)
(60,902 missing values generated)
(60,902 missing values generated)
(60,902 missing values generated)
(52,725 missing values generated)
(52,725 missing values generated)
(52,725 missing values generated)
(57,942 missing values generated)
(57,942 missing values generated)
(57,942 missing values generated)
(55,278 missing values generated)
(55,278 missing values generated)
(55,278 missing values generated)
(52,725 missing values generated)
(52,725 missing values generated)
(52,725 missing values generated)
(55,685 missing values generated)
(55,685 missing values generated)
(55,685 missing values generated)
(57,757 missing values generated)
(57,757 missing values generated)
(57,757 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(68,228 missing values generated)
(68,228 missing values generated)
(68,228 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(69,597 missing values generated)
(69,597 missing values generated)
(69,597 missing values generated)

. gen flag1 = yofd(dofm(R1interviewDate)) ==1998 // create flag for imputing sc
> hooling before first interview

. gen flag2 = yofd(dofm(R17interviewDate))==2016 // create flag for dropping ob
> servations after last interview

. 
. gen Interview_day                           = mdy(InterviewM,InterviewD,Inter
> viewY)
(201,207 missing values generated)

. gen Interview_month                         = month(dofm(Interview_date))
(201,207 missing values generated)

. replace Interview_month                     = .n if Interview_date==.n
(21,527 real changes made, 21,527 to missing)

. replace Interview_month                     = .  if Interview_date==.
(0 real changes made)

. 
. gen miss_interview                          = (Interview_date==.n)

. bys ID: egen miss_interview_dumB            = mean(miss_interview)

. gen ever_miss_interview                     = (miss_interview_dumB > 0)

. drop miss_interview_dumB

. 
. gen age_at_miss_int                         = age_now*miss_interview

. gen year_miss_int                           = year*miss_interview

. 
. gen miss_interview_cum                      = 0

. by ID: replace miss_interview_cum           = miss_interview_cum[_n-1] + 1 if
>  miss_interview[_n]==1
(21,527 real changes made)

. 
. gsort +ID -year

. gen miss_interview_length                   = miss_interview_cum

. by ID: replace miss_interview_length        = miss_interview_length[_n-1] if 
> miss_interview_cum[_n]!=0 & miss_interview_cum[_n-1]!=0 & year~=2016
(11,737 real changes made)

. 
. sort ID year

. * create flag for long missed interview spell
. generate year_first_long_spellA             = year*(miss_interview_length>2)

. replace  year_first_long_spellA             = . if year_first_long_spellA==0
(319,736 real changes made, 319,736 to missing)

. bys ID (year): egen year_first_long_spell   = min(year_first_long_spellA)
(265882 missing values generated)

. drop year_first_long_spellA

. gen long_miss_flag                          = year>=year_first_long_spell

. 
. * create flag for any missed interview spell
. generate year_first_short_spellA             = year*(miss_interview_length>0)

. replace  year_first_short_spellA             = . if year_first_short_spellA==
> 0
(310,881 real changes made, 310,881 to missing)

. bys ID (year): egen year_first_short_spell   = min(year_first_short_spellA)
(177933 missing values generated)

. drop year_first_short_spellA

. gen short_miss_flag                          = year>=year_first_short_spell

. 
. gsort +ID -year

. gen miss_interview_last_spell               = 0

. by ID: replace miss_interview_last_spell    = 1 if miss_interview_cum[_n]!=0 
> & ( (year==2015 & ~flag2) | miss_interview_last_spell[_n-1]==1)
(1,881 real changes made)

. sort ID year

. label var miss_interview            "Missed Interview In Current Year"

. label var miss_interview_cum        "Running Tally Of Current Missed Intervie
> w Spell"

. label var miss_interview_length     "Length Of Current Missed Interview Spell
> "

. label var miss_interview_last_spell "Element Of Last Missed Interview Spell"

. 
. * identify right-censored interview spells
. generat not_missing_interview               = 1-miss_interview if year<2016
(8,984 missing values generated)

. replace not_missing_interview               = 1 if year==2016 & flag2
(2,016 real changes made)

. generat nonmissing_int_year                 = year*not_missing_interview
(6,968 missing values generated)

. bys ID (year): egen max_nonmissing_int_year = max(nonmissing_int_year)

. generat missIntLastSpell                    = (year>max_nonmissing_int_year)

. 
. * interview month of last survey year (either the last year before a 3+ misse
> d spell, the last year before a right-censored spell, or 2015)
. generat last_survey_yearA                   = year_first_long_spell-1 if year
> ==year_first_long_spell
(330,610 missing values generated)

. replace last_survey_yearA                   = max_nonmissing_int_year if year
> ==2015
(8,984 real changes made)

. 
. generat last_survey_year_hastyA             = year_first_short_spell-1 if yea
> r==year_first_short_spell
(328,233 missing values generated)

. replace last_survey_year_hastyA             = max_nonmissing_int_year if year
> ==2015
(8,827 real changes made)

. 
. bys ID (year): egen last_survey_year        = min(last_survey_yearA)

. bys ID (year): egen last_survey_year_hasty  = min(last_survey_year_hastyA)

. 
. gen last_int_dayA                           = Interview_day if year==last_sur
> vey_year
(325,827 missing values generated)

. bys ID (year): egen last_int_day            = mean(last_int_dayA)
(88911 missing values generated)

. format last_int_day %td

. 
. 
. *----------------------------------------------------------------------------
> ----
. * Some summary stats on people's missing interview behavior throughout the su
> rvey
. *----------------------------------------------------------------------------
> ----
. * get proportion of people who ever missed any number of consecutive intervie
> ws
. foreach x of numlist 1/13 {
  2.     by ID: gen miss_`x'_intA  = (miss_interview_length==`x')
  3. }

. foreach x of numlist 1/13 {
  2.     by ID: egen miss_`x'_intB  = mean(miss_`x'_intA )
  3. }

. foreach x of numlist 1/13 {
  2.     by ID: gen ever_miss_`x'_int  = (miss_`x'_intB >0)
  3. }

. drop miss_*intA miss_*intB

. 
. gen ever_miss_3plus_int = ((ever_miss_3_int)|(ever_miss_4_int)|(ever_miss_5_i
> nt)|(ever_miss_6_int)|(ever_miss_7_int)|(ever_miss_8_int)|(ever_miss_9_int)|(
> ever_miss_10_int)|(ever_miss_11_int)|(ever_miss_12_int))

. 
. * get proportion of people who return after missing any number of consecutive
>  interviews
. foreach x of numlist 1/13 {
  2.     by ID: gen return_after_`x'_miss_intA  = (miss_interview_length[_n-1]=
> =`x'  & miss_interview_length[_n]==0)
  3. }

. foreach x of numlist 1/13 {
  2.     by ID: egen return_after_`x'_miss_intB  = mean(return_after_`x'_miss_i
> ntA )
  3. }

. foreach x of numlist 1/13 {
  2.     by ID: gen ever_return_after_`x'_miss_int  = (return_after_`x'_miss_in
> tB >0)
  3. }

. drop return_after*A return_after*B

. 
. gen ever_return_after_3plus_miss_int = ((ever_return_after_3_miss_int)|(ever_
> return_after_4_miss_int)|(ever_return_after_5_miss_int)|(ever_return_after_6_
> miss_int)|(ever_return_after_7_miss_int)|(ever_return_after_8_miss_int)|(ever
> _return_after_9_miss_int)|(ever_return_after_10_miss_int)|(ever_return_after_
> 11_miss_int)|(ever_return_after_12_miss_int)|(ever_return_after_13_miss_int))

. 
. * Count number of people who have multiple missing interview spells lasting d
> ifferent lengths
. foreach x of numlist 1/13 {
  2.     count if ever_return_after_1_miss_int ==1 & ever_return_after_`x'_miss
> _int==1 & year==1997
  3. }
  3,644
  677
  373
  234
  169
  134
  134
  122
  103
  76
  66
  54
  46

. foreach x of numlist 2/13 {
  2.     count if ever_return_after_2_miss_int ==1 & ever_return_after_`x'_miss
> _int==1 & year==1997
  3. }
  936
  96
  71
  42
  24
  22
  17
  10
  6
  5
  0
  0

. foreach x of numlist 3/13 {
  2.     count if ever_return_after_3_miss_int ==1 & ever_return_after_`x'_miss
> _int==1 & year==1997
  3. }
  487
  22
  19
  16
  15
  9
  5
  5
  0
  0
  0

. foreach x of numlist 4/13 {
  2.     count if ever_return_after_4_miss_int ==1 & ever_return_after_`x'_miss
> _int==1 & year==1997
  3. }
  306
  16
  20
  6
  3
  2
  0
  0
  0
  0

. foreach x of numlist 5/13 {
  2.     count if ever_return_after_5_miss_int ==1 & ever_return_after_`x'_miss
> _int==1 & year==1997
  3. }
  204
  7
  2
  4
  0
  0
  0
  0
  0

. foreach x of numlist 6/13 {
  2.     count if ever_return_after_6_miss_int ==1 & ever_return_after_`x'_miss
> _int==1 & year==1997
  3. }
  171
  3
  0
  0
  0
  0
  0
  0

. foreach x of numlist 7/13 {
  2.     count if ever_return_after_7_miss_int ==1 & ever_return_after_`x'_miss
> _int==1 & year==1997
  3. }
  150
  0
  0
  0
  0
  0
  0

. foreach x of numlist 8/13 {
  2.     count if ever_return_after_8_miss_int ==1 & ever_return_after_`x'_miss
> _int==1 & year==1997
  3. }
  143
  0
  0
  0
  0
  0

. foreach x of numlist 9/13 {
  2.     count if ever_return_after_9_miss_int ==1 & ever_return_after_`x'_miss
> _int==1 & year==1997
  3. }
  112
  0
  0
  0
  0

. foreach x of numlist 10/13 {
  2.     count if ever_return_after_10_miss_int ==1 & ever_return_after_`x'_mis
> s_int==1 & year==1997
  3. }
  82
  0
  0
  0

. foreach x of numlist 11/13 {
  2.     count if ever_return_after_11_miss_int ==1 & ever_return_after_`x'_mis
> s_int==1 & year==1997
  3. }
  74
  0
  0

. foreach x of numlist 12/13 {
  2.     count if ever_return_after_12_miss_int ==1 & ever_return_after_`x'_mis
> s_int==1 & year==1997
  3. }
  59
  0

. foreach x of numlist 13/13 {
  2.     count if ever_return_after_13_miss_int ==1 & ever_return_after_`x'_mis
> s_int==1 & year==1997
  3. }
  52

. 
. foreach x of numlist 1/13 {
  2.     sum ever_return_after_`x'_miss_int if ever_miss_`x'_int==1 & year==199
> 7
  3. }

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
~_1_miss_int |      3,644           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
~_2_miss_int |        936           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
~_3_miss_int |        487           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
e~4_miss_int |        306           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
e~5_miss_int |        204           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
e~6_miss_int |        171           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
e~7_miss_int |        150           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
e~8_miss_int |        143           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
e~9_miss_int |        112           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
e~0_miss_int |         82           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
~11_miss_int |         74           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
~12_miss_int |         59           1           0          1          1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
~13_miss_int |         52           1           0          1          1

. 
. sum ever_return_after_3plus_miss_int if ever_miss_3plus_int==1 & year==1997

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
e~s_miss_int |      1,635           1           0          1          1

. 
. tab age_at_miss_int            if age_at_miss_int>0, mi

age_at_miss |
       _int |      Freq.     Percent        Cum.
------------+-----------------------------------
         13 |         78        0.36        0.36
         14 |        205        0.95        1.31
         15 |        346        1.61        2.92
         16 |        554        2.57        5.50
         17 |        831        3.86        9.36
         18 |      1,034        4.80       14.16
         19 |      1,198        5.57       19.72
         20 |      1,348        6.26       25.99
         21 |      1,381        6.42       32.40
         22 |      1,480        6.88       39.28
         23 |      1,585        7.36       46.64
         24 |      1,525        7.08       53.72
         25 |      1,534        7.13       60.85
         26 |      1,519        7.06       67.91
         27 |      1,230        5.71       73.62
         28 |      1,287        5.98       79.60
         29 |      1,007        4.68       84.28
         30 |      1,084        5.04       89.31
         31 |        735        3.41       92.73
         32 |        751        3.49       96.21
         33 |        415        1.93       98.14
         34 |        400        1.86      100.00
------------+-----------------------------------
      Total |     21,527      100.00

. tab age_at_miss_int birth_year if age_at_miss_int>0, mi col nofreq

age_at_mis |                       BIRTH YEAR
     s_int |      1980       1981       1982       1983       1984 |     Total
-----------+-------------------------------------------------------+----------
        13 |      0.00       0.00       0.00       0.00       2.23 |      0.36 
        14 |      0.00       0.00       0.00       3.00       2.60 |      0.95 
        15 |      0.00       0.00       2.69       3.27       3.11 |      1.61 
        16 |      0.00       2.83       3.49       3.35       3.86 |      2.57 
        17 |      3.02       4.04       4.16       4.43       3.80 |      3.86 
        18 |      4.22       4.71       5.32       4.61       5.34 |      4.80 
        19 |      5.14       5.70       5.23       5.16       6.80 |      5.57 
        20 |      5.77       5.55       5.77       7.01       7.77 |      6.26 
        21 |      5.63       5.94       6.46       7.64       6.83 |      6.42 
        22 |      6.12       7.19       7.18       6.56       7.46 |      6.88 
        23 |      6.89       8.24       6.54       7.46       7.63 |      7.36 
        24 |      7.34       6.56       7.34       7.06       7.20 |      7.08 
        25 |      6.65       7.32       6.94       7.17       7.69 |      7.13 
        26 |      6.89       6.84       6.54       7.24       8.03 |      7.06 
        27 |      6.47       6.58       6.94       7.48       0.00 |      5.71 
        28 |      5.89       6.60       7.41       0.00       9.94 |      5.98 
        29 |      6.75       6.45       0.00       9.11       0.00 |      4.68 
        30 |      7.22       0.00       9.27       0.00       9.71 |      5.04 
        31 |      0.00       7.34       0.00       9.46       0.00 |      3.41 
        32 |      7.83       0.00       8.72       0.00       0.00 |      3.49 
        33 |      0.00       8.11       0.00       0.00       0.00 |      1.93 
        34 |      8.16       0.00       0.00       0.00       0.00 |      1.86 
-----------+-------------------------------------------------------+----------
     Total |    100.00     100.00     100.00     100.00     100.00 |    100.00 


. tab year_miss_int              if year_miss_int>0, mi // show momentary inter
> view missers

year_miss_i |
         nt |      Freq.     Percent        Cum.
------------+-----------------------------------
       1998 |        598        2.78        2.78
       1999 |        776        3.60        6.38
       2000 |        904        4.20       10.58
       2001 |      1,102        5.12       15.70
       2002 |      1,088        5.05       20.76
       2003 |      1,230        5.71       26.47
       2004 |      1,482        6.88       33.35
       2005 |      1,646        7.65       41.00
       2006 |      1,425        6.62       47.62
       2007 |      1,566        7.27       54.89
       2008 |      1,494        6.94       61.83
       2009 |      1,425        6.62       68.45
       2010 |      1,505        6.99       75.44
       2011 |      1,561        7.25       82.70
       2013 |      1,844        8.57       91.26
       2015 |      1,881        8.74      100.00
------------+-----------------------------------
      Total |     21,527      100.00

. tab last_survey_year           if  year==2015 // show cumulative attrition in
>  our sample (either because of permanent attrition from NLSY or having missed
>  3+ interviews)

last_survey |
      _year |      Freq.     Percent        Cum.
------------+-----------------------------------
       1997 |        256        2.85        2.85
       1998 |        156        1.74        4.59
       1999 |        161        1.79        6.38
       2000 |        166        1.85        8.23
       2001 |        152        1.69        9.92
       2002 |        177        1.97       11.89
       2003 |        175        1.95       13.84
       2004 |        166        1.85       15.68
       2005 |         96        1.07       16.75
       2006 |        120        1.34       18.09
       2007 |         83        0.92       19.01
       2008 |         90        1.00       20.01
       2014 |        722        8.04       28.05
       2015 |      4,783       53.24       81.29
       2016 |      1,681       18.71      100.00
------------+-----------------------------------
      Total |      8,984      100.00

. tab last_survey_year_hasty     if  year==2015 // show cumulative attrition in
>  our sample if we never made use of backfilled observations

last_survey |
_year_hasty |      Freq.     Percent        Cum.
------------+-----------------------------------
       1997 |        598        6.66        6.66
       1998 |        428        4.76       11.42
       1999 |        370        4.12       15.54
       2000 |        385        4.29       19.82
       2001 |        256        2.85       22.67
       2002 |        269        2.99       25.67
       2003 |        350        3.90       29.56
       2004 |        344        3.83       33.39
       2005 |        174        1.94       35.33
       2006 |        187        2.08       37.41
       2007 |        136        1.51       38.92
       2008 |        104        1.16       40.08
       2009 |         94        1.05       41.13
       2010 |        105        1.17       42.30
       2012 |        218        2.43       44.72
       2014 |        157        1.75       46.47
       2015 |      3,775       42.02       88.49
       2016 |      1,034       11.51      100.00
------------+-----------------------------------
      Total |      8,984      100.00

. tab max_nonmissing_int_year    if year==2015 // show cumulative attrition in 
> our sample if we always used backfilled obs (i.e. if we kept super-long misse
> d spells)

max_nonmiss |
ing_int_yea |
          r |      Freq.     Percent        Cum.
------------+-----------------------------------
       2014 |      1,881       20.94       20.94
       2015 |      5,087       56.62       77.56
       2016 |      2,016       22.44      100.00
------------+-----------------------------------
      Total |      8,984      100.00

. /* See ../NLSY97AttritionSummary.xlsx for spreadsheet of last four lines */
. 
end of do-file

. 
. * Create schooling variables
. do y97_create_school.do

. *-------------------------------------
. * Generate date Graduated High School 
. *-------------------------------------
. genera Diploma_date = 239+Months_to_HS_diploma
(83,990 missing values generated)

. genera GED_date     = 239+Months_to_GED
(292,337 missing values generated)

. 
. format GED_date     %tm

. format Diploma_date %tm

. label  variable Diploma_date "Date received HS Diploma"

. label  variable GED_date     "Date received GED"

. 
. gen Diploma_year = 1960+floor(Diploma_date/12)
(83,990 missing values generated)

. gen GED_year     = 1960+floor(GED_date/12)
(292,337 missing values generated)

. 
. generat HS_date = min(Diploma_date,GED_date)
(43,919 missing values generated)

. replace HS_date = Diploma_date if ~mi(Diploma_date) &  mi(GED_date)
(0 real changes made)

. replace HS_date = GED_date     if  mi(Diploma_date) & ~mi(GED_date)
(0 real changes made)

. 
. format  HS_date %tm

. label   variable HS_date "Date received HS Diploma OR GED (or earliest one if
>  both)"

. 
. gen HS_year = 1960+floor(HS_date/12)
(43,919 missing values generated)

. 
. * Do I need these lines of code???
. * gen first_int_missed_range = First_year_missed_int-Diploma_year
. * gen last_int_missed_range = Last_year_missed_int-Diploma_year
. 
. *------------------------------------------
. * Generate date received degree variables  
. *------------------------------------------
. genera BA_date   = 239+Months_to_BA_degree
(251,970 missing values generated)

. genera AA_date   = 239+Months_to_AA_degree
(295,001 missing values generated)

. genera Prof_date = 239+Months_to_Prof_degree
(328,486 missing values generated)

. genera PhD_date  = 239+Months_to_PhD_degree
(330,817 missing values generated)

. genera MA_date   = 239+Months_to_MA_degree
(312,909 missing values generated)

. 
. generat Grad_date = min(MA_date,Prof_date,PhD_date)
(307,988 missing values generated)

. replace Grad_date = min(MA_date,Prof_date         ) if ~mi(MA_date) & ~mi(Pro
> f_date) &  mi(PhD_date)
(0 real changes made)

. replace Grad_date = min(MA_date          ,PhD_date) if ~mi(MA_date) &  mi(Pro
> f_date) & ~mi(PhD_date)
(0 real changes made)

. replace Grad_date = min(        Prof_date,PhD_date) if  mi(MA_date) & ~mi(Pro
> f_date) & ~mi(PhD_date)
(0 real changes made)

. replace Grad_date = MA_date                         if ~mi(MA_date) &  mi(Pro
> f_date) &  mi(PhD_date)
(0 real changes made)

. replace Grad_date = Prof_date                       if  mi(MA_date) & ~mi(Pro
> f_date) &  mi(PhD_date)
(0 real changes made)

. replace Grad_date = PhD_date                        if  mi(MA_date) &  mi(Pro
> f_date) & ~mi(PhD_date)
(0 real changes made)

. 
. format Grad_date %tm

. format BA_date   %tm

. format AA_date   %tm

. format Prof_date %tm

. format PhD_date  %tm

. format MA_date   %tm

. label variable Grad_date "Date received Graduate Degree (or earliest of gradu
> ate degrees if multiple)"

. label variable age       "Age (in years) on Jan 1, 1997"

. label variable BA_date   "Date received BA degree"

. label variable AA_date   "Date received AA degree"

. label variable MA_date   "Date received MA degree"

. label variable PhD_date  "Date received PhD degree"

. label variable Prof_date "Date received Professional degree"

. 
. gener BA_year   = floor(BA_date/12+1960)
(251,970 missing values generated)

. gener AA_year   = floor(AA_date/12+1960)
(295,001 missing values generated)

. gener PhD_year  = floor(PhD_date/12+1960)
(330,817 missing values generated)

. gener MA_year   = floor(MA_date/12+1960)
(312,909 missing values generated)

. gener Prof_year = floor(Prof_date/12+1960)
(328,486 missing values generated)

. gener Grad_year = floor(Grad_date/12+1960)
(307,988 missing values generated)

. label variable AA_year "Year received AA degree"

. label variable BA_year "Year received BA degree"

. label variable MA_year "Year received MA degree"

. label variable Prof_year "Year received Prof degree"

. label variable PhD_year "Year received PhD degree"

. label variable Grad_year "Year received 1st advanced (graduate) degree"

. 
. format BA_date %10.0g

. format AA_date %10.0g

. 
. gen BA_month      = mod(BA_date,12)+1
(251,970 missing values generated)

. gen AA_month      = mod(AA_date,12)+1
(295,001 missing values generated)

. gen GED_month     = mod(GED_date,12)+1
(292,337 missing values generated)

. gen Diploma_month = mod(Diploma_date,12)+1
(83,990 missing values generated)

. gen HS_month      = mod(HS_date,12)+1
(43,919 missing values generated)

. gen PhD_month     = mod(PhD_date,12)+1
(330,817 missing values generated)

. gen MA_month      = mod(MA_date,12)+1
(312,909 missing values generated)

. gen Prof_month    = mod(Prof_date,12)+1
(328,486 missing values generated)

. gen Grad_month    = mod(Grad_date,12)+1
(307,988 missing values generated)

. 
. format BA_date %tm

. format AA_date %tm

. 
. drop Months_to_BA_degree Months_to_AA_degree Months_to_MA_degree Months_to_Pr
> of_degree Months_to_PhD_degree Months_to_HS_diploma

. 
. do SchoolYrtoGrade_impute

. **to check the validity of these changes, type:
. **bys ID: assert School_Yr_to_Grade[_n+1]>=School_Yr_to_Grade[_n]
. 
. * Replace "ungraded" or other error with "."
. replace School_Yr_to_Grade = . if inrange(School_Yr_to_Grade,41,.)
(2,850 real changes made, 2,850 to missing)

. 
. * Impute Grade_t = (Grade_t+1)-1 if Grade_t is missing and person is of HS ag
> e
. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if mi(School_
> Yr_to_Grade[_n]) & ~mi(School_Yr_to_Grade[_n+1]) & age_now==17
(26 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if mi(School_
> Yr_to_Grade[_n]) & ~mi(School_Yr_to_Grade[_n+1]) & age_now==16
(72 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if mi(School_
> Yr_to_Grade[_n]) & ~mi(School_Yr_to_Grade[_n+1]) & age_now==15
(69 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if mi(School_
> Yr_to_Grade[_n]) & ~mi(School_Yr_to_Grade[_n+1]) & age_now==14
(69 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if mi(School_
> Yr_to_Grade[_n]) & ~mi(School_Yr_to_Grade[_n+1]) & age_now==13
(52 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if mi(School_
> Yr_to_Grade[_n]) & ~mi(School_Yr_to_Grade[_n+1]) & age_now==12
(38 real changes made)

. 
. * Impute Grade_t = Grade_t+k if Grade_t-1 == Grade_t+k (i.e. impute a flat gr
> ades trajectory)
. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+14] & ~mi(
> School_Yr_to_Grade[_n-1])
(0 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+13] & ~mi(
> School_Yr_to_Grade[_n-1])
(0 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+12] & ~mi(
> School_Yr_to_Grade[_n-1])
(0 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+11] & ~mi(
> School_Yr_to_Grade[_n-1])
(0 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+10] & ~mi(
> School_Yr_to_Grade[_n-1])
(0 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+9]  & ~mi(
> School_Yr_to_Grade[_n-1])
(2 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+8]  & ~mi(
> School_Yr_to_Grade[_n-1])
(4 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+7]  & ~mi(
> School_Yr_to_Grade[_n-1])
(7 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+6]  & ~mi(
> School_Yr_to_Grade[_n-1])
(9 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+5]  & ~mi(
> School_Yr_to_Grade[_n-1])
(19 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+4]  & ~mi(
> School_Yr_to_Grade[_n-1])
(25 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+3]  & ~mi(
> School_Yr_to_Grade[_n-1])
(32 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+2]  & ~mi(
> School_Yr_to_Grade[_n-1])
(44 real changes made)

. bys ID: replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if mi(School_Yr
> _to_Grade[_n]) & School_Yr_to_Grade[_n-1] == School_Yr_to_Grade[_n+1]  & ~mi(
> School_Yr_to_Grade[_n-1])
(47 real changes made)

. 
. * Impute missings linearly -- i.e. if Grade_t = 14 and Grade_t+k = 17 and all
>  the in-betweens are missing
. *k=12
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+12]-School_Yr_to_
> Grade[_n-1])/(13) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+12]<. & Scho
> ol_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2
> ]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_Grade[_n+4]>=. & School_Yr_
> to_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=. & School_Yr_to_Grade[_n+7]>=.
>  & School_Yr_to_Grade[_n+8]>=. & School_Yr_to_Grade[_n+9]>=. & School_Yr_to_G
> rade[_n+10]>=. & School_Yr_to_Grade[_n+11]>=.
(0 real changes made)

. *k=11
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+11]-School_Yr_to_
> Grade[_n-1])/(12) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+11]<. & Scho
> ol_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2
> ]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_Grade[_n+4]>=. & School_Yr_
> to_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=. & School_Yr_to_Grade[_n+7]>=.
>  & School_Yr_to_Grade[_n+8]>=. & School_Yr_to_Grade[_n+9]>=. & School_Yr_to_G
> rade[_n+10]>=.
(0 real changes made)

. *k=10
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+10]-School_Yr_to_
> Grade[_n-1])/(11) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+10]<. & Scho
> ol_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2
> ]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_Grade[_n+4]>=. & School_Yr_
> to_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=. & School_Yr_to_Grade[_n+7]>=.
>  & School_Yr_to_Grade[_n+8]>=. & School_Yr_to_Grade[_n+9]>=.
(0 real changes made)

. *k=9
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+9]-School_Yr_to_G
> rade[_n-1])/(10) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+9]<. & Schoo
> l_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2]
> >=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_Grade[_n+4]>=. & School_Yr_t
> o_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=. & School_Yr_to_Grade[_n+7]>=. 
> & School_Yr_to_Grade[_n+8]>=.
(3 real changes made)

. *k=8
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+8]-School_Yr_to_G
> rade[_n-1])/(9) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+8]<. & Schoo
> l_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2]
> >=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_Grade[_n+4]>=. & School_Yr_t
> o_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=. & School_Yr_to_Grade[_n+7]>=.
(6 real changes made)

. *k=7
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+7]-School_Yr_to_G
> rade[_n-1])/(8) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+7]<. & Schoo
> l_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2]
> >=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_Grade[_n+4]>=. & School_Yr_t
> o_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=.
(8 real changes made)

. *k=6
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+6]-School_Yr_to_G
> rade[_n-1])/(7) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+6]<. & Schoo
> l_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2]
> >=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_Grade[_n+4]>=. & School_Yr_t
> o_Grade[_n+5]>=.
(10 real changes made)

. *k=5
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+5]-School_Yr_to_G
> rade[_n-1])/(6) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+5]<. & Schoo
> l_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2]
> >=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_Grade[_n+4]>=.
(12 real changes made)

. *k=4
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+4]-School_Yr_to_G
> rade[_n-1])/(5) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+4]<. & Schoo
> l_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2]
> >=. & School_Yr_to_Grade[_n+3]>=.
(18 real changes made)

. *k=3
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+3]-School_Yr_to_G
> rade[_n-1])/(4) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+3]<. & Schoo
> l_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=. & School_Yr_to_Grade[_n+2]
> >=.
(29 real changes made)

. *k=2
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+2]-School_Yr_to_G
> rade[_n-1])/(3) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+2]<. & Schoo
> l_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=.
(36 real changes made)

. *k=1
. bys ID: replace School_Yr_to_Grade = (School_Yr_to_Grade[_n+1]-School_Yr_to_G
> rade[_n-1])/(2) + School_Yr_to_Grade[_n-1] ///
> if ///
> age_now>=12 & School_Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n+1]<. & Schoo
> l_Yr_to_Grade[_n]>=.
(43 real changes made)

. 
. /* Impute right-censored observations as flat for age > 18 (DON'T IMPUTE RIGH
> T-CENSORED OBSERVATIONS AT ALL, ACTUALLY)
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> . & School_Yr_to_Grade[_n+2]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_
> Grade[_n+4]>=. & School_Yr_to_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=. & 
> School_Yr_to_Grade[_n+7]>=. & School_Yr_to_Grade[_n+8]>=. & School_Yr_to_Grad
> e[_n+9]>=. & School_Yr_to_Grade[_n+10]>=.
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> . & School_Yr_to_Grade[_n+2]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_
> Grade[_n+4]>=. & School_Yr_to_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=. & 
> School_Yr_to_Grade[_n+7]>=. & School_Yr_to_Grade[_n+8]>=. & School_Yr_to_Grad
> e[_n+9]>=.
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> . & School_Yr_to_Grade[_n+2]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_
> Grade[_n+4]>=. & School_Yr_to_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=. & 
> School_Yr_to_Grade[_n+7]>=. & School_Yr_to_Grade[_n+8]>=.
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> . & School_Yr_to_Grade[_n+2]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_
> Grade[_n+4]>=. & School_Yr_to_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=. & 
> School_Yr_to_Grade[_n+7]>=.
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> . & School_Yr_to_Grade[_n+2]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_
> Grade[_n+4]>=. & School_Yr_to_Grade[_n+5]>=. & School_Yr_to_Grade[_n+6]>=.
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> . & School_Yr_to_Grade[_n+2]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_
> Grade[_n+4]>=. & School_Yr_to_Grade[_n+5]>=.
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> . & School_Yr_to_Grade[_n+2]>=. & School_Yr_to_Grade[_n+3]>=. & School_Yr_to_
> Grade[_n+4]>=.
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> . & School_Yr_to_Grade[_n+2]>=. & School_Yr_to_Grade[_n+3]>=.
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> . & School_Yr_to_Grade[_n+2]>=.
> replace School_Yr_to_Grade = School_Yr_to_Grade[_n-1] if age_now>=18 & School
> _Yr_to_Grade[_n-1]<. & School_Yr_to_Grade[_n]>=. & School_Yr_to_Grade[_n+1]>=
> .
> */
. 
. * Impute left-censored observations of HS age as (Grade_t+1)-1
. replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if age_now <= 18 & ag
> e_now>=12 & ~mi(School_Yr_to_Grade[_n+1]) & mi(School_Yr_to_Grade[_n-6]) &  m
> i(School_Yr_to_Grade[_n-5]) & mi(School_Yr_to_Grade[_n-4]) & mi(School_Yr_to_
> Grade[_n-3]) & mi(School_Yr_to_Grade[_n-2]) & mi(School_Yr_to_Grade[_n-1]) & 
> mi(School_Yr_to_Grade[_n]  )
(0 real changes made)

. replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if age_now <= 18 & ag
> e_now>=12 & ~mi(School_Yr_to_Grade[_n+1]) & mi(School_Yr_to_Grade[_n-5]) &  m
> i(School_Yr_to_Grade[_n-4]) & mi(School_Yr_to_Grade[_n-3]) & mi(School_Yr_to_
> Grade[_n-2]) & mi(School_Yr_to_Grade[_n-1]) & mi(School_Yr_to_Grade[_n]  )
(0 real changes made)

. replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if age_now <= 18 & ag
> e_now>=12 & ~mi(School_Yr_to_Grade[_n+1]) & mi(School_Yr_to_Grade[_n-4]) &  m
> i(School_Yr_to_Grade[_n-3]) & mi(School_Yr_to_Grade[_n-2]) & mi(School_Yr_to_
> Grade[_n-1]) & mi(School_Yr_to_Grade[_n]  )
(0 real changes made)

. replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if age_now <= 18 & ag
> e_now>=12 & ~mi(School_Yr_to_Grade[_n+1]) & mi(School_Yr_to_Grade[_n-3]) &  m
> i(School_Yr_to_Grade[_n-2]) & mi(School_Yr_to_Grade[_n-1]) & mi(School_Yr_to_
> Grade[_n]  )
(0 real changes made)

. replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if age_now <= 18 & ag
> e_now>=12 & ~mi(School_Yr_to_Grade[_n+1]) & mi(School_Yr_to_Grade[_n-2]) &  m
> i(School_Yr_to_Grade[_n-1]) & mi(School_Yr_to_Grade[_n]  )
(0 real changes made)

. replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if age_now <= 18 & ag
> e_now>=12 & ~mi(School_Yr_to_Grade[_n+1]) & mi(School_Yr_to_Grade[_n-1]) &  m
> i(School_Yr_to_Grade[_n]  )
(0 real changes made)

. replace School_Yr_to_Grade = School_Yr_to_Grade[_n+1]-1 if age_now <= 18 & ag
> e_now>=12 & ~mi(School_Yr_to_Grade[_n+1]) & mi(School_Yr_to_Grade[_n]  ) 
(0 real changes made)

. 
. replace School_Yr_to_Grade = . if year>=2008
(0 real changes made)

. replace School_Yr_to_Grade = age_now-6 if year==1997 & inlist(ID,829,1242,134
> 0,1529,2413,2974,3376,4566,6357,6853,8364,8664)
(12 real changes made)

. 
. replace School_Yr_to_Grade = 7 if ID==383 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==5002 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 9 if ID==319 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 7 if ID==381 & year==1994
(1 real change made)

. replace School_Yr_to_Grade = 8 if ID==381 & year==1995
(1 real change made)

. replace School_Yr_to_Grade = 9 if ID==381 & year==1996
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==381 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 11 if ID==381 & year==1998
(1 real change made)

. 
. replace School_Yr_to_Grade = 7 if ID==692 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==1139 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==1372 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 9 if ID==1507 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==1613 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==2460 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 6 if ID==2852 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 9 if ID==3720 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==3781 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 7 if ID==3798 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==3948 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 7 if ID==4225 & year==1994
(1 real change made)

. replace School_Yr_to_Grade = 8 if ID==4225 & year==1995
(1 real change made)

. replace School_Yr_to_Grade = 9 if ID==4225 & year==1996
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==4225 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==4232 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==4567 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==4605 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==4925 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 7 if ID==4964 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 9 if ID==6300 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==6356 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 8 if ID==7459 & year==1997
(1 real change made)

. 
. replace School_Yr_to_Grade = 6 if ID==8191 & year==1997
(1 real change made)

. 
. 
. * Hand-coding a few more:
. replace School_Yr_to_Grade = 10 if ID==120 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==124 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==330 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = Highest_Grade_Completed+2 if ID==436 & year>=199
> 6 & year<=2000
(5 real changes made, 5 to missing)

. replace School_Yr_to_Grade = Highest_Grade_Completed+1 if ID==769 & year>=199
> 4 & year<=1999
(6 real changes made, 6 to missing)

. replace School_Yr_to_Grade = 10 if ID==1069 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 9  if ID==1742 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==2034 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==2269 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = Highest_Grade_Completed+2 if ID==2725 & year>=19
> 96 & year<=2000
(5 real changes made, 5 to missing)

. replace School_Yr_to_Grade = 9  if ID==3158 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 8  if ID==3208 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==3355 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 9  if ID==3567 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==4233 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = Highest_Grade_Completed if ID==4404 & year>=1994
>  & year<=1997
(4 real changes made, 4 to missing)

. replace School_Yr_to_Grade = 10 if ID==4823 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 9  if ID==5074 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 9  if ID==5527 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==6404 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==6527 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = Highest_Grade_Completed+1 if ID==6663 & year>=19
> 94 & year<=1997
(4 real changes made, 4 to missing)

. replace School_Yr_to_Grade = 10 if ID==6673 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 9  if ID==6916 & year==1996
(1 real change made)

. replace School_Yr_to_Grade = 11 if ID==6999 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==7127 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = Highest_Grade_Completed+1 if ID==7620 & year>=19
> 97 & year<=2001
(5 real changes made, 4 to missing)

. replace School_Yr_to_Grade = Highest_Grade_Completed+2 if ID==7715 & year>=19
> 96 & year<=1998
(3 real changes made, 3 to missing)

. replace School_Yr_to_Grade = 8  if ID==8295 & year==1995
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==8331 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 9  if ID==8517 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 11 if ID==1255 & year==1997
(1 real change made)

. replace School_Yr_to_Grade = 10 if ID==2429 & year==1997
(1 real change made)

. 
. 
. /* People still in "Other Activities" at age 13: (they look like drop-outs)
> 620
> 1256
> 1523
> */ 
. 
. /* People still in "Other Activities" at age 14: (they look like drop-outs)
> 620
> 1256
> 1523
> */ 
. 
. /*
>         +-----------------------------------------------------+
>         |   id   year   age         hgc   grade_~t   annual~k |
>         |-----------------------------------------------------|
>   1551. |  120   1997    14   8TH GRADE         .v          0 |
>   1583. |  124   1997    14   8TH GRADE         .v          0 |
>   4163. |  330   1997    14   8TH GRADE         .v          0 |
>   5524. |  436   1997    14   8TH GRADE         .v          0 |
>   5755. |  453   1997    14   7TH GRADE         .v          0 |
>         |-----------------------------------------------------|
>   7885. |  620   1995    14   2ND GRADE         .v       1040 |
>   9808. |  769   1995    14   9TH GRADE         .v       1420 |
>  13627. | 1069   1997    14   9TH GRADE         .v          0 |
>  19531. | 1523   1999    14   5TH GRADE         .v          0 |
>  22252. | 1742   1997    14   8TH GRADE         .v          0 |
>         |-----------------------------------------------------|
>  25997. | 2034   1997    14   9TH GRADE         .v          0 |
>  29071. | 2269   1997    14   8TH GRADE         .v          0 |
>  34111. | 2657   1997    14   8TH GRADE         .v          0 |
>  35048. | 2725   1997    14   8TH GRADE         .v          0 |
>  35526. | 2760   1996    14   5TH GRADE         .v          0 |
>         |-----------------------------------------------------|
>  40620. | 3158   1997    14   7TH GRADE         .v          0 |
>  41246. | 3208   1997    14   7TH GRADE         .v          0 |
>  43172. | 3355   1997    14   8TH GRADE         .v          0 |
>  45846. | 3567   1997    14   7TH GRADE         .v          0 |
>  50548. | 3931   1997    14   6TH GRADE         .v          0 |
>         |-----------------------------------------------------|
>  50572. | 3933   1995    14   6TH GRADE         .v        925 |
>  54605. | 4233   1997    14   9TH GRADE         .v          0 |
>  56846. | 4404   1995    14   8TH GRADE         .v          0 |
>  62306. | 4823   1997    14   8TH GRADE         .v          0 |
>  64602. | 5002   1998    14   9TH GRADE         .v          0 |
>         |-----------------------------------------------------|
>  65576. | 5074   1997    14   7TH GRADE         .v          0 |
>  65950. | 5105   1997    14   7TH GRADE         .v          0 |
>  68821. | 5324   1997    14   6TH GRADE         .v          0 |
>  71504. | 5527   1997    14   7TH GRADE         .v          0 |
>  83084. | 6404   1997    14   9TH GRADE         .v          0 |
>         |-----------------------------------------------------|
>  84687. | 6527   1997    14   8TH GRADE         .v          0 |
>  86392. | 6663   1995    14   8TH GRADE         .v       1196 |
>  86512. | 6673   1997    14   8TH GRADE         .v          0 |
>  88441. | 6822   1999    14   8TH GRADE         .v          0 |
>  89657. | 6916   1996    14   6TH GRADE         .v          0 |
>         |-----------------------------------------------------|
>  89784. | 6925   1997    14   8TH GRADE         .v          0 |
>  90731. | 6999   1997    14   9TH GRADE         .v          0 |
>  92387. | 7127   1997    14   8TH GRADE         .v          0 |
>  95474. | 7353   1997    14   8TH GRADE         .v          0 |
>  99004. | 7620   1998    14   9TH GRADE         .v          0 |
>         |-----------------------------------------------------|
> 100219. | 7715   1997    14   6TH GRADE         .v          0 |
> 100842. | 7762   1998    14   6TH GRADE         .v          0 |
> 107958. | 8295   1995    14   5TH GRADE         .v          0 |
> 108458. | 8331   1997    14   8TH GRADE         .v          0 |
> 110849. | 8517   1997    14   7TH GRADE         .v          0 |
>         |-----------------------------------------------------|
> 112484. | 8636   1999    14   5TH GRADE         .v          0 |
>         +-----------------------------------------------------+
> */
. 
. /* IDs who are NOT in school at age 14:
>  120: replace School_Yr_to_Grade = 10 if ID==120 & year==1997
>  124: replace School_Yr_to_Grade = 10 if ID==124 & year==1997
>  330: replace School_Yr_to_Grade = 10 if ID==330 & year==1997
>  436: replace School_Yr_to_Grade = Highest_Grade_Completed+2 if ID==436 & yea
> r>=1996 & year<=2000
>  453: looks OK
>  620: looks OK
>  769: replace School_Yr_to_Grade = Highest_Grade_Completed+1 if ID==769 & yea
> r>=1994 & year<=1999
> 1069: replace School_Yr_to_Grade = 10 if ID==1069 & year==1997
> 1523: looks OK
> 1742: replace School_Yr_to_Grade = 9  if ID==1742 & year==1997
> 2034: replace School_Yr_to_Grade = 10 if ID==2034 & year==1997
> 2269: replace School_Yr_to_Grade = 10 if ID==2269 & year==1997
> 2657: looks OK
> 2725: replace School_Yr_to_Grade = Highest_Grade_Completed+2 if ID==2725 & ye
> ar>=1996 & year<=2000
> 2760: looks OK
> 3158: replace School_Yr_to_Grade = 9  if ID==3158 & year==1997
> 3208: replace School_Yr_to_Grade = 8  if ID==3208 & year==1997
> 3355: replace School_Yr_to_Grade = 10 if ID==3355 & year==1997
> 3567: replace School_Yr_to_Grade = 9  if ID==3567 & year==1997
> 3931: looks OK
> 3933: looks OK
> 4233: replace School_Yr_to_Grade = 10 if ID==4233 & year==1997
> 4404: replace School_Yr_to_Grade = Highest_Grade_Completed if ID==4404 & year
> >=1994 & year<=1997
> 4823: replace School_Yr_to_Grade = 10 if ID==4823 & year==1997
> 5002: looks OK
> 5074: replace School_Yr_to_Grade = 9  if ID==5074 & year==1997
> 5105: looks OK
> 5324: looks OK
> 5527: replace School_Yr_to_Grade = 9  if ID==5527 & year==1997
> 6404: replace School_Yr_to_Grade = 10 if ID==6404 & year==1997
> 6527: replace School_Yr_to_Grade = 10 if ID==6527 & year==1997
> 6663: replace School_Yr_to_Grade = Highest_Grade_Completed+1 if ID==6663 & ye
> ar>=1994 & year<=1997
> 6673: replace School_Yr_to_Grade = 10 if ID==6673 & year==1997
> 6822: looks OK
> 6916: replace School_Yr_to_Grade = 9  if ID==6916 & year==1996
> 6925: looks OK
> 6999: replace School_Yr_to_Grade = 11 if ID==6999 & year==1997
> 7127: replace School_Yr_to_Grade = 10 if ID==7127 & year==1997
> 7353: looks OK
> 7620: replace School_Yr_to_Grade = Highest_Grade_Completed+1 if ID==7620 & ye
> ar>=1997 & year<=2001
> 7715: replace School_Yr_to_Grade = Highest_Grade_Completed+2 if ID==7715 & ye
> ar>=1996 & year<=1998
> 7762: looks OK
> 8295: replace School_Yr_to_Grade = 8  if ID==8295 & year==1995
> 8331: replace School_Yr_to_Grade = 10 if ID==8331 & year==1997
> 8517: replace School_Yr_to_Grade = 9  if ID==8517 & year==1997
> 8636: looks OK
> 1255: replace School_Yr_to_Grade = 11 if ID==1255 & year==1997
> 1256: looks OK
> 2429: replace School_Yr_to_Grade = 10 if ID==2429 & year==1997
> 2546: looks OK
> 2645: looks OK
> 3003: looks OK
> 4923: looks OK
> 6802: looks OK
> */
. 
. exit

end of do-file

. do BA_impute

. **************************************************
. * This do-file identifies individuals who reported
. * receiving a BA or higher, but did not report the
. * date of that BA
. **************************************************
. 
. * generate a list of IDs in question
. qui tab ID if inrange(Highest_degree_ever_cum,4,7) & year==2012 & mi(BA_date)

. disp "Number of individuals for whom to impute graduation date: `r(r)'"
Number of individuals for whom to impute graduation date: 181

. 
. * create a numlist from this (to loop over)
. preserve

.         tempfile BAimp

.         keep if inrange(Highest_degree_ever_cum,4,7) & mi(BA_date)
(325,711 observations deleted)

.         
.         * get last month and last year enrolled in undergraduate institution 
> for these people
.         foreach months in Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec {
  2.                 gen undergrad`months' = 1 if College_enrollment_`months'==
> 3
  3.         }
(5,685 missing values generated)
(5,703 missing values generated)
(5,712 missing values generated)
(5,718 missing values generated)
(5,727 missing values generated)
(5,802 missing values generated)
(5,806 missing values generated)
(5,674 missing values generated)
(5,638 missing values generated)
(5,636 missing values generated)
(5,644 missing values generated)
(5,658 missing values generated)

.         egen monthsUndergrad = rowtotal(undergrad???)

.         
.         generat lastMonthUndergrad = .
(6,697 missing values generated)

.         replace lastMonthUndergrad = 1  if ~mi(undergradJan) & mi(undergradFe
> b) & mi(undergradMar) & mi(undergradApr) & mi(undergradMay) & mi(undergradJun
> ) & mi(undergradJul) & mi(undergradAug) & mi(undergradSep) & mi(undergradOct)
>  & mi(undergradNov) & mi(undergradDec)
(19 real changes made)

.         replace lastMonthUndergrad = 2  if ~mi(undergradFeb) & mi(undergradMa
> r) & mi(undergradApr) & mi(undergradMay) & mi(undergradJun) & mi(undergradJul
> ) & mi(undergradAug) & mi(undergradSep) & mi(undergradOct) & mi(undergradNov)
>  & mi(undergradDec)
(8 real changes made)

.         replace lastMonthUndergrad = 3  if ~mi(undergradMar) & mi(undergradAp
> r) & mi(undergradMay) & mi(undergradJun) & mi(undergradJul) & mi(undergradAug
> ) & mi(undergradSep) & mi(undergradOct) & mi(undergradNov) & mi(undergradDec)
(9 real changes made)

.         replace lastMonthUndergrad = 4  if ~mi(undergradApr) & mi(undergradMa
> y) & mi(undergradJun) & mi(undergradJul) & mi(undergradAug) & mi(undergradSep
> ) & mi(undergradOct) & mi(undergradNov) & mi(undergradDec)
(11 real changes made)

.         replace lastMonthUndergrad = 5  if ~mi(undergradMay) & mi(undergradJu
> n) & mi(undergradJul) & mi(undergradAug) & mi(undergradSep) & mi(undergradOct
> ) & mi(undergradNov) & mi(undergradDec)
(68 real changes made)

.         replace lastMonthUndergrad = 6  if ~mi(undergradJun) & mi(undergradJu
> l) & mi(undergradAug) & mi(undergradSep) & mi(undergradOct) & mi(undergradNov
> ) & mi(undergradDec)
(12 real changes made)

.         replace lastMonthUndergrad = 7  if ~mi(undergradJul) & mi(undergradAu
> g) & mi(undergradSep) & mi(undergradOct) & mi(undergradNov) & mi(undergradDec
> )
(6 real changes made)

.         replace lastMonthUndergrad = 8  if ~mi(undergradAug) & mi(undergradSe
> p) & mi(undergradOct) & mi(undergradNov) & mi(undergradDec)
(8 real changes made)

.         replace lastMonthUndergrad = 9  if ~mi(undergradSep) & mi(undergradOc
> t) & mi(undergradNov) & mi(undergradDec)
(5 real changes made)

.         replace lastMonthUndergrad = 10 if ~mi(undergradOct) & mi(undergradNo
> v) & mi(undergradDec)
(12 real changes made)

.         replace lastMonthUndergrad = 11 if ~mi(undergradNov) & mi(undergradDe
> c)
(23 real changes made)

.         replace lastMonthUndergrad = 12 if ~mi(undergradDec)
(1,039 real changes made)

.         replace lastMonthUndergrad = .  if monthsUndergrad==1 & lastMonthUnde
> rgrad>1 & ~mi(lastMonthUndergrad) // to correct for survey error
(9 real changes made, 9 to missing)

.         
.         generat YrEnrUndergrad = year*(~mi(lastMonthUndergrad))

.         generat MoEnrUndergrad = lastMonthUndergrad*(~mi(lastMonthUndergrad))
(5,486 missing values generated)

.         bys ID: egen LastYrEnrUndergrad = max(YrEnrUndergrad)

.         recode LastYrEnrUndergrad (0 = .)
(LastYrEnrUndergrad: 222 changes made)

.         gen LastMoEnrUndergradA = MoEnrUndergrad if year==LastYrEnrUndergrad
(6,522 missing values generated)

.         bys ID: egen LastMoEnrUndergrad = mean(LastMoEnrUndergradA)
(222 missing values generated)

.         
.         * l ID year lastMonthUndergrad YrEnrUndergrad LastYrEnrUndergrad MoEn
> rUndergrad LastMoEnrUndergrad if inlist(ID,135,245,294,301,305) & year>1996, 
> sepby(ID)
.         mdesc LastYrEnrUndergrad LastMoEnrUndergrad
     Variable      Missing      Total     Missing/Total
    ------------------------------------------------------------
LastYrEnrU~d         222        6697        .033149
LastMoEnrU~d         222        6697        .033149

.         keep ID year LastYrEnrUndergrad LastMoEnrUndergrad

.         save `BAimp', replace
(note: file /tmp/St27967.000002 not found)
file /tmp/St27967.000002 saved

. restore

. 
. * impute the month after this as the graduation date
. merge 1:1 ID year using `BAimp', nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                       325,711
        from master                   325,711  
        from using                          0  

    matched                             6,697  
    -----------------------------------------

. 
. replace BA_month = LastMoEnrUndergrad   if mi(BA_month) & ~mi(LastMoEnrUnderg
> rad)
(6,475 real changes made)

. replace BA_year  = LastYrEnrUndergrad   if mi(BA_year ) & ~mi(LastYrEnrUnderg
> rad)
(6,475 real changes made)

. replace BA_date  = ym(BA_year,BA_month) if mi(BA_date ) & ~mi(LastYrEnrUnderg
> rad)
(6,475 real changes made)

. 
. drop LastMoEnrUndergrad LastYrEnrUndergrad

. 
. *------------------------------------------------------
. * take away grad degrees that appear to be mis-reported
. *------------------------------------------------------
. replace Grad_date  = . if inlist(ID,435,2762,7852)
(111 real changes made, 111 to missing)

. replace Grad_year  = . if inlist(ID,435,2762,7852)
(111 real changes made, 111 to missing)

. replace Grad_month = . if inlist(ID,435,2762,7852)
(111 real changes made, 111 to missing)

. 
end of do-file

. do Diploma_impute

. * replace Diploma=1 if ID==12 | ID==18 | ID==43 | ID==65 | ID==83 | ID==96 | 
> ID==157 | ID==220 | ID==272 | ID==273 | ID==371 | ID==440 | ID==509 | ID==510
>  | ID==523 | ID==540 | ID==548 | ID==557 | ID==561 | ID==582 | ID==585 | ID==
> 589 | ID==591 | ID==607 | ID==675 | ID==716 | ID==745 | ID==790 | ID==875 | I
> D==884 | ID==886 | ID==897 | ID==925 | ID==961 | ID==968 | ID==984 | ID==993 
> | ID==1054 | ID==1124 | ID==1146 | ID==1345 | ID==1409 | ID==1418 | ID==1422 
> | ID==1432 | ID==1510 | ID==1527 | ID==1638 | ID==1754 | ID==1792 | ID==1799 
> | ID==1843 | ID==1856 | ID==1862 | ID==1875 | ID==1883 | ID==1914 | ID==1923 
> | ID==1934 | ID==1942 | ID==1951 | ID==2025 | ID==2044 | ID==2102 | ID==2121 
> | ID==2122 | ID==2153 | ID==2156 | ID==2169 | ID==2174 | ID==2202 | ID==2213 
> | ID==2220 | ID==2232 | ID==2295 | ID==2306 | ID==2348 | ID==2360 | ID==2370 
> | ID==2380 | ID==2390 | ID==2397 | ID==2406 | ID==2422 | ID==2454 | ID==2456 
> | ID==2573 | ID==2608 | ID==2688 | ID==2727 | ID==2731 | ID==2751 | ID==2757 
> | ID==2802 | ID==2803 | ID==2827 | ID==2830 | ID==2887 | ID==2917 | ID==2991 
> | ID==3004 | ID==3006 | ID==3008 | ID==3011 | ID==3013 | ID==3015 | ID==3024 
> | ID==3051 | ID==3077 | ID==3080 | ID==3081 | ID==3093 | ID==3165 | ID==3223 
> | ID==3235 | ID==3239 | ID==3266 | ID==3317 | ID==3321 | ID==3349 | ID==3351 
> | ID==3368 | ID==3456 | ID==3492 | ID==3506 | ID==3508 | ID==3575 | ID==3597 
> | ID==3730 | ID==3736 | ID==3764 | ID==3793 | ID==3891 | ID==3897 | ID==3998 
> | ID==4081 | ID==4098 | ID==4107 | ID==4123 | ID==4124 | ID==4255 | ID==4333 
> | ID==4362 | ID==4364 | ID==4372 | ID==4396 | ID==4410 | ID==4419 | ID==4431 
> | ID==4455 | ID==4458 | ID==4467 | ID==4532 | ID==4553 | ID==4564 | ID==4575 
> | ID==4581 | ID==4583 | ID==4618 | ID==4630 | ID==4636 | ID==4641 | ID==4647 
> | ID==4653 | ID==4663 | ID==4688 | ID==4735 | ID==4792 | ID==4795 | ID==4833 
> | ID==4893 | ID==5030 | ID==5036 | ID==5072 | ID==5108 | ID==5128 | ID==5134 
> | ID==5143 | ID==5146 | ID==5177 | ID==5198 | ID==5257 | ID==5272 | ID==5278 
> | ID==5292 | ID==5344 | ID==5378 | ID==5392 | ID==5420 | ID==5438 | ID==5442 
> | ID==5452 | ID==5474 | ID==5485 | ID==5499 | ID==5529 | ID==5577 | ID==5684 
> | ID==5769 | ID==5798 | ID==5807 | ID==5962 | ID==5983 | ID==6019 | ID==6056 
> | ID==6126 | ID==6133 | ID==6239 | ID==6291 | ID==6338 | ID==6343 | ID==6417 
> | ID==6440 | ID==6467 | ID==6482 | ID==6542 | ID==6545 | ID==6574 | ID==6646 
> | ID==6650 | ID==6683 | ID==6704 | ID==6741 | ID==6826 | ID==6889 | ID==6932 
> | ID==6945 | ID==6976 | ID==6977 | ID==6978 | ID==6991 | ID==7056 | ID==7070 
> | ID==7091 | ID==7193 | ID==7301 | ID==7315 | ID==7426 | ID==7440 | ID==7525 
> | ID==7575 | ID==7612 | ID==7613 | ID==7631 | ID==7652 | ID==7686 | ID==7694 
> | ID==7708 | ID==7712 | ID==7720 | ID==7737 | ID==7897 | ID==7939 | ID==7999 
> | ID==8082 | ID==8088 | ID==8114 | ID==8179 | ID==8201 | ID==8214 | ID==8277 
> | ID==8309 | ID==8315 | ID==8357 | ID==8498 | ID==8533 | ID==8557 | ID==8572 
> | ID==8579 | ID==8614 | ID==8712 | ID==8817 | ID==8909
. 
. replace Highest_Grade_Completed = 9  if ID==7652 & year==1998
(1 real change made)

. replace Highest_Grade_Completed = 10 if ID==7652 & year==1999
(1 real change made)

. replace Highest_Grade_Completed = 11 if ID==7652 & year==2000
(1 real change made)

. replace Highest_Grade_Completed = 12 if ID==7652 & year==2001
(1 real change made)

. 
. replace BA_year       = 2008 if ID==96
(37 real changes made)

. replace BA_month      = 5    if ID==96
(37 real changes made)

. 
. /*
> replace Diploma_year  = 2004 if ID==96   & Diploma_year >=.
> replace Diploma_month = 6    if ID==96   & Diploma_month>=.
> 
> replace Diploma_year  = 1999 if ID==2397 & Diploma_year >=.
> replace Diploma_month = 6    if ID==2397 & Diploma_month>=.
> 
> replace Diploma_year  = 2003 if ID==4532 & Diploma_year >=.
> replace Diploma_month = 6    if ID==4532 & Diploma_month>=.
> 
> replace Diploma_year  = 2003 if ID==65   & Diploma_year >=.
> replace Diploma_month = 6    if ID==65   & Diploma_month>=.
> 
> replace Diploma_year  = 2001 if ID==7652 & Diploma_year >=.
> replace Diploma_month = 6    if ID==7652 & Diploma_month>=.
> */
. 
. * Impute HS graduation date as June of year HGC transitioned from 12 to 13
. genera yr12Grade = Highest_Grade_Completed[_n-1]<12 & inrange(Highest_Grade_C
> ompleted[_n],12,.)

. genera year12Grade = year*yr12Grade

. recode year12Grade (0=.)
(year12Grade: 326836 changes made)

. drop   yr12Grade

. bys ID: egen yr12Grade = max(year12Grade)
(126281 missing values generated)

. 
. replace Diploma_year = yr12Grade if mi(Diploma_year)
(9,990 real changes made)

. replace Diploma_year = 2001      if ID==96
(37 real changes made)

. replace Diploma_month = 6        if mi(Diploma_month) & ~mi(Diploma_year)
(10,027 real changes made)

. * replace Diploma = 1              if ~mi(Diploma_year)
. 
. replace HS_year  = Diploma_year                 if ~mi(Diploma_year ) &  mi(G
> ED_year )
(1,924 real changes made)

. replace HS_year  = GED_year                     if  mi(Diploma_year ) & ~mi(G
> ED_year )
(0 real changes made)

. replace HS_month = Diploma_month                if ~mi(Diploma_month) &  mi(G
> ED_month)
(1,924 real changes made)

. replace HS_month = GED_month                    if  mi(Diploma_month) & ~mi(G
> ED_month)
(0 real changes made)

. replace HS_year  = min(Diploma_year,GED_year)   if ~mi(Diploma_year ) & ~mi(G
> ED_year )
(407 real changes made)

. replace HS_month = min(Diploma_month,GED_month) if ~mi(Diploma_month) & ~mi(G
> ED_month)
(3,737 real changes made)

. 
end of do-file

. 
. *-------------------------------------------------------------
. * Get the Schooling Status for each person -- NOTE "college"  
. * now refers to college OR grad schoolto match up with 79 data
. * (TMR, 1/17/12)                                              
. *-------------------------------------------------------------
. local months Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec

. local SchoolMonths Jan Feb Mar Apr May Sep Oct Nov Dec

. foreach month of local months {
  2.     gen Enrolled_K12_`month'         = School_Enrollment_Status_`month'==2
  3.     gen Enrolled_college_`month'     = inrange(College_enrollment_`month',
> 2,4)
  4.     gen Enrolled_2yr_`month'         = inrange(College_enrollment_`month',
> 2,2)
  5.     gen Enrolled_4yr_`month'         = inrange(College_enrollment_`month',
> 3,3)
  6.     gen Enrolled_grad_school_`month' = inrange(College_enrollment_`month',
> 4,4)
  7. }   

. foreach month of local SchoolMonths {
  2.     replace Enrolled_K12_`month'         = 1 if ~mi(School_Yr_to_Grade) & 
> Enrolled_K12_`month'==0 & year<=1997
  3. }
(85,022 real changes made)
(83,853 real changes made)
(82,326 real changes made)
(80,586 real changes made)
(79,000 real changes made)
(77,025 real changes made)
(77,038 real changes made)
(77,061 real changes made)
(77,095 real changes made)

. 
. egen Months_in_K12         = rowtotal(Enrolled_K12_Jan Enrolled_K12_Feb Enrol
> led_K12_Mar Enrolled_K12_Apr Enrolled_K12_May Enrolled_K12_Jun Enrolled_K12_J
> ul Enrolled_K12_Aug Enrolled_K12_Sep Enrolled_K12_Oct Enrolled_K12_Nov Enroll
> ed_K12_Dec)

. egen Months_in_college     = rowtotal(Enrolled_college_Jan Enrolled_college_F
> eb Enrolled_college_Mar Enrolled_college_Apr Enrolled_college_May Enrolled_co
> llege_Jun Enrolled_college_Jul Enrolled_college_Aug Enrolled_college_Sep Enro
> lled_college_Oct Enrolled_college_Nov Enrolled_college_Dec)

. egen Months_in_2yr         = rowtotal(Enrolled_2yr_Jan Enrolled_2yr_Feb Enrol
> led_2yr_Mar Enrolled_2yr_Apr Enrolled_2yr_May Enrolled_2yr_Jun Enrolled_2yr_J
> ul Enrolled_2yr_Aug Enrolled_2yr_Sep Enrolled_2yr_Oct Enrolled_2yr_Nov Enroll
> ed_2yr_Dec)

. egen Months_in_4yr         = rowtotal(Enrolled_4yr_Jan Enrolled_4yr_Feb Enrol
> led_4yr_Mar Enrolled_4yr_Apr Enrolled_4yr_May Enrolled_4yr_Jun Enrolled_4yr_J
> ul Enrolled_4yr_Aug Enrolled_4yr_Sep Enrolled_4yr_Oct Enrolled_4yr_Nov Enroll
> ed_4yr_Dec)

. egen Months_in_grad_school = rowtotal(Enrolled_grad_school_Jan Enrolled_grad_
> school_Feb Enrolled_grad_school_Mar Enrolled_grad_school_Apr Enrolled_grad_sc
> hool_May Enrolled_grad_school_Jun Enrolled_grad_school_Jul Enrolled_grad_scho
> ol_Aug Enrolled_grad_school_Sep Enrolled_grad_school_Oct Enrolled_grad_school
> _Nov Enrolled_grad_school_Dec)

. gen  Months_in_school      = Months_in_K12 + Months_in_college

. gen  weeksSchool           = floor(Months_in_school*52/12)

. 
. gen In_K12 = inrange(Months_in_K12,1,.)

. gen In_college = inrange(Months_in_college,1,.) | inrange(Months_in_grad_scho
> ol,1,.)

. gen In_grad_school = inrange(Months_in_grad_school,1,.)

. 
. *-------------------------------------------------------------
. * change HS dates for those who report graduation from HS but are enrolled in
>  college before then (and not concurrently in HS)
. *-------------------------------------------------------------
. * 1. get last date enrolled in K12
. local months Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec

. foreach month of local months {
  2.     gen lastValidK12A`month' = mdy(month(date("`month'","M")),1,year) if E
> nrolled_K12_`month'==1
  3.     bys ID (year): egen lastValidK12`month' = max(lastValidK12A`month')
  4. }
(219,326 missing values generated)
(37 missing values generated)
(219,741 missing values generated)
(37 missing values generated)
(219,809 missing values generated)
(37 missing values generated)
(219,883 missing values generated)
(37 missing values generated)
(220,048 missing values generated)
(37 missing values generated)
(308,342 missing values generated)
(59385 missing values generated)
(328,004 missing values generated)
(218300 missing values generated)
(313,572 missing values generated)
(80105 missing values generated)
(226,721 missing values generated)
(37 missing values generated)
(226,764 missing values generated)
(37 missing values generated)
(226,732 missing values generated)
(37 missing values generated)
(227,023 missing values generated)
(37 missing values generated)

. egen lastValidK12 = rowmax(lastValidK12Jan lastValidK12Feb lastValidK12Mar la
> stValidK12Apr lastValidK12May lastValidK12Jun lastValidK12Jul lastValidK12Aug
>  lastValidK12Sep lastValidK12Oct lastValidK12Nov lastValidK12Dec)
(37 missing values generated)

. format lastValidK12 %td

. 
. * 2. flag the people who ever are enrolled in college before HS graduation (a
> nd not concurrently in HS)
. foreach month of local months {
  2.     gen byte collegeflag2`month' = ~mi(HS_date) & Enrolled_college_`month'
> ==1 & Enrolled_K12_`month'==0 & mdy(month(date("`month'","M")),1,year)<=mdy(H
> S_month,1,HS_year)
  3.     gen everColBefHSgradA`month' = collegeflag2`month'==1
  4.     bys ID (year): egen everColBefHSgrad`month' = max(everColBefHSgradA`mo
> nth')
  5. }

. egen everColBefHSgrad = rowmax(everColBefHSgradJan everColBefHSgradFeb everCo
> lBefHSgradMar everColBefHSgradApr everColBefHSgradMay everColBefHSgradJun eve
> rColBefHSgradJul everColBefHSgradAug everColBefHSgradSep everColBefHSgradOct 
> everColBefHSgradNov everColBefHSgradDec)

. replace everColBefHSgrad = 1 if inlist(ID,440,523,548,557,585,607,884,1345,18
> 83,1914,1942,2121,2156,2232,2380,2887,3235,3321,3764,3793,3897,4123,4362,4372
> ,4419,4431,4553,4564,4618,5036,5128,5143,5177,5452,5499,5769,6343,6417,6704,6
> 977,6991,7193,7652,7939,8214,8405,8498)
(481 real changes made)

. 
. * 3. change HS date for the people who ever are enrolled in college before HS
>  graduation (and not concurrently in HS)
. gen HS_year2  = year(lastValidK12)  if everColBefHSgrad
(327,487 missing values generated)

. gen HS_month2 = month(lastValidK12) if everColBefHSgrad
(327,487 missing values generated)

. 
. replace HS_year  = HS_year2  if everColBefHSgrad
(3,071 real changes made)

. replace HS_month = HS_month2 if everColBefHSgrad
(4,033 real changes made)

. 
. replace Diploma_year  = HS_year2  if everColBefHSgrad & ~mi(Diploma_year )
(1,998 real changes made)

. replace Diploma_month = HS_month2 if everColBefHSgrad & ~mi(Diploma_month)
(2,923 real changes made)

. replace GED_year  = HS_year2  if everColBefHSgrad & ~mi(GED_year )
(1,517 real changes made)

. replace GED_month = HS_month2 if everColBefHSgrad & ~mi(GED_month)
(1,480 real changes made)

. 
. replace GED_year  = min(HS_year,GED_year)   if ~mi(GED_year)  & ~mi(HS_year)
(407 real changes made)

. replace GED_month = min(HS_month,GED_month) if ~mi(GED_month) & ~mi(HS_month)
(3,589 real changes made)

. 
. replace Diploma_year  = min(HS_year,Diploma_year)   if ~mi(Diploma_year)  & ~
> mi(HS_year)
(6,586 real changes made)

. replace Diploma_month = min(HS_month,Diploma_month) if ~mi(Diploma_month) & ~
> mi(HS_month)
(2,923 real changes made)

. 
. replace HS_date      = ym(HS_year,HS_month)
(9,620 real changes made)

. replace GED_date     = ym(GED_year,GED_month)
(5,402 real changes made)

. replace Diploma_date = ym(Diploma_year,Diploma_month)
(12,321 real changes made)

. 
. bys ID (year): egen everEnrK12A = total(Months_in_K12)

. gen everEnrK12 = everEnrK12A>0

. 
. *-------------------------------------------------------------
. * Check enrollment histories of people who have a Diploma date
. *-------------------------------------------------------------
. capture noisily codebook ID if ~everEnrK12 & HS_date<.

-------------------------------------------------------------------------------
ID                                                                           ID
-------------------------------------------------------------------------------

                  type:  numeric (int)

                 range:  [5200,5200]                  units:  1
         unique values:  1                        missing .:  0/37

            tabulation:  Freq.  Value
                            37  5200

. capture noisily codebook ID if ~everEnrK12 & HS_date<. & everColBefHSgrad
no observations

. 
. *-----------------------------------------
. * Get dates earned various college degrees 
. *-----------------------------------------
. bys ID (year): gen gradGraduate = (year>=Grad_year)

. bys ID (year): gen grad4yr      = (year>=BA_year)

. bys ID (year): gen grad2yr      = (year>=AA_year)

. bys ID (year): gen gradDiploma  = (year>=Diploma_year)

. bys ID (year): gen gradGED      = (year>=GED_year) // could do GED_year-1 to 
> capture the people who start attending college w/no degree (and are off by 1 
> year)

. bys ID (year): gen gradHS       = (year>=HS_year)

. ** Need to add GED as equivalent to "graduating HS" 
. * check to see if people graduated from HS and got GED, or if they are mutual
> ly exclusive
. 
. gen yrGradGraduate  = (year==Grad_year)

. gen yrGrad4yr       = (year==BA_year)

. gen yrGrad2yr       = (year==AA_year)

. gen yrGradHS        = (year==HS_year)

. gen yrGradDiploma   = (year==Diploma_year)

. gen yrGradGED       = (year==GED_year)

. 
. *-----------------------------------------
. * Edit college experience for outlying cases 
. *-----------------------------------------
. * force people who jumped the gun and went to college early to not be in coll
> ege while they're still in HS
. foreach month of local months {
  2.     replace Enrolled_college_`month' = 0 if Enrolled_K12_`month'==1 & Enro
> lled_college_`month'==1 & mdy(month(date("`month'","M")),1,year)<=mdy(HS_mont
> h,1,HS_year) & ~mi(HS_year)
  3.     replace Enrolled_2yr_`month'     = 0 if Enrolled_K12_`month'==1 & Enro
> lled_2yr_`month'==1     & mdy(month(date("`month'","M")),1,year)<=mdy(HS_mont
> h,1,HS_year) & ~mi(HS_year)
  4.     replace Enrolled_4yr_`month'     = 0 if Enrolled_K12_`month'==1 & Enro
> lled_4yr_`month'==1     & mdy(month(date("`month'","M")),1,year)<=mdy(HS_mont
> h,1,HS_year) & ~mi(HS_year)
  5. }
(91 real changes made)
(62 real changes made)
(29 real changes made)
(80 real changes made)
(56 real changes made)
(24 real changes made)
(87 real changes made)
(59 real changes made)
(28 real changes made)
(99 real changes made)
(67 real changes made)
(32 real changes made)
(131 real changes made)
(81 real changes made)
(50 real changes made)
(117 real changes made)
(66 real changes made)
(51 real changes made)
(3 real changes made)
(1 real change made)
(2 real changes made)
(32 real changes made)
(24 real changes made)
(8 real changes made)
(60 real changes made)
(44 real changes made)
(16 real changes made)
(60 real changes made)
(44 real changes made)
(16 real changes made)
(65 real changes made)
(47 real changes made)
(18 real changes made)
(71 real changes made)
(52 real changes made)
(19 real changes made)

. * eventually drop observations after someone reports being enrolled in colleg
> e without a HS Diploma of any kind
. foreach month of local months {
  2.     gen byte collegeflag`month' = mi(HS_date) & Enrolled_college_`month'==
> 1
  3.     gen lastValidSchoolDateA`month' = mdy(month(date("`month'","M")),1,yea
> r) if collegeflag`month'
  4.     bys ID (year): egen lastValidSchoolDate`month' = min(lastValidSchoolDa
> teA`month')
  5. }
(332,292 missing values generated)
(330188 missing values generated)
(332,302 missing values generated)
(330336 missing values generated)
(332,306 missing values generated)
(330410 missing values generated)
(332,311 missing values generated)
(330558 missing values generated)
(332,317 missing values generated)
(330669 missing values generated)
(332,323 missing values generated)
(330743 missing values generated)
(332,323 missing values generated)
(330669 missing values generated)
(332,309 missing values generated)
(330373 missing values generated)
(332,293 missing values generated)
(330040 missing values generated)
(332,288 missing values generated)
(329892 missing values generated)
(332,294 missing values generated)
(330040 missing values generated)
(332,291 missing values generated)
(330114 missing values generated)

. 
. egen lastValidSchoolDate = rowmin(lastValidSchoolDateJan lastValidSchoolDateF
> eb lastValidSchoolDateMar lastValidSchoolDateApr lastValidSchoolDateMay lastV
> alidSchoolDateJun lastValidSchoolDateJul lastValidSchoolDateAug lastValidScho
> olDateSep lastValidSchoolDateOct lastValidSchoolDateNov lastValidSchoolDateDe
> c)
(329448 missing values generated)

. format lastValidSchoolDate %td

. 
. * anyone left with college enrollment before HS graduation will be taken away
> .
. replace lastValidSchoolDate = mdy(9,1,1998) if ID==440
(37 real changes made)

. foreach month of local months {
  2.     replace Enrolled_college_`month' = 0 if Enrolled_college_`month'==1 & 
> mdy(month(date("`month'","M")),1,year)<=mdy(HS_month,1,HS_year) & ~mi(HS_year
> ) & inlist(ID,548,557,585,884,1345,1883,1914,2121,2156,2232,2380,2887,3235,37
> 64,3897,4372,4419,4553,4564,4618,5036,5128,5143,5452,5499,5769,6343,6417,6704
> ,6991,7193,8214,8498)
  3.     replace Enrolled_2yr_`month'     = 0 if Enrolled_2yr_`month'==1     & 
> mdy(month(date("`month'","M")),1,year)<=mdy(HS_month,1,HS_year) & ~mi(HS_year
> ) & inlist(ID,548,557,585,884,1345,1883,1914,2121,2156,2232,2380,2887,3235,37
> 64,3897,4372,4419,4553,4564,4618,5036,5128,5143,5452,5499,5769,6343,6417,6704
> ,6991,7193,8214,8498)
  4.     replace Enrolled_4yr_`month'     = 0 if Enrolled_4yr_`month'==1     & 
> mdy(month(date("`month'","M")),1,year)<=mdy(HS_month,1,HS_year) & ~mi(HS_year
> ) & inlist(ID,548,557,585,884,1345,1883,1914,2121,2156,2232,2380,2887,3235,37
> 64,3897,4372,4419,4553,4564,4618,5036,5128,5143,5452,5499,5769,6343,6417,6704
> ,6991,7193,8214,8498)
  5. }
(4 real changes made)
(4 real changes made)
(0 real changes made)
(4 real changes made)
(3 real changes made)
(1 real change made)
(3 real changes made)
(2 real changes made)
(1 real change made)
(3 real changes made)
(2 real changes made)
(1 real change made)
(1 real change made)
(0 real changes made)
(1 real change made)
(9 real changes made)
(6 real changes made)
(3 real changes made)
(23 real changes made)
(18 real changes made)
(5 real changes made)
(19 real changes made)
(15 real changes made)
(4 real changes made)
(2 real changes made)
(2 real changes made)
(0 real changes made)
(3 real changes made)
(3 real changes made)
(0 real changes made)
(3 real changes made)
(3 real changes made)
(0 real changes made)
(2 real changes made)
(2 real changes made)
(0 real changes made)

. l ID year Enrolled_K12_Aug Enrolled_college_Aug gradHS HS_date Diploma_date G
> ED_* everColBefHSgrad lastValidSchoolDate if ID==12   & year==2002

        +---------------------------------------------------------------+
   430. | ID | year | En~2_Aug | En~e_Aug | gradHS | HS_date | Diplom~e |
        | 12 | 2002 |        0 |        1 |      1 |  2002m6 |   2002m6 |
        |-----------+---------------------------------------------------|
        | GED_date  |  GED_year  |  GED_mo~h  |  everCo~d  |  lastVa~e  |
        |   2002m6  |      2002  |         6  |         0  |         .  |
        +---------------------------------------------------------------+

. 
end of do-file

. 
. * Create primary activity variables and wages
. do y97_create_work.do

. /*---------------------------------------------------------------------------
> -------*\ 
> |       Codes from the employment status data                                
>         |
> |----------------------------------------------------------------------------
> --------|
> |  0: No information reported to account for week; job dates indeterminate   
>         |
> |  1: Not associated with an employer, not actively searching for an employer
>  job    |
> |  2: Not working (unemployment vs. out of labor force cannot be determined) 
>         |
> |  3: Associated with an employer, periods not working for the employer are m
> issing  |
> |  4: Unemployed                                                             
>         |
> |  5: Out of the labor force                                                 
>         |
> |  6: Active military service                                                
>         |
> | (): 4-8 digit employer code if employed                                    
>         |
> \*---------------------------------------------------------------------------
> -------*/
. local months Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec

. 
. scalar scalarJan = 1

. scalar scalarFeb = 2

. scalar scalarMar = 3

. scalar scalarApr = 4

. scalar scalarMay = 5

. scalar scalarJun = 6

. scalar scalarJul = 7

. scalar scalarAug = 8

. scalar scalarSep = 9

. scalar scalarOct = 10

. scalar scalarNov = 11

. scalar scalarDec = 12

.  
. * Deflate wages
. foreach x of numlist 1/13 {
  2.     qui replace Hrly_comp_Job`x'_ = Hrly_comp_Job`x'_/cpi
  3.     qui replace Hrly_wage_Job`x'_ = Hrly_wage_Job`x'_/cpi
  4. }

. replace fedMinWage = fedMinWage/cpi // Deflate the federal minimum wage
(296,472 real changes made)

. 
. * Fix "hours per week at Job X" variable
. capture noisily drop Hrs_week_Job*
variable Hrs_week_Job* not found

. foreach x of numlist 1/13 {
  2.     ren Hrs_per_week_Job`x'_ Hrs_week_Job`x'_
  3. }

. 
. sum Hrs_week_Job?_ Hrs_week_Job??_

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
Hrs_week~b1_ |    102,013    32.22073    14.41786          0        168
Hrs_week~b2_ |     45,919    29.04471    15.11352          0        168
Hrs_week~b3_ |     15,278    28.74067    14.69129          0        168
Hrs_week_~4_ |      4,442    28.02049    14.57919          0        168
Hrs_week_~5_ |      1,264    27.09177     14.4871          0        112
-------------+---------------------------------------------------------
Hrs_week_~6_ |        367    28.47956    14.69634          0         95
Hrs_week_~7_ |        116    29.19828    14.39156          0         80
Hrs_week_~8_ |         44    28.90909    14.50392          4         72
Hrs_week_~9_ |         17    26.88235    12.84466          2         40
Hrs_week~10_ |          6        29.5    15.92168          8         50
-------------+---------------------------------------------------------
Hrs_week~11_ |          4        28.5    14.27118          8         40
Hrs_week~12_ |          1          40           .         40         40
Hrs_week~13_ |          1          24           .         24         24

. 
. * replace "9702" etc. in Employment Status Array with "199702" etc.
. foreach x of numlist 1/53 {
  2.     qui replace Emp_Status_Week_`x'_ = 199701 if Emp_Status_Week_`x'_==970
> 1
  3.     qui replace Emp_Status_Week_`x'_ = 199702 if Emp_Status_Week_`x'_==970
> 2
  4.     qui replace Emp_Status_Week_`x'_ = 199703 if Emp_Status_Week_`x'_==970
> 3
  5.     qui replace Emp_Status_Week_`x'_ = 199704 if Emp_Status_Week_`x'_==970
> 4
  6.     qui replace Emp_Status_Week_`x'_ = 199705 if Emp_Status_Week_`x'_==970
> 5
  7.     qui replace Emp_Status_Week_`x'_ = 199706 if Emp_Status_Week_`x'_==970
> 6
  8.     qui replace Emp_Status_Week_`x'_ = 199707 if Emp_Status_Week_`x'_==970
> 7
  9.     qui replace Emp_Status_Week_`x'_ = 199708 if Emp_Status_Week_`x'_==970
> 8
 10.     qui replace Emp_Status_Week_`x'_ = 199709 if Emp_Status_Week_`x'_==970
> 9
 11.     qui replace Emp_Status_Week_`x'_ = 199710 if Emp_Status_Week_`x'_==971
> 0
 12.     qui replace Emp_Status_Week_`x'_ = 199711 if Emp_Status_Week_`x'_==971
> 1
 13.     qui replace Emp_Status_Week_`x'_ = 199712 if Emp_Status_Week_`x'_==971
> 2
 14.     qui replace Emp_Status_Week_`x'_ = 199713 if Emp_Status_Week_`x'_==971
> 3
 15.     qui replace Emp_Status_Week_`x'_ = 199801 if Emp_Status_Week_`x'_==980
> 1
 16.     qui replace Emp_Status_Week_`x'_ = 199802 if Emp_Status_Week_`x'_==980
> 2
 17.     qui replace Emp_Status_Week_`x'_ = 199803 if Emp_Status_Week_`x'_==980
> 3
 18.     qui replace Emp_Status_Week_`x'_ = 199804 if Emp_Status_Week_`x'_==980
> 4
 19.     qui replace Emp_Status_Week_`x'_ = 199805 if Emp_Status_Week_`x'_==980
> 5
 20.     qui replace Emp_Status_Week_`x'_ = 199806 if Emp_Status_Week_`x'_==980
> 6
 21.     qui replace Emp_Status_Week_`x'_ = 199807 if Emp_Status_Week_`x'_==980
> 7
 22.     qui replace Emp_Status_Week_`x'_ = 199808 if Emp_Status_Week_`x'_==980
> 8
 23.     qui replace Emp_Status_Week_`x'_ = 199809 if Emp_Status_Week_`x'_==980
> 9
 24.     qui replace Emp_Status_Week_`x'_ = 199810 if Emp_Status_Week_`x'_==981
> 0
 25.     qui replace Emp_Status_Week_`x'_ = 199811 if Emp_Status_Week_`x'_==981
> 1
 26.     qui replace Emp_Status_Week_`x'_ = 199812 if Emp_Status_Week_`x'_==981
> 2
 27.     qui replace Emp_Status_Week_`x'_ = 199813 if Emp_Status_Week_`x'_==981
> 3
 28. }

. 
. * Backfill the Employer ID, Wage rates, and Industry/Occupation codes for peo
> ple who missed interviews
. gsort ID -year

. foreach x of numlist 1/13 {
  2.     by ID: replace Emp`x'_ID         = Emp`x'_ID[_n-1]         if ~mi(Emp`
> x'_ID[_n-1]) & Emp`x'_ID[_n]==.n
  3.     by ID: replace Emp`x'_ID         = Emp`x'_ID[_n-1]         if ~mi(Emp`
> x'_ID[_n-1]) & inrange(year,1994,1996)
  4.     by ID: replace Hrs_week_Job`x'_  = Hrs_week_Job`x'_[_n-1]  if ~mi(Hrs_
> week_Job`x'_[_n-1]) & Hrs_week_Job`x'_[_n]==.n
  5.     by ID: replace Hrs_week_Job`x'_  = Hrs_week_Job`x'_[_n-1]  if ~mi(Hrs_
> week_Job`x'_[_n-1]) & inrange(year,1994,1996)
  6.     by ID: replace Hrly_wage_Job`x'_ = Hrly_wage_Job`x'_[_n-1] if ~mi(Hrly
> _wage_Job`x'_[_n-1]) & Hrly_wage_Job`x'_[_n]==.n
  7.     by ID: replace Hrly_wage_Job`x'_ = Hrly_wage_Job`x'_[_n-1] if ~mi(Hrly
> _wage_Job`x'_[_n-1]) & inrange(year,1994,1996)
  8.     by ID: replace Hrly_comp_Job`x'_ = Hrly_comp_Job`x'_[_n-1] if ~mi(Hrly
> _comp_Job`x'_[_n-1]) & Hrly_comp_Job`x'_[_n]==.n
  9.     by ID: replace Hrly_comp_Job`x'_ = Hrly_comp_Job`x'_[_n-1] if ~mi(Hrly
> _comp_Job`x'_[_n-1]) & inrange(year,1994,1996)
 10.     by ID: replace Hrly_comp_Job`x'_ = Hrly_comp_Job`x'_[_n+1] if Hrly_com
> p_Job`x'_[_n]==.i & ~mi(Hrly_comp_Job`x'_[_n+1]) & Emp`x'_ID[_n]==Emp`x'_ID[_
> n+1]
 11.     by ID: replace Hrly_wage_Job`x'_ = Hrly_wage_Job`x'_[_n+1] if Hrly_wag
> e_Job`x'_[_n]==.i & ~mi(Hrly_wage_Job`x'_[_n+1]) & Emp`x'_ID[_n]==Emp`x'_ID[_
> n+1]
 12.     by ID: replace Hrly_comp_Job`x'_ = Hrly_comp_Job`x'_[_n-1] if Hrly_com
> p_Job`x'_[_n]==.i & ~mi(Hrly_comp_Job`x'_[_n-1]) & Emp`x'_ID[_n]==Emp`x'_ID[_
> n-1]
 13.     by ID: replace Hrly_wage_Job`x'_ = Hrly_wage_Job`x'_[_n-1] if Hrly_wag
> e_Job`x'_[_n]==.i & ~mi(Hrly_wage_Job`x'_[_n-1]) & Emp`x'_ID[_n]==Emp`x'_ID[_
> n-1]
 14. }
(8,067 real changes made)
(6,858 real changes made)
(7,619 real changes made)
(6,828 real changes made)
(0 real changes made)
(6,411 real changes made)
(0 real changes made)
(6,714 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(5,481 real changes made)
(2,451 real changes made)
(5,306 real changes made)
(2,418 real changes made)
(0 real changes made)
(2,313 real changes made)
(0 real changes made)
(2,409 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,083 real changes made)
(795 real changes made)
(3,010 real changes made)
(768 real changes made)
(0 real changes made)
(759 real changes made)
(0 real changes made)
(771 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(1,531 real changes made)
(264 real changes made)
(1,450 real changes made)
(249 real changes made)
(0 real changes made)
(246 real changes made)
(0 real changes made)
(252 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(622 real changes made)
(84 real changes made)
(588 real changes made)
(78 real changes made)
(0 real changes made)
(78 real changes made)
(0 real changes made)
(78 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(254 real changes made)
(24 real changes made)
(237 real changes made)
(24 real changes made)
(0 real changes made)
(24 real changes made)
(0 real changes made)
(24 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(134 real changes made)
(6 real changes made)
(129 real changes made)
(6 real changes made)
(0 real changes made)
(6 real changes made)
(0 real changes made)
(6 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(39 real changes made)
(0 real changes made)
(39 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(7 real changes made)
(0 real changes made)
(7 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. foreach x of numlist 1/13 {
  2.     by ID: replace Job`x'_Industry      = Job`x'_Industry[_n-1]      if ~m
> i(Job`x'_Industry[_n-1]     ) & Job`x'_Industry[_n]==.n
  3.     by ID: replace Job`x'_Industry      = Job`x'_Industry[_n-1]      if ~m
> i(Job`x'_Industry[_n-1]     ) & inrange(year,1994,1996)
  4.     by ID: replace Job`x'_Occupation    = Job`x'_Occupation[_n-1]    if ~m
> i(Job`x'_Occupation[_n-1]   ) & Job`x'_Occupation[_n]==.n
  5.     by ID: replace Job`x'_Occupation    = Job`x'_Occupation[_n-1]    if ~m
> i(Job`x'_Occupation[_n-1]   ) & inrange(year,1994,1996)
  6.     by ID: replace Job`x'_self_employed = Job`x'_self_employed[_n-1] if ~m
> i(Job`x'_self_employed[_n-1]) & Job`x'_self_employed[_n]==.n
  7.     by ID: replace Job`x'_self_employed = .                          if ~m
> i(Job`x'_self_employed[_n-1]) & inrange(year,1994,1999)
  8. }
(7,735 real changes made)
(6,831 real changes made)
(7,735 real changes made)
(6,831 real changes made)
(7,107 real changes made)
(0 real changes made)
(5,363 real changes made)
(2,436 real changes made)
(5,363 real changes made)
(2,436 real changes made)
(4,808 real changes made)
(0 real changes made)
(3,067 real changes made)
(783 real changes made)
(3,067 real changes made)
(783 real changes made)
(2,660 real changes made)
(0 real changes made)
(1,512 real changes made)
(255 real changes made)
(1,512 real changes made)
(255 real changes made)
(1,317 real changes made)
(0 real changes made)
(604 real changes made)
(81 real changes made)
(604 real changes made)
(81 real changes made)
(531 real changes made)
(0 real changes made)
(255 real changes made)
(24 real changes made)
(255 real changes made)
(24 real changes made)
(207 real changes made)
(0 real changes made)
(134 real changes made)
(6 real changes made)
(134 real changes made)
(6 real changes made)
(107 real changes made)
(0 real changes made)
(39 real changes made)
(0 real changes made)
(39 real changes made)
(0 real changes made)
(30 real changes made)
(0 real changes made)
(7 real changes made)
(0 real changes made)
(8 real changes made)
(0 real changes made)
(5 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. sort ID year

. 
. * Generate Self Employed Weekly Status
. foreach x of numlist 1/53 {
  2.     generat Self_employed_Week`x'_ = 0
  3.     foreach y of numlist 1/13 {
  4.         replace Self_employed_Week`x'_ = 1 if Job`y'_self_employed==1 & Em
> p_Status_Week_`x'_==Emp`y'_ID
  5.     }
  6. }
(3,644 real changes made)
(834 real changes made)
(172 real changes made)
(37 real changes made)
(16 real changes made)
(3 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,663 real changes made)
(799 real changes made)
(161 real changes made)
(34 real changes made)
(10 real changes made)
(2 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,719 real changes made)
(789 real changes made)
(154 real changes made)
(32 real changes made)
(10 real changes made)
(2 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,752 real changes made)
(791 real changes made)
(146 real changes made)
(29 real changes made)
(9 real changes made)
(2 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,788 real changes made)
(793 real changes made)
(140 real changes made)
(28 real changes made)
(7 real changes made)
(0 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,824 real changes made)
(775 real changes made)
(135 real changes made)
(28 real changes made)
(7 real changes made)
(0 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,841 real changes made)
(761 real changes made)
(129 real changes made)
(27 real changes made)
(8 real changes made)
(0 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,869 real changes made)
(749 real changes made)
(123 real changes made)
(29 real changes made)
(8 real changes made)
(0 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,910 real changes made)
(740 real changes made)
(123 real changes made)
(28 real changes made)
(7 real changes made)
(0 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,965 real changes made)
(721 real changes made)
(128 real changes made)
(29 real changes made)
(7 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,984 real changes made)
(717 real changes made)
(121 real changes made)
(28 real changes made)
(6 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,997 real changes made)
(701 real changes made)
(122 real changes made)
(27 real changes made)
(6 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,007 real changes made)
(694 real changes made)
(121 real changes made)
(27 real changes made)
(6 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,085 real changes made)
(689 real changes made)
(112 real changes made)
(26 real changes made)
(5 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,086 real changes made)
(681 real changes made)
(109 real changes made)
(25 real changes made)
(5 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,118 real changes made)
(673 real changes made)
(108 real changes made)
(25 real changes made)
(5 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,120 real changes made)
(661 real changes made)
(103 real changes made)
(24 real changes made)
(3 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,190 real changes made)
(668 real changes made)
(100 real changes made)
(22 real changes made)
(3 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,215 real changes made)
(659 real changes made)
(99 real changes made)
(21 real changes made)
(3 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,239 real changes made)
(658 real changes made)
(97 real changes made)
(19 real changes made)
(3 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,256 real changes made)
(651 real changes made)
(100 real changes made)
(17 real changes made)
(3 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,301 real changes made)
(656 real changes made)
(96 real changes made)
(18 real changes made)
(3 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,376 real changes made)
(651 real changes made)
(88 real changes made)
(17 real changes made)
(3 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,392 real changes made)
(647 real changes made)
(83 real changes made)
(17 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,425 real changes made)
(627 real changes made)
(80 real changes made)
(17 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,424 real changes made)
(618 real changes made)
(77 real changes made)
(14 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,480 real changes made)
(612 real changes made)
(76 real changes made)
(13 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,470 real changes made)
(601 real changes made)
(75 real changes made)
(11 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,474 real changes made)
(597 real changes made)
(68 real changes made)
(11 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,478 real changes made)
(584 real changes made)
(66 real changes made)
(12 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,528 real changes made)
(558 real changes made)
(65 real changes made)
(11 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,531 real changes made)
(530 real changes made)
(62 real changes made)
(10 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,536 real changes made)
(495 real changes made)
(54 real changes made)
(10 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,558 real changes made)
(462 real changes made)
(51 real changes made)
(9 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,582 real changes made)
(431 real changes made)
(44 real changes made)
(9 real changes made)
(2 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,619 real changes made)
(398 real changes made)
(42 real changes made)
(9 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,593 real changes made)
(375 real changes made)
(41 real changes made)
(9 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,601 real changes made)
(353 real changes made)
(41 real changes made)
(8 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,608 real changes made)
(346 real changes made)
(38 real changes made)
(8 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,655 real changes made)
(329 real changes made)
(35 real changes made)
(8 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,619 real changes made)
(337 real changes made)
(37 real changes made)
(7 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,613 real changes made)
(351 real changes made)
(35 real changes made)
(7 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,569 real changes made)
(353 real changes made)
(34 real changes made)
(7 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,528 real changes made)
(366 real changes made)
(39 real changes made)
(8 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,466 real changes made)
(368 real changes made)
(42 real changes made)
(7 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,397 real changes made)
(378 real changes made)
(42 real changes made)
(7 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,318 real changes made)
(389 real changes made)
(42 real changes made)
(7 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,257 real changes made)
(402 real changes made)
(46 real changes made)
(7 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,193 real changes made)
(422 real changes made)
(47 real changes made)
(8 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,089 real changes made)
(433 real changes made)
(48 real changes made)
(8 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(4,024 real changes made)
(459 real changes made)
(49 real changes made)
(9 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3,942 real changes made)
(476 real changes made)
(49 real changes made)
(11 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(753 real changes made)
(112 real changes made)
(12 real changes made)
(1 real change made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. * Generate Employment status in the week before interview
. gen Emp_Status_Week_Bef_Interview = .
(332,408 missing values generated)

. foreach x of numlist 1/53 {
  2.     replace Emp_Status_Week_Bef_Interview = Emp_Status_Week_`x'_ if inlist
> (yw(year,`x'),wofd(R1interviewDay)-1,wofd(R2interviewDay)-1,wofd(R3interviewD
> ay)-1,wofd(R4interviewDay)-1,wofd(R5interviewDay)-1,wofd(R6interviewDay)-1,wo
> fd(R7interviewDay)-1,wofd(R8interviewDay)-1,wofd(R9interviewDay)-1,wofd(R10in
> terviewDay)-1,wofd(R11interviewDay)-1,wofd(R12interviewDay)-1,wofd(R13intervi
> ewDay)-1,wofd(R14interviewDay)-1,wofd(R15interviewDay)-1,wofd(R16interviewDay
> )-1,wofd(R17interviewDay)-1)
  3. }
(4,863 real changes made)
(4,278 real changes made)
(3,433 real changes made)
(2,733 real changes made)
(2,363 real changes made)
(1,997 real changes made)
(1,691 real changes made)
(1,454 real changes made)
(1,278 real changes made)
(1,073 real changes made)
(1,004 real changes made)
(864 real changes made)
(809 real changes made)
(671 real changes made)
(589 real changes made)
(635 real changes made)
(485 real changes made)
(344 real changes made)
(357 real changes made)
(302 real changes made)
(265 real changes made)
(201 real changes made)
(148 real changes made)
(133 real changes made)
(139 real changes made)
(70 real changes made)
(83 real changes made)
(50 real changes made)
(12 real changes made)
(15 real changes made)
(11 real changes made)
(3 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(767 real changes made)
(1,419 real changes made)
(1,305 real changes made)
(1,722 real changes made)
(2,950 real changes made)
(3,757 real changes made)
(4,127 real changes made)
(5,010 real changes made)
(6,367 real changes made)
(7,469 real changes made)
(7,034 real changes made)
(6,021 real changes made)
(6,361 real changes made)
(6,106 real changes made)
(5,642 real changes made)
(4,312 real changes made)
(3,910 real changes made)
(102,544 real changes made, 90,011 to missing)

. 
. * Generate the Job ID as of the week before interview 
. gen JobID_current = Emp_Status_Week_Bef_Interview if inrange(Emp_Status_Week_
> Bef_Interview,7,.)
(316,229 missing values generated)

. 
. * Generate the wage at the main job worked in the week before interview
. gen wage_job_current = .
(332,408 missing values generated)

. gen comp_job_current = .
(332,408 missing values generated)

. foreach x of numlist 1/13 {
  2.     replace wage_job_current = Hrly_wage_Job`x'_ if Emp`x'_ID==JobID_curre
> nt
  3.     replace comp_job_current = Hrly_comp_Job`x'_ if Emp`x'_ID==JobID_curre
> nt
  4. }
(12,249 real changes made)
(11,543 real changes made)
(618 real changes made)
(574 real changes made)
(56 real changes made)
(55 real changes made)
(4 real changes made)
(4 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. * Generate the self-employment status at the main job worked in the week befo
> re interview
. gen self_employed_job_current = .
(332,408 missing values generated)

. foreach x of numlist 1/13 {
  2.     replace self_employed_job_current = Job`x'_self_employed==1 if Emp`x'_
> ID==JobID_current
  3. }
(185,949 real changes made)
(5,270 real changes made)
(1,772 real changes made)
(535 real changes made)
(186 real changes made)
(65 real changes made)
(16 real changes made)
(17,974 real changes made)
(26,952 real changes made)
(52,346 real changes made)
(17,968 real changes made)
(8,984 real changes made)
(8,984 real changes made)

. 
. * Generate an current Industry, Occupation and Internship (based on the CV_cu
> rrentJOB_FLG variable)
. gen ind_job_current = .
(332,408 missing values generated)

. gen occ_job_current = .
(332,408 missing values generated)

. gen internship_job_current = .
(332,408 missing values generated)

. foreach x of numlist 1/13 {
  2.     replace ind_job_current        = Job`x'_Industry   if Emp`x'_ID==JobID
> _current
  3.     replace occ_job_current        = Job`x'_Occupation if Emp`x'_ID==JobID
> _current
  4.     replace internship_job_current = Job`x'_Internship if Emp`x'_ID==JobID
> _current
  5. }
(13,127 real changes made, 31 to missing)
(13,127 real changes made, 30 to missing)
(13,127 real changes made, 567 to missing)
(905 real changes made, 5 to missing)
(905 real changes made, 5 to missing)
(904 real changes made, 264 to missing)
(164 real changes made)
(164 real changes made)
(164 real changes made, 106 to missing)
(41 real changes made)
(42 real changes made)
(41 real changes made, 38 to missing)
(14 real changes made, 1 to missing)
(14 real changes made, 1 to missing)
(14 real changes made, 13 to missing)
(9 real changes made)
(9 real changes made)
(9 real changes made, 9 to missing)
(1 real change made)
(1 real change made)
(1 real change made, 1 to missing)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(8,984 real changes made, 8,981 to missing)
(8,984 real changes made, 8,981 to missing)
(0 real changes made)
(8,984 real changes made, 8,984 to missing)
(8,984 real changes made, 8,984 to missing)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. * Generate the wage at the main job worked as defined by CV_MAINJOB_FLG
. gen wage_job_main = .
(332,408 missing values generated)

. gen comp_job_main = .
(332,408 missing values generated)

. foreach x of numlist 1/13 {
  2.     replace wage_job_main = Hrly_wage_Job`x'_ if Main_job==`x'
  3.     replace comp_job_main = Hrly_comp_Job`x'_ if Main_job==`x'
  4. }
(89,762 real changes made)
(85,157 real changes made)
(4,279 real changes made)
(4,057 real changes made)
(296 real changes made)
(287 real changes made)
(25 real changes made)
(23 real changes made)
(3 real changes made)
(3 real changes made)
(1 real change made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. * Generate self-employed status at the main job worked as defined by CV_MAINJ
> OB_FLG
. gen self_employed_job_main = .
(332,408 missing values generated)

. foreach x of numlist 1/13 {
  2.     replace self_employed_job_main = Job`x'_self_employed==1 if Main_job==
> `x'
  3. }
(97,862 real changes made)
(4,553 real changes made)
(325 real changes made)
(26 real changes made)
(4 real changes made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. * Generate an Main Industry, Occupation and Internship (based on the CV_MAINJ
> OB_FLG variable)
. gen ind_job_main = .
(332,408 missing values generated)

. gen occ_job_main = .
(332,408 missing values generated)

. gen internship_job_main = .
(332,408 missing values generated)

. foreach x of numlist 1/13 {
  2.     replace ind_job_main        = Job`x'_Industry   if Main_job==`x'
  3.     replace occ_job_main        = Job`x'_Occupation if Main_job==`x'
  4.     replace internship_job_main = Job`x'_Internship if Main_job==`x'
  5. }
(91,894 real changes made, 221 to missing)
(97,862 real changes made, 230 to missing)
(97,862 real changes made, 3 to missing)
(4,362 real changes made, 19 to missing)
(4,553 real changes made, 19 to missing)
(4,553 real changes made, 6 to missing)
(308 real changes made, 3 to missing)
(325 real changes made, 3 to missing)
(325 real changes made, 3 to missing)
(25 real changes made)
(26 real changes made)
(26 real changes made)
(3 real changes made)
(4 real changes made)
(4 real changes made)
(1 real change made)
(1 real change made)
(1 real change made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. * This loop generates weekly dummies for if someone was in the labor force or
>  not (i.e. employed or unemployed)
. foreach x of numlist 1/53 {
  2.     qui gen byte Labor_force_Week_`x' = inrange(Emp_Status_Week_`x'_,3,4) 
> | inrange(Emp_Status_Week_`x'_,7,.)
  3.     qui replace  Labor_force_Week_`x' = . if Emp_Status_Week_`x'_==.
  4. }

. 
. * This loop generates weekly dummies for if someone was NOT in the labor forc
> e or not (i.e. uncertain status, military, or out of labor force)
. foreach x of numlist 1/53 {
  2.     qui gen byte No_Labor_force_Week_`x' = ~mi(Emp_Status_Week_`x'_) & inl
> ist(Emp_Status_Week_`x'_,0,1,2,5,6)
  3.     qui replace  No_Labor_force_Week_`x' = . if Emp_Status_Week_`x'_==.
  4. }

. 
. * This loop generates weekly dummies for if someone was with a particular emp
> loyer (>6 is the ID; 3 is 'missing' ID)
. foreach x of numlist 1/53 {
  2.     qui gen byte Employed_Week_`x' = (Emp_Status_Week_`x'_==3 | inrange(Em
> p_Status_Week_`x'_,7,.))
  3.     qui replace  Employed_Week_`x' = . if Emp_Status_Week_`x'_==. | Labor_
> force_Week_`x' ==0
  4. }

. 
. * This loop generates weekly dummies for if the person was missing an employe
> r ID
. foreach x of numlist 1/53 {
  2.     qui gen byte Employed_noID_Week_`x' = Emp_Status_Week_`x'_==3
  3. }

. 
. * This loop generates weekly dummies for if the employment status was unknown
>  (0)
. foreach x of numlist 1/53 {
  2.     qui gen byte Emp_Status_Missing0_Week_`x' = (Emp_Status_Week_`x'_==0)
  3. }

. 
. * This loop generates weekly dummies for if the employment status was coded a
> s -5 (missed interview)
. foreach x of numlist 1/53 {
  2.     qui gen byte Emp_Status_MissingDotA_Week_`x' = (Emp_Status_Week_`x'_==
> .n)
  3. }

. 
. * This loop generates weekly dummies for if the employment status was coded a
> s -3 (invalid skip)
. foreach x of numlist 1/53 {
  2.     qui gen byte Emp_Status_MissingDotI_Week_`x' = (Emp_Status_Week_`x'_==
> .i)
  3. }

. 
. * This loop generates weekly dummies for if the employment status was coded a
> s -4 (valid skip)
. foreach x of numlist 1/53 {
  2.     qui gen byte Emp_Status_MissingDotV_Week_`x' = (Emp_Status_Week_`x'_==
> .v)
  3. }

. 
. * This loop generates weekly dummies for if the employment status was coded a
> s -2 (don't know)
. foreach x of numlist 1/53 {
  2.     qui gen byte Emp_Status_MissingDotD_Week_`x' = (Emp_Status_Week_`x'_==
> .d)
  3. }

. 
. * This loop generates weekly dummies for if the employment status was coded a
> s -1 (refused)
. foreach x of numlist 1/53 {
  2.     qui gen byte Emp_Status_MissingDotR_Week_`x' = (Emp_Status_Week_`x'_==
> .r)
  3. }

. 
. * This loop generates weekly dummies for if the employment status was coded a
> s . (general missing; this is a check for reshape errors)
. foreach x of numlist 1/53 {
  2.     qui gen byte Emp_Status_MissingDot_Week_`x' = (Emp_Status_Week_`x'_==.
> )
  3. }

. 
. * This loop generates weekly dummies for if the person was in the military
. foreach x of numlist 1/53 {
  2.     qui gen byte Military_Week_`x' = (Emp_Status_Week_`x'_==6)
  3. }

. 
. * This loop generates weekly dummies for if the labor force status changed fr
> om the previous week
. local i=2

. local j=1

. while `i'<=53  {
  2.     gen byte switch_labor_status_week`i' = (Emp_Status_Week_`i'_ ~= Emp_St
> atus_Week_`j'_)
  3.     local j=`j'+1
  4.     local i=`i'+1
  5. }

. 
. * These commands get total number of weeks spent in labor force status "x"
. qui egen weeks_employed               = rowtotal(Employed_Week_? Employed_Wee
> k_??)

. qui egen weeks_in_labor_force         = rowtotal(Labor_force_Week_? Labor_for
> ce_Week_??)

. qui egen Weeks_Employed_noID          = rowtotal(Employed_noID_Week_? Employe
> d_noID_Week_??)

. qui egen Weeks_Emp_Status_Missing0    = rowtotal(Emp_Status_Missing0_Week_? E
> mp_Status_Missing0_Week_??)

. qui egen Weeks_Emp_Status_MissingDotA = rowtotal(Emp_Status_MissingDotA_Week_
> ? Emp_Status_MissingDotA_Week_??)

. qui egen Weeks_Emp_Status_MissingDotI = rowtotal(Emp_Status_MissingDotI_Week_
> ? Emp_Status_MissingDotI_Week_??)

. qui egen Weeks_Emp_Status_MissingDotV = rowtotal(Emp_Status_MissingDotV_Week_
> ? Emp_Status_MissingDotV_Week_??)

. qui egen Weeks_Emp_Status_MissingDotD = rowtotal(Emp_Status_MissingDotD_Week_
> ? Emp_Status_MissingDotD_Week_??)

. qui egen Weeks_Emp_Status_MissingDotR = rowtotal(Emp_Status_MissingDotR_Week_
> ? Emp_Status_MissingDotR_Week_??)

. qui egen Weeks_Emp_Status_MissingDot  = rowtotal(Emp_Status_MissingDot_Week_?
>  Emp_Status_MissingDot_Week_??)

. qui egen Number_labor_status_switches = rowtotal(switch_labor_status_week? sw
> itch_labor_status_week??)

. 
. * Need to make a slight correction for weeks employed, etc. in 2011, since th
> e number of weeks reported depends on the interview date
. qui gen potential_LF_weeks         = 52-Weeks_Emp_Status_MissingDotV         
>             if year==2011 & inrange(Interview_date,ym(2011,9),ym(2011,12))

. qui gen weeks_employed_prime       = floor(52*(weeks_employed/potential_LF_we
> eks))       if year==2011 & inrange(Interview_date,ym(2011,9),ym(2011,12))

. qui gen weeks_in_labor_force_prime = floor(52*(weeks_in_labor_force/potential
> _LF_weeks)) if year==2011 & inrange(Interview_date,ym(2011,9),ym(2011,12))

. qui gen Weeks_Employed_noID_prime  = floor(52*(Weeks_Employed_noID/potential_
> LF_weeks))  if year==2011 & inrange(Interview_date,ym(2011,9),ym(2011,12))

. 
. replace weeks_employed       = weeks_employed_prime       if year==2011 & inr
> ange(Interview_date,ym(2011,9),ym(2011,12))
(265 real changes made)

. replace weeks_in_labor_force = weeks_in_labor_force_prime if year==2011 & inr
> ange(Interview_date,ym(2011,9),ym(2011,12))
(284 real changes made)

. replace Weeks_Employed_noID  = Weeks_Employed_noID_prime  if year==2011 & inr
> ange(Interview_date,ym(2011,9),ym(2011,12))
(4 real changes made)

. 
. 
. * * * * * * * * * * * * * * * * * * * Need to adjust this for Job 13???
. 
. * Hand-code Job 11 information for year 2002 and ID 6337 (the only person to 
> ever report 11 new jobs in one year)
. capture noisily drop Hrs_week_Job11_

. generat Hrs_week_Job11_ = .v
(332,408 missing values generated)

. replace Hrs_week_Job11_ = .n if Hrs_week_Job10_==.n
(7,604 real changes made, 7,604 to missing)

. replace Hrs_week_Job11_ = 40 if ID==6337 & year==2002
(1 real change made)

. 
. * Generate Job 1 ID
. foreach x of numlist 1/53 {
  2.     capture noisily drop Job1ID_Week`x'_
  3.     qui gen Job1ID_Week`x'_ = Emp_Status_Week_`x'_ if inrange(Emp_Status_W
> eek_`x'_,7,.)
  4. }
variable Job1ID_Week1_ not found
variable Job1ID_Week2_ not found
variable Job1ID_Week3_ not found
variable Job1ID_Week4_ not found
variable Job1ID_Week5_ not found
variable Job1ID_Week6_ not found
variable Job1ID_Week7_ not found
variable Job1ID_Week8_ not found
variable Job1ID_Week9_ not found
variable Job1ID_Week10_ not found
variable Job1ID_Week11_ not found
variable Job1ID_Week12_ not found
variable Job1ID_Week13_ not found
variable Job1ID_Week14_ not found
variable Job1ID_Week15_ not found
variable Job1ID_Week16_ not found
variable Job1ID_Week17_ not found
variable Job1ID_Week18_ not found
variable Job1ID_Week19_ not found
variable Job1ID_Week20_ not found
variable Job1ID_Week21_ not found
variable Job1ID_Week22_ not found
variable Job1ID_Week23_ not found
variable Job1ID_Week24_ not found
variable Job1ID_Week25_ not found
variable Job1ID_Week26_ not found
variable Job1ID_Week27_ not found
variable Job1ID_Week28_ not found
variable Job1ID_Week29_ not found
variable Job1ID_Week30_ not found
variable Job1ID_Week31_ not found
variable Job1ID_Week32_ not found
variable Job1ID_Week33_ not found
variable Job1ID_Week34_ not found
variable Job1ID_Week35_ not found
variable Job1ID_Week36_ not found
variable Job1ID_Week37_ not found
variable Job1ID_Week38_ not found
variable Job1ID_Week39_ not found
variable Job1ID_Week40_ not found
variable Job1ID_Week41_ not found
variable Job1ID_Week42_ not found
variable Job1ID_Week43_ not found
variable Job1ID_Week44_ not found
variable Job1ID_Week45_ not found
variable Job1ID_Week46_ not found
variable Job1ID_Week47_ not found
variable Job1ID_Week48_ not found
variable Job1ID_Week49_ not found
variable Job1ID_Week50_ not found
variable Job1ID_Week51_ not found
variable Job1ID_Week52_ not found
variable Job1ID_Week53_ not found

. 
. * Check for duplicate multi-job-week Job IDs
. foreach x of numlist 1/53 {
  2.     qui replace Job2ID_Week`x'_ = . if Job2ID_Week`x'_==Job1ID_Week`x'_ & 
> ~mi(Job2ID_Week`x'_) & ~mi(Job1ID_Week`x'_)
  3.     qui replace Job3ID_Week`x'_ = . if Job3ID_Week`x'_==Job1ID_Week`x'_ & 
> ~mi(Job3ID_Week`x'_) & ~mi(Job1ID_Week`x'_)
  4.     qui replace Job4ID_Week`x'_ = . if Job4ID_Week`x'_==Job1ID_Week`x'_ & 
> ~mi(Job4ID_Week`x'_) & ~mi(Job1ID_Week`x'_)
  5.     qui replace Job5ID_Week`x'_ = . if Job5ID_Week`x'_==Job1ID_Week`x'_ & 
> ~mi(Job5ID_Week`x'_) & ~mi(Job1ID_Week`x'_)
  6.     qui replace Job6ID_Week`x'_ = . if Job6ID_Week`x'_==Job1ID_Week`x'_ & 
> ~mi(Job6ID_Week`x'_) & ~mi(Job1ID_Week`x'_)
  7.     qui replace Job7ID_Week`x'_ = . if Job7ID_Week`x'_==Job1ID_Week`x'_ & 
> ~mi(Job7ID_Week`x'_) & ~mi(Job1ID_Week`x'_)
  8.     qui replace Job8ID_Week`x'_ = . if Job8ID_Week`x'_==Job1ID_Week`x'_ & 
> ~mi(Job8ID_Week`x'_) & ~mi(Job1ID_Week`x'_)
  9. }

. 
. * Get number of primary job switches in a year
. local i=2

. local j=1

. while `i'<=52  {
  2.     gen switch_Job1ID`i' = (Job1ID_Week`i'_ ~= Job1ID_Week`j'_) & ~mi(Job1
> ID_Week`i'_) & ~mi(Job1ID_Week`j'_)
  3.     local j=`j'+1
  4.     local i=`i'+1
  5. }

. 
. egen num_primary_job_switches = rowtotal(switch_Job1ID? switch_Job1ID??)

. 
. foreach x of numlist 1/53 {
  2.     * Mono Jobs Weekly Array
.     qui gen byte mono_jobs_week`x'  = ~mi(Job1ID_Week`x'_) &  mi(Job2ID_Week`
> x'_) &  mi(Job3ID_Week`x'_) &  mi(Job4ID_Week`x'_) &  mi(Job5ID_Week`x'_) &  
> mi(Job6ID_Week`x'_) &  mi(Job7ID_Week`x'_) &  mi(Job8ID_Week`x'_)
  3.     * Dual Jobs Weekly Array
.     qui gen byte dual_jobs_week`x'  = ~mi(Job1ID_Week`x'_) & ~mi(Job2ID_Week`
> x'_) &  mi(Job3ID_Week`x'_) &  mi(Job4ID_Week`x'_) &  mi(Job5ID_Week`x'_) &  
> mi(Job6ID_Week`x'_) &  mi(Job7ID_Week`x'_) &  mi(Job8ID_Week`x'_)
  4.     * Trio Jobs Weekly Array
.     qui gen byte trio_jobs_week`x'  = ~mi(Job1ID_Week`x'_) & ~mi(Job2ID_Week`
> x'_) & ~mi(Job3ID_Week`x'_) &  mi(Job4ID_Week`x'_) &  mi(Job5ID_Week`x'_) &  
> mi(Job6ID_Week`x'_) &  mi(Job7ID_Week`x'_) &  mi(Job8ID_Week`x'_)
  5.     * Quad Jobs Weekly Array
.     qui gen byte quad_jobs_week`x'  = ~mi(Job1ID_Week`x'_) & ~mi(Job2ID_Week`
> x'_) & ~mi(Job3ID_Week`x'_) & ~mi(Job4ID_Week`x'_) &  mi(Job5ID_Week`x'_) &  
> mi(Job6ID_Week`x'_) &  mi(Job7ID_Week`x'_) &  mi(Job8ID_Week`x'_)
  6.     * Five Jobs Weekly Array
.     qui gen byte five_jobs_week`x'  = ~mi(Job1ID_Week`x'_) & ~mi(Job2ID_Week`
> x'_) & ~mi(Job3ID_Week`x'_) & ~mi(Job4ID_Week`x'_) & ~mi(Job5ID_Week`x'_) &  
> mi(Job6ID_Week`x'_) &  mi(Job7ID_Week`x'_) &  mi(Job8ID_Week`x'_)
  7.     * Six Jobs Weekly Array
.     qui gen byte six_jobs_week`x'   = ~mi(Job1ID_Week`x'_) & ~mi(Job2ID_Week`
> x'_) & ~mi(Job3ID_Week`x'_) & ~mi(Job4ID_Week`x'_) & ~mi(Job5ID_Week`x'_) & ~
> mi(Job6ID_Week`x'_) &  mi(Job7ID_Week`x'_) &  mi(Job8ID_Week`x'_)
  8.     * Seven Jobs Weekly Array
.     qui gen byte seven_jobs_week`x' = ~mi(Job1ID_Week`x'_) & ~mi(Job2ID_Week`
> x'_) & ~mi(Job3ID_Week`x'_) & ~mi(Job4ID_Week`x'_) & ~mi(Job5ID_Week`x'_) & ~
> mi(Job6ID_Week`x'_) & ~mi(Job7ID_Week`x'_) &  mi(Job8ID_Week`x'_)
  9.     * Eight Jobs Weekly Array
.     qui gen byte eight_jobs_week`x' = ~mi(Job1ID_Week`x'_) & ~mi(Job2ID_Week`
> x'_) & ~mi(Job3ID_Week`x'_) & ~mi(Job4ID_Week`x'_) & ~mi(Job5ID_Week`x'_) & ~
> mi(Job6ID_Week`x'_) & ~mi(Job7ID_Week`x'_) & ~mi(Job8ID_Week`x'_)
 10. }

. 
. * How many jobs in week x was the person working?
. foreach x of numlist 1/53 {
  2.     qui gen byte num_jobs_week`x' = 1*mono_jobs_week`x' + 2*dual_jobs_week
> `x' + 3*trio_jobs_week`x' + 4*quad_jobs_week`x' + 5*five_jobs_week`x' + 6*six
> _jobs_week`x' + 7*seven_jobs_week`x' + 8*eight_jobs_week`x'
  3. }

. 
. foreach x of numlist 1/53 {
  2.     qui replace num_jobs_week`x' = 0 if Employed_Week_`x'==0
  3. }

. 
. * Get number of unique Emp IDs for each person for each year
. rowsort Job1ID_Week1_ Job1ID_Week2_ Job1ID_Week3_ Job1ID_Week4_ Job1ID_Week5_
>  Job1ID_Week6_ Job1ID_Week7_ Job1ID_Week8_ Job1ID_Week9_ Job1ID_Week10_ Job1I
> D_Week11_ Job1ID_Week12_ Job1ID_Week13_ Job1ID_Week14_ Job1ID_Week15_ Job1ID_
> Week16_ Job1ID_Week17_ Job1ID_Week18_ Job1ID_Week19_ Job1ID_Week20_ Job1ID_We
> ek21_ Job1ID_Week22_ Job1ID_Week23_ Job1ID_Week24_ Job1ID_Week25_ Job1ID_Week
> 26_ Job1ID_Week27_ Job1ID_Week28_ Job1ID_Week29_ Job1ID_Week30_ Job1ID_Week31
> _ Job1ID_Week32_ Job1ID_Week33_ Job1ID_Week34_ Job1ID_Week35_ Job1ID_Week36_ 
> Job1ID_Week37_ Job1ID_Week38_ Job1ID_Week39_ Job1ID_Week40_ Job1ID_Week41_ Jo
> b1ID_Week42_ Job1ID_Week43_ Job1ID_Week44_ Job1ID_Week45_ Job1ID_Week46_ Job1
> ID_Week47_ Job1ID_Week48_ Job1ID_Week49_ Job1ID_Week50_ Job1ID_Week51_ Job1ID
> _Week52_ Job1ID_Week53_ Job2ID_Week1_ Job2ID_Week2_ Job2ID_Week3_ Job2ID_Week
> 4_ Job2ID_Week5_ Job2ID_Week6_ Job2ID_Week7_ Job2ID_Week8_ Job2ID_Week9_ Job2
> ID_Week10_ Job2ID_Week11_ Job2ID_Week12_ Job2ID_Week13_ Job2ID_Week14_ Job2ID
> _Week15_ Job2ID_Week16_ Job2ID_Week17_ Job2ID_Week18_ Job2ID_Week19_ Job2ID_W
> eek20_ Job2ID_Week21_ Job2ID_Week22_ Job2ID_Week23_ Job2ID_Week24_ Job2ID_Wee
> k25_ Job2ID_Week26_ Job2ID_Week27_ Job2ID_Week28_ Job2ID_Week29_ Job2ID_Week3
> 0_ Job2ID_Week31_ Job2ID_Week32_ Job2ID_Week33_ Job2ID_Week34_ Job2ID_Week35_
>  Job2ID_Week36_ Job2ID_Week37_ Job2ID_Week38_ Job2ID_Week39_ Job2ID_Week40_ J
> ob2ID_Week41_ Job2ID_Week42_ Job2ID_Week43_ Job2ID_Week44_ Job2ID_Week45_ Job
> 2ID_Week46_ Job2ID_Week47_ Job2ID_Week48_ Job2ID_Week49_ Job2ID_Week50_ Job2I
> D_Week51_ Job2ID_Week52_ Job2ID_Week53_ Job3ID_Week1_ Job3ID_Week2_ Job3ID_We
> ek3_ Job3ID_Week4_ Job3ID_Week5_ Job3ID_Week6_ Job3ID_Week7_ Job3ID_Week8_ Jo
> b3ID_Week9_ Job3ID_Week10_ Job3ID_Week11_ Job3ID_Week12_ Job3ID_Week13_ Job3I
> D_Week14_ Job3ID_Week15_ Job3ID_Week16_ Job3ID_Week17_ Job3ID_Week18_ Job3ID_
> Week19_ Job3ID_Week20_ Job3ID_Week21_ Job3ID_Week22_ Job3ID_Week23_ Job3ID_We
> ek24_ Job3ID_Week25_ Job3ID_Week26_ Job3ID_Week27_ Job3ID_Week28_ Job3ID_Week
> 29_ Job3ID_Week30_ Job3ID_Week31_ Job3ID_Week32_ Job3ID_Week33_ Job3ID_Week34
> _ Job3ID_Week35_ Job3ID_Week36_ Job3ID_Week37_ Job3ID_Week38_ Job3ID_Week39_ 
> Job3ID_Week40_ Job3ID_Week41_ Job3ID_Week42_ Job3ID_Week43_ Job3ID_Week44_ Jo
> b3ID_Week45_ Job3ID_Week46_ Job3ID_Week47_ Job3ID_Week48_ Job3ID_Week49_ Job3
> ID_Week50_ Job3ID_Week51_ Job3ID_Week52_ Job3ID_Week53_ Job4ID_Week1_ Job4ID_
> Week2_ Job4ID_Week3_ Job4ID_Week4_ Job4ID_Week5_ Job4ID_Week6_ Job4ID_Week7_ 
> Job4ID_Week8_ Job4ID_Week9_ Job4ID_Week10_ Job4ID_Week11_ Job4ID_Week12_ Job4
> ID_Week13_ Job4ID_Week14_ Job4ID_Week15_ Job4ID_Week16_ Job4ID_Week17_ Job4ID
> _Week18_ Job4ID_Week19_ Job4ID_Week20_ Job4ID_Week21_ Job4ID_Week22_ Job4ID_W
> eek23_ Job4ID_Week24_ Job4ID_Week25_ Job4ID_Week26_ Job4ID_Week27_ Job4ID_Wee
> k28_ Job4ID_Week29_ Job4ID_Week30_ Job4ID_Week31_ Job4ID_Week32_ Job4ID_Week3
> 3_ Job4ID_Week34_ Job4ID_Week35_ Job4ID_Week36_ Job4ID_Week37_ Job4ID_Week38_
>  Job4ID_Week39_ Job4ID_Week40_ Job4ID_Week41_ Job4ID_Week42_ Job4ID_Week43_ J
> ob4ID_Week44_ Job4ID_Week45_ Job4ID_Week46_ Job4ID_Week47_ Job4ID_Week48_ Job
> 4ID_Week49_ Job4ID_Week50_ Job4ID_Week51_ Job4ID_Week52_ Job4ID_Week53_ Job5I
> D_Week1_ Job5ID_Week2_ Job5ID_Week3_ Job5ID_Week4_ Job5ID_Week5_ Job5ID_Week6
> _ Job5ID_Week7_ Job5ID_Week8_ Job5ID_Week9_ Job5ID_Week10_ Job5ID_Week11_ Job
> 5ID_Week12_ Job5ID_Week13_ Job5ID_Week14_ Job5ID_Week15_ Job5ID_Week16_ Job5I
> D_Week17_ Job5ID_Week18_ Job5ID_Week19_ Job5ID_Week20_ Job5ID_Week21_ Job5ID_
> Week22_ Job5ID_Week23_ Job5ID_Week24_ Job5ID_Week25_ Job5ID_Week26_ Job5ID_We
> ek27_ Job5ID_Week28_ Job5ID_Week29_ Job5ID_Week30_ Job5ID_Week31_ Job5ID_Week
> 32_ Job5ID_Week33_ Job5ID_Week34_ Job5ID_Week35_ Job5ID_Week36_ Job5ID_Week37
> _ Job5ID_Week38_ Job5ID_Week39_ Job5ID_Week40_ Job5ID_Week41_ Job5ID_Week42_ 
> Job5ID_Week43_ Job5ID_Week44_ Job5ID_Week45_ Job5ID_Week46_ Job5ID_Week47_ Jo
> b5ID_Week48_ Job5ID_Week49_ Job5ID_Week50_ Job5ID_Week51_ Job5ID_Week52_ Job5
> ID_Week53_ Job6ID_Week1_ Job6ID_Week2_ Job6ID_Week3_ Job6ID_Week4_ Job6ID_Wee
> k5_ Job6ID_Week6_ Job6ID_Week7_ Job6ID_Week8_ Job6ID_Week9_ Job6ID_Week10_ Jo
> b6ID_Week11_ Job6ID_Week12_ Job6ID_Week13_ Job6ID_Week14_ Job6ID_Week15_ Job6
> ID_Week16_ Job6ID_Week17_ Job6ID_Week18_ Job6ID_Week19_ Job6ID_Week20_ Job6ID
> _Week21_ Job6ID_Week22_ Job6ID_Week23_ Job6ID_Week24_ Job6ID_Week25_ Job6ID_W
> eek26_ Job6ID_Week27_ Job6ID_Week28_ Job6ID_Week29_ Job6ID_Week30_ Job6ID_Wee
> k31_ Job6ID_Week32_ Job6ID_Week33_ Job6ID_Week34_ Job6ID_Week35_ Job6ID_Week3
> 6_ Job6ID_Week37_ Job6ID_Week38_ Job6ID_Week39_ Job6ID_Week40_ Job6ID_Week41_
>  Job6ID_Week42_ Job6ID_Week43_ Job6ID_Week44_ Job6ID_Week45_ Job6ID_Week46_ J
> ob6ID_Week47_ Job6ID_Week48_ Job6ID_Week49_ Job6ID_Week50_ Job6ID_Week51_ Job
> 6ID_Week52_ Job6ID_Week53_ Job7ID_Week1_ Job7ID_Week2_ Job7ID_Week3_ Job7ID_W
> eek4_ Job7ID_Week5_ Job7ID_Week6_ Job7ID_Week7_ Job7ID_Week8_ Job7ID_Week9_ J
> ob7ID_Week10_ Job7ID_Week11_ Job7ID_Week12_ Job7ID_Week13_ Job7ID_Week14_ Job
> 7ID_Week15_ Job7ID_Week16_ Job7ID_Week17_ Job7ID_Week18_ Job7ID_Week19_ Job7I
> D_Week20_ Job7ID_Week21_ Job7ID_Week22_ Job7ID_Week23_ Job7ID_Week24_ Job7ID_
> Week25_ Job7ID_Week26_ Job7ID_Week27_ Job7ID_Week28_ Job7ID_Week29_ Job7ID_We
> ek30_ Job7ID_Week31_ Job7ID_Week32_ Job7ID_Week33_ Job7ID_Week34_ Job7ID_Week
> 35_ Job7ID_Week36_ Job7ID_Week37_ Job7ID_Week38_ Job7ID_Week39_ Job7ID_Week40
> _ Job7ID_Week41_ Job7ID_Week42_ Job7ID_Week43_ Job7ID_Week44_ Job7ID_Week45_ 
> Job7ID_Week46_ Job7ID_Week47_ Job7ID_Week48_ Job7ID_Week49_ Job7ID_Week50_ Jo
> b7ID_Week51_ Job7ID_Week52_ Job7ID_Week53_ Job8ID_Week1_ Job8ID_Week2_ Job8ID
> _Week3_ Job8ID_Week4_ Job8ID_Week5_ Job8ID_Week6_ Job8ID_Week7_ Job8ID_Week8_
>  Job8ID_Week9_ Job8ID_Week10_ Job8ID_Week11_ Job8ID_Week12_ Job8ID_Week13_ Jo
> b8ID_Week14_ Job8ID_Week15_ Job8ID_Week16_ Job8ID_Week17_ Job8ID_Week18_ Job8
> ID_Week19_ Job8ID_Week20_ Job8ID_Week21_ Job8ID_Week22_ Job8ID_Week23_ Job8ID
> _Week24_ Job8ID_Week25_ Job8ID_Week26_ Job8ID_Week27_ Job8ID_Week28_ Job8ID_W
> eek29_ Job8ID_Week30_ Job8ID_Week31_ Job8ID_Week32_ Job8ID_Week33_ Job8ID_Wee
> k34_ Job8ID_Week35_ Job8ID_Week36_ Job8ID_Week37_ Job8ID_Week38_ Job8ID_Week3
> 9_ Job8ID_Week40_ Job8ID_Week41_ Job8ID_Week42_ Job8ID_Week43_ Job8ID_Week44_
>  Job8ID_Week45_ Job8ID_Week46_ Job8ID_Week47_ Job8ID_Week48_ Job8ID_Week49_ J
> ob8ID_Week50_ Job8ID_Week51_ Job8ID_Week52_ Job8ID_Week53_, generate(s1-s424)

. 
. * This loop generates a dummy for how many times the EmpID changed in a given
>  year
. local i=2

. local j=1

. while `i'<=424  {
  2.     gen byte new_emp_week`i' = (s`i' ~= s`j') & ~mi(s`i') & ~mi(s`j')
  3.     local j=`j'+1
  4.     local i=`i'+1
  5. }

. 
. egen total_employers = rowtotal(new_emp_week? new_emp_week?? new_emp_week???)

. replace total_employers = total_employers+1 if ~mi(s1) & new_emp_week2==0
(124,035 real changes made)

. 
. * Create employer-week job array
. forvalues x=1/53 {
  2.     forvalues Y = 1/13 {
  3.         qui gen byte employed_Job`Y'_week`x' = ((Job1ID_Week`x'_==Emp`Y'_I
> D & ~mi(Job1ID_Week`x'_)) + (Job2ID_Week`x'_==Emp`Y'_ID & ~mi(Job2ID_Week`x'_
> )) + (Job3ID_Week`x'_==Emp`Y'_ID & ~mi(Job3ID_Week`x'_)) + (Job4ID_Week`x'_==
> Emp`Y'_ID & ~mi(Job4ID_Week`x'_)) + (Job5ID_Week`x'_==Emp`Y'_ID & ~mi(Job5ID_
> Week`x'_)) + (Job6ID_Week`x'_==Emp`Y'_ID & ~mi(Job6ID_Week`x'_)) + (Job7ID_We
> ek`x'_==Emp`Y'_ID & ~mi(Job7ID_Week`x'_)) + (Job8ID_Week`x'_==Emp`Y'_ID & ~mi
> (Job8ID_Week`x'_)) >= 1)
  4.     }
  5. }

. * Get Weeks worked per job
. forvalues Y=1/13 {
  2.     gen byte weeks_employed_Job`Y' = 0
  3.     forvalues x = 1/53 {
  4.         qui replace weeks_employed_Job`Y' = weeks_employed_Job`Y' + (Job1I
> D_Week`x'_==Emp`Y'_ID & ~mi(Job1ID_Week`x'_)) + (Job2ID_Week`x'_==Emp`Y'_ID &
>  ~mi(Job2ID_Week`x'_)) + (Job3ID_Week`x'_==Emp`Y'_ID & ~mi(Job3ID_Week`x'_)) 
> + (Job4ID_Week`x'_==Emp`Y'_ID & ~mi(Job4ID_Week`x'_)) + (Job5ID_Week`x'_==Emp
> `Y'_ID & ~mi(Job5ID_Week`x'_)) + (Job6ID_Week`x'_==Emp`Y'_ID & ~mi(Job6ID_Wee
> k`x'_)) + (Job7ID_Week`x'_==Emp`Y'_ID & ~mi(Job7ID_Week`x'_)) + (Job8ID_Week`
> x'_==Emp`Y'_ID & ~mi(Job8ID_Week`x'_))
  5.     }
  6. }

. * Create Weekly Wage Array
. forvalues x=1/53 {
  2.     forvalues Y = 1/13 {
  3.         qui generat wage_bill_week`x'_`Y' = Hrly_wage_Job`Y'_*employed_Job
> `Y'_week`x'*Hrs_week_Job`Y'_
  4.         qui generat comp_bill_week`x'_`Y' = Hrly_comp_Job`Y'_*employed_Job
> `Y'_week`x'*Hrs_week_Job`Y'_
  5.     }
  6. }

. forvalues x=1/53 {
  2.     forvalues Y = 1/13 {
  3.         qui generat total_hrs_week`x'_`Y' = employed_Job`Y'_week`x'*Hrs_we
> ek_Job`Y'_
  4.     }
  5. }

. forvalues x=1/53 {
  2.     egen wage_num_week`x' = rowtotal(wage_bill_week`x'_1 wage_bill_week`x'
> _2 wage_bill_week`x'_3 wage_bill_week`x'_4 wage_bill_week`x'_5 wage_bill_week
> `x'_6 wage_bill_week`x'_7 wage_bill_week`x'_8 wage_bill_week`x'_9 wage_bill_w
> eek`x'_10 wage_bill_week`x'_11)
  3.     egen comp_num_week`x' = rowtotal(comp_bill_week`x'_1 comp_bill_week`x'
> _2 comp_bill_week`x'_3 comp_bill_week`x'_4 comp_bill_week`x'_5 comp_bill_week
> `x'_6 comp_bill_week`x'_7 comp_bill_week`x'_8 comp_bill_week`x'_9 comp_bill_w
> eek`x'_10 comp_bill_week`x'_11)
  4. }

. forvalues x=1/53 {
  2.     egen wage_dem_week`x' = rowtotal(total_hrs_week`x'_1 total_hrs_week`x'
> _2 total_hrs_week`x'_3 total_hrs_week`x'_4 total_hrs_week`x'_5 total_hrs_week
> `x'_6 total_hrs_week`x'_7 total_hrs_week`x'_8 total_hrs_week`x'_9 total_hrs_w
> eek`x'_10 total_hrs_week`x'_11)
  3.     egen comp_dem_week`x' = rowtotal(total_hrs_week`x'_1 total_hrs_week`x'
> _2 total_hrs_week`x'_3 total_hrs_week`x'_4 total_hrs_week`x'_5 total_hrs_week
> `x'_6 total_hrs_week`x'_7 total_hrs_week`x'_8 total_hrs_week`x'_9 total_hrs_w
> eek`x'_10 total_hrs_week`x'_11)
  4. }

. forvalues x=1/53 {
  2.     gen wage_week`x' = wage_num_week`x'/wage_dem_week`x'
  3.     gen comp_week`x' = comp_num_week`x'/comp_dem_week`x'
  4. }
(261,553 missing values generated)
(261,553 missing values generated)
(261,307 missing values generated)
(261,307 missing values generated)
(260,903 missing values generated)
(260,903 missing values generated)
(260,948 missing values generated)
(260,948 missing values generated)
(260,464 missing values generated)
(260,464 missing values generated)
(260,129 missing values generated)
(260,129 missing values generated)
(259,922 missing values generated)
(259,922 missing values generated)
(259,766 missing values generated)
(259,766 missing values generated)
(259,415 missing values generated)
(259,415 missing values generated)
(259,017 missing values generated)
(259,017 missing values generated)
(258,904 missing values generated)
(258,904 missing values generated)
(258,749 missing values generated)
(258,749 missing values generated)
(258,699 missing values generated)
(258,699 missing values generated)
(258,019 missing values generated)
(258,019 missing values generated)
(258,122 missing values generated)
(258,122 missing values generated)
(257,744 missing values generated)
(257,744 missing values generated)
(257,849 missing values generated)
(257,849 missing values generated)
(257,215 missing values generated)
(257,215 missing values generated)
(257,229 missing values generated)
(257,229 missing values generated)
(256,911 missing values generated)
(256,911 missing values generated)
(256,817 missing values generated)
(256,817 missing values generated)
(256,168 missing values generated)
(256,168 missing values generated)
(255,075 missing values generated)
(255,075 missing values generated)
(254,729 missing values generated)
(254,729 missing values generated)
(254,239 missing values generated)
(254,239 missing values generated)
(253,981 missing values generated)
(253,981 missing values generated)
(253,204 missing values generated)
(253,204 missing values generated)
(253,390 missing values generated)
(253,390 missing values generated)
(253,119 missing values generated)
(253,119 missing values generated)
(253,284 missing values generated)
(253,284 missing values generated)
(252,871 missing values generated)
(252,871 missing values generated)
(253,069 missing values generated)
(253,069 missing values generated)
(253,512 missing values generated)
(253,512 missing values generated)
(254,076 missing values generated)
(254,076 missing values generated)
(254,576 missing values generated)
(254,576 missing values generated)
(254,528 missing values generated)
(254,528 missing values generated)
(254,854 missing values generated)
(254,854 missing values generated)
(254,604 missing values generated)
(254,604 missing values generated)
(254,627 missing values generated)
(254,627 missing values generated)
(254,023 missing values generated)
(254,023 missing values generated)
(254,255 missing values generated)
(254,255 missing values generated)
(254,121 missing values generated)
(254,121 missing values generated)
(254,746 missing values generated)
(254,746 missing values generated)
(255,150 missing values generated)
(255,150 missing values generated)
(255,760 missing values generated)
(255,760 missing values generated)
(256,437 missing values generated)
(256,437 missing values generated)
(256,978 missing values generated)
(256,978 missing values generated)
(257,591 missing values generated)
(257,591 missing values generated)
(258,068 missing values generated)
(258,068 missing values generated)
(259,140 missing values generated)
(259,140 missing values generated)
(259,900 missing values generated)
(259,900 missing values generated)
(261,272 missing values generated)
(261,272 missing values generated)
(318,063 missing values generated)
(318,063 missing values generated)

. 
. forvalues x=1/53 {
  2.     gen wagerWeek`x'=.z
  3.     gen comprWeek`x'=.z
  4.     * First, rely on the job reported in 'Emp_Status_Week_X_'
.     forvalues y = 1/13 {
  5.         qui replace wagerWeek`x' = Hrly_wage_Job`y'_  if mi(wagerWeek`x') 
> & ~mi(Hrly_wage_Job`y'_) & ~mi(Emp`y'_ID) & Emp_Status_Week_`x'_==Emp`y'_ID
  6.         qui replace comprWeek`x' = Hrly_comp_Job`y'_  if mi(comprWeek`x') 
> & ~mi(Hrly_comp_Job`y'_) & ~mi(Emp`y'_ID) & Emp_Status_Week_`x'_==Emp`y'_ID
  7.     }
  8.     * If there is no valid wage or job in that array, attempt to find any 
.     *  other valid wage from the job_number2X-job_number5X arrays
.     forvalues y = 1/13 {
  9.         qui replace wagerWeek`x' = Hrly_wage_Job`y'_ if mi(wagerWeek`x') &
>  ~mi(Hrly_wage_Job`y'_) & ~mi(Emp`y'_ID) & (Job2ID_Week`x'_==Emp`y'_ID | Job3
> ID_Week`x'_==Emp`y'_ID | Job4ID_Week`x'_==Emp`y'_ID | Job5ID_Week`x'_==Emp`y'
> _ID | Job6ID_Week`x'_==Emp`y'_ID | Job7ID_Week`x'_==Emp`y'_ID | Job8ID_Week`x
> '_==Emp`y'_ID )
 10.         qui replace comprWeek`x' = Hrly_comp_Job`y'_ if mi(comprWeek`x') &
>  ~mi(Hrly_comp_Job`y'_) & ~mi(Emp`y'_ID) & (Job2ID_Week`x'_==Emp`y'_ID | Job3
> ID_Week`x'_==Emp`y'_ID | Job4ID_Week`x'_==Emp`y'_ID | Job5ID_Week`x'_==Emp`y'
> _ID | Job6ID_Week`x'_==Emp`y'_ID | Job7ID_Week`x'_==Emp`y'_ID | Job8ID_Week`x
> '_==Emp`y'_ID )
 11.     }
 12. }
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)
(332,408 missing values generated)

. 
. drop wage_bill_week*

. drop comp_bill_week*

. 
. egen mostWeeksEmployed = rowmax(weeks_employed_Job? weeks_employed_Job??)

. 
. * Create an Annual Wage (based on mean across jobs, median across jobs, min a
> cross jobs and max across jobs)
. forvalues Y=1/13 {
  2.     qui generat temp_comp`Y' = Hrly_comp_Job`Y'_*weeks_employed_Job`Y'
  3.     qui generat temp_wage`Y' = Hrly_wage_Job`Y'_*weeks_employed_Job`Y'
  4. }

. forvalues Y=1/13 {
  2.     qui generat temp_denom_comp_week`Y' = (~mi(Hrly_comp_Job`Y'_))*weeks_e
> mployed_Job`Y'
  3.     qui generat temp_denom_wage_week`Y' = (~mi(Hrly_wage_Job`Y'_))*weeks_e
> mployed_Job`Y'
  4. }

. egen temp_numer_wage  = rowtotal(temp_wage? temp_wage??)

. egen temp_numer_comp  = rowtotal(temp_comp? temp_comp??)

. egen temp_denom_wage  = rowtotal(temp_denom_wage_week? temp_denom_wage_week??
> )

. egen temp_denom_comp  = rowtotal(temp_denom_comp_week? temp_denom_comp_week??
> )

. gen  annual_mean_wage = temp_numer_wage/temp_denom_wage
(246,428 missing values generated)

. gen  annual_mean_comp = temp_numer_comp/temp_denom_comp
(249,231 missing values generated)

. drop temp_wage* temp_comp* temp_denom* temp_numer*

. 
. *egen annual_mean_wage = rowmean(Hrly_wage_Job1_ Hrly_wage_Job2_ Hrly_wage_Jo
> b3_ Hrly_wage_Job4_ Hrly_wage_Job5_ Hrly_wage_Job6_ Hrly_wage_Job7_ Hrly_wage
> _Job8_ Hrly_wage_Job9_ Hrly_wage_Job10_ Hrly_wage_Job11_ Hrly_wage_Job12_ Hrl
> y_wage_Job13_ Hrly_comp_Job1_ Hrly_comp_Job2_ Hrly_comp_Job3_ Hrly_comp_Job4_
>  Hrly_comp_Job5_ Hrly_comp_Job6_ Hrly_comp_Job7_ Hrly_comp_Job8_ Hrly_comp_Jo
> b9_ Hrly_comp_Job10_ Hrly_comp_Job11_ Hrly_comp_Job12_ Hrly_comp_Job13_)
. egen annual_median_wage     = rowmedian(Hrly_wage_Job1_ Hrly_wage_Job2_ Hrly_
> wage_Job3_ Hrly_wage_Job4_ Hrly_wage_Job5_ Hrly_wage_Job6_ Hrly_wage_Job7_ Hr
> ly_wage_Job8_ Hrly_wage_Job9_ Hrly_wage_Job10_ Hrly_wage_Job11_ Hrly_wage_Job
> 12_ Hrly_wage_Job13_ )
(230201 missing values generated)

. egen annual_median_comp     = rowmedian(Hrly_comp_Job1_ Hrly_comp_Job2_ Hrly_
> comp_Job3_ Hrly_comp_Job4_ Hrly_comp_Job5_ Hrly_comp_Job6_ Hrly_comp_Job7_ Hr
> ly_comp_Job8_ Hrly_comp_Job9_ Hrly_comp_Job10_ Hrly_comp_Job11_ Hrly_comp_Job
> 12_ Hrly_comp_Job13_ )
(232889 missing values generated)

. egen annual_least_wage      = rowmin   (Hrly_wage_Job1_ Hrly_wage_Job2_ Hrly_
> wage_Job3_ Hrly_wage_Job4_ Hrly_wage_Job5_ Hrly_wage_Job6_ Hrly_wage_Job7_ Hr
> ly_wage_Job8_ Hrly_wage_Job9_ Hrly_wage_Job10_ Hrly_wage_Job11_ Hrly_wage_Job
> 12_ Hrly_wage_Job13_ )
(230201 missing values generated)

. egen annual_least_comp      = rowmin   (Hrly_comp_Job1_ Hrly_comp_Job2_ Hrly_
> comp_Job3_ Hrly_comp_Job4_ Hrly_comp_Job5_ Hrly_comp_Job6_ Hrly_comp_Job7_ Hr
> ly_comp_Job8_ Hrly_comp_Job9_ Hrly_comp_Job10_ Hrly_comp_Job11_ Hrly_comp_Job
> 12_ Hrly_comp_Job13_ )
(232889 missing values generated)

. egen annual_most_wage       = rowmax   (Hrly_wage_Job1_ Hrly_wage_Job2_ Hrly_
> wage_Job3_ Hrly_wage_Job4_ Hrly_wage_Job5_ Hrly_wage_Job6_ Hrly_wage_Job7_ Hr
> ly_wage_Job8_ Hrly_wage_Job9_ Hrly_wage_Job10_ Hrly_wage_Job11_ Hrly_wage_Job
> 12_ Hrly_wage_Job13_ )
(230201 missing values generated)

. egen annual_most_comp       = rowmax   (Hrly_comp_Job1_ Hrly_comp_Job2_ Hrly_
> comp_Job3_ Hrly_comp_Job4_ Hrly_comp_Job5_ Hrly_comp_Job6_ Hrly_comp_Job7_ Hr
> ly_comp_Job8_ Hrly_comp_Job9_ Hrly_comp_Job10_ Hrly_comp_Job11_ Hrly_comp_Job
> 12_ Hrly_comp_Job13_ )
(232889 missing values generated)

. gen annual_first_valid_wage = .n
(332,408 missing values generated)

. gen annual_first_valid_comp = .n
(332,408 missing values generated)

. gen annual_main_wage        = .n
(332,408 missing values generated)

. gen annual_main_comp        = .n
(332,408 missing values generated)

. 
. forvalues Y=1/13 {
  2.     qui replace annual_first_valid_comp = Hrly_comp_Job`Y'_ if ~mi(Hrly_co
> mp_Job`Y'_) & mi(annual_first_valid_comp)
  3.     qui replace annual_first_valid_wage = Hrly_wage_Job`Y'_ if ~mi(Hrly_wa
> ge_Job`Y'_) & mi(annual_first_valid_wage)
  4.     
.     qui replace annual_main_comp = Hrly_comp_Job`Y'_ if weeks_employed_Job`Y'
>  == mostWeeksEmployed & ~mi(weeks_employed_Job`Y')
  5.     qui replace annual_main_wage = Hrly_wage_Job`Y'_ if weeks_employed_Job
> `Y' == mostWeeksEmployed & ~mi(weeks_employed_Job`Y')
  6. }

. 
. *-----------------------------------------
. * Create an Annual Industry and Occupation (based on argmedian across jobs, a
> rgmin across jobs and argmax across jobs)
. *-----------------------------------------
. gen annual_industry_median        = .
(332,408 missing values generated)

. gen annual_industry_min           = .
(332,408 missing values generated)

. gen annual_industry_max           = .
(332,408 missing values generated)

. gen annual_industry_main          = .
(332,408 missing values generated)

. gen annual_industry_first_valid   = .
(332,408 missing values generated)

. gen annual_occupation_median      = .
(332,408 missing values generated)

. gen annual_occupation_min         = .
(332,408 missing values generated)

. gen annual_occupation_max         = .
(332,408 missing values generated)

. gen annual_occupation_main        = .
(332,408 missing values generated)

. gen annual_occupation_first_valid = .
(332,408 missing values generated)

. gen internship_min                = .
(332,408 missing values generated)

. gen internship_max                = .
(332,408 missing values generated)

. gen internship_main               = .
(332,408 missing values generated)

. gen internship_first_valid        = .
(332,408 missing values generated)

. 
. foreach x of numlist 13(-1)1 {
  2.     replace annual_industry_median      = Job`x'_Industry if Hrly_wage_Job
> `x'_==annual_median_wage | Hrly_comp_Job`x'_==annual_median_comp
  3. }
(3,025 real changes made, 3,025 to missing)
(3,025 real changes made, 3,025 to missing)
(2,530 real changes made, 2,529 to missing)
(2,668 real changes made, 2,668 to missing)
(31,036 real changes made, 31,026 to missing)
(5,245 real changes made, 5,197 to missing)
(9,760 real changes made, 9,606 to missing)
(281 real changes made)
(906 real changes made, 3 to missing)
(2,294 real changes made, 14 to missing)
(8,278 real changes made, 28 to missing)
(15,205 real changes made, 107 to missing)
(74,099 real changes made, 1,503 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace annual_industry_min         = Job`x'_Industry if Hrly_wage_Job
> `x'_==annual_least_wage | Hrly_comp_Job`x'_==annual_least_comp
  3. }
(3,026 real changes made, 3,025 to missing)
(3,025 real changes made, 3,025 to missing)
(2,530 real changes made, 2,530 to missing)
(2,669 real changes made, 2,668 to missing)
(31,039 real changes made, 31,027 to missing)
(5,250 real changes made, 5,197 to missing)
(9,766 real changes made, 9,606 to missing)
(321 real changes made, 1 to missing)
(1,007 real changes made, 4 to missing)
(3,286 real changes made, 12 to missing)
(10,264 real changes made, 27 to missing)
(31,747 real changes made, 144 to missing)
(84,666 real changes made, 1,533 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace annual_industry_max         = Job`x'_Industry if Hrly_wage_Job
> `x'_==annual_most_wage | Hrly_comp_Job`x'_==annual_most_comp
  3. }
(3,025 real changes made, 3,025 to missing)
(3,025 real changes made, 3,025 to missing)
(2,529 real changes made, 2,529 to missing)
(2,669 real changes made, 2,668 to missing)
(31,032 real changes made, 31,025 to missing)
(5,246 real changes made, 5,197 to missing)
(9,750 real changes made, 9,606 to missing)
(288 real changes made)
(838 real changes made)
(2,557 real changes made, 13 to missing)
(7,854 real changes made, 23 to missing)
(26,829 real changes made, 134 to missing)
(92,932 real changes made, 1,544 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace annual_industry_main        = Job`x'_Industry if Hrly_wage_Job
> `x'_==annual_main_wage | Hrly_comp_Job`x'_==annual_main_comp
  3. }
(3,241 real changes made, 3,241 to missing)
(3,241 real changes made, 3,241 to missing)
(3,077 real changes made, 3,077 to missing)
(3,111 real changes made, 3,111 to missing)
(38,876 real changes made, 38,869 to missing)
(6,118 real changes made, 6,067 to missing)
(12,137 real changes made, 11,998 to missing)
(273 real changes made, 1 to missing)
(760 real changes made, 2 to missing)
(2,289 real changes made, 19 to missing)
(6,688 real changes made, 33 to missing)
(22,161 real changes made, 161 to missing)
(79,087 real changes made, 1,606 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace annual_industry_first_valid = Job`x'_Industry if Hrly_wage_Job
> `x'_==annual_first_valid_wage | Hrly_comp_Job`x'_==annual_first_valid_comp
  3. }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made, 1 to missing)
(4 real changes made)
(7 real changes made)
(23 real changes made)
(74 real changes made)
(293 real changes made, 1 to missing)
(1,274 real changes made, 2 to missing)
(6,916 real changes made, 31 to missing)
(99,178 real changes made, 212 to missing)

. 
. foreach x of numlist 13(-1)1 {
  2.     replace annual_occupation_median      = Job`x'_Occupation if Hrly_wage
> _Job`x'_==annual_median_wage | Hrly_comp_Job`x'_==annual_median_comp
  3. }
(3,025 real changes made, 3,025 to missing)
(12,009 real changes made, 12,008 to missing)
(2,533 real changes made, 2,529 to missing)
(2,672 real changes made, 2,668 to missing)
(31,037 real changes made, 31,024 to missing)
(5,249 real changes made, 5,197 to missing)
(9,762 real changes made, 9,606 to missing)
(325 real changes made)
(996 real changes made, 3 to missing)
(2,553 real changes made, 16 to missing)
(9,220 real changes made, 43 to missing)
(17,874 real changes made, 140 to missing)
(80,335 real changes made, 1,586 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace annual_occupation_min         = Job`x'_Occupation if Hrly_wage
> _Job`x'_==annual_least_wage | Hrly_comp_Job`x'_==annual_least_comp
  3. }
(3,026 real changes made, 3,025 to missing)
(12,009 real changes made, 12,008 to missing)
(2,533 real changes made, 2,530 to missing)
(2,673 real changes made, 2,668 to missing)
(31,040 real changes made, 31,026 to missing)
(5,254 real changes made, 5,197 to missing)
(9,769 real changes made, 9,606 to missing)
(369 real changes made, 1 to missing)
(1,103 real changes made, 3 to missing)
(3,545 real changes made, 14 to missing)
(11,221 real changes made, 42 to missing)
(34,470 real changes made, 177 to missing)
(91,079 real changes made, 1,615 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace annual_occupation_max         = Job`x'_Occupation if Hrly_wage
> _Job`x'_==annual_most_wage | Hrly_comp_Job`x'_==annual_most_comp
  3. }
(3,025 real changes made, 3,025 to missing)
(12,009 real changes made, 12,008 to missing)
(2,532 real changes made, 2,529 to missing)
(2,673 real changes made, 2,668 to missing)
(31,033 real changes made, 31,024 to missing)
(5,250 real changes made, 5,197 to missing)
(9,751 real changes made, 9,606 to missing)
(327 real changes made)
(929 real changes made)
(2,815 real changes made, 15 to missing)
(8,786 real changes made, 38 to missing)
(29,479 real changes made, 167 to missing)
(99,271 real changes made, 1,627 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace annual_occupation_main        = Job`x'_Occupation if Hrly_wage
> _Job`x'_==annual_main_wage | Hrly_comp_Job`x'_==annual_main_comp
  3. }
(3,241 real changes made, 3,241 to missing)
(12,225 real changes made, 12,224 to missing)
(3,080 real changes made, 3,077 to missing)
(3,115 real changes made, 3,111 to missing)
(38,877 real changes made, 38,868 to missing)
(6,122 real changes made, 6,067 to missing)
(12,138 real changes made, 11,998 to missing)
(315 real changes made, 1 to missing)
(849 real changes made, 2 to missing)
(2,541 real changes made, 21 to missing)
(7,611 real changes made, 49 to missing)
(24,777 real changes made, 194 to missing)
(85,166 real changes made, 1,688 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace annual_occupation_first_valid = Job`x'_Occupation if Hrly_wage
> _Job`x'_==annual_first_valid_wage | Hrly_comp_Job`x'_==annual_first_valid_com
> p
  3. }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made, 1 to missing)
(4 real changes made)
(7 real changes made)
(23 real changes made)
(74 real changes made)
(293 real changes made, 1 to missing)
(1,291 real changes made, 2 to missing)
(6,965 real changes made, 31 to missing)
(99,535 real changes made, 211 to missing)

. 
. 
. foreach x of numlist 13(-1)1 {
  2.     replace internship_min = Job`x'_Internship if Hrly_wage_Job`x'_==annua
> l_least_wage | Hrly_comp_Job`x'_==annual_least_comp
  3. }
(3,026 real changes made, 3,025 to missing)
(8,984 real changes made, 8,983 to missing)
(2,531 real changes made, 2,529 to missing)
(5,605 real changes made, 5,603 to missing)
(22,522 real changes made, 22,515 to missing)
(7,777 real changes made, 7,762 to missing)
(9,648 real changes made, 9,616 to missing)
(106 real changes made, 1 to missing)
(464 real changes made, 1 to missing)
(1,809 real changes made)
(7,266 real changes made, 3 to missing)
(25,663 real changes made, 4 to missing)
(69,933 real changes made, 8 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace internship_max = Job`x'_Internship if Hrly_wage_Job`x'_==annua
> l_most_wage | Hrly_comp_Job`x'_==annual_most_comp
  3. }
(3,025 real changes made, 3,025 to missing)
(8,984 real changes made, 8,983 to missing)
(2,531 real changes made, 2,529 to missing)
(5,605 real changes made, 5,603 to missing)
(22,515 real changes made, 22,515 to missing)
(7,774 real changes made, 7,762 to missing)
(9,639 real changes made, 9,616 to missing)
(74 real changes made, 1 to missing)
(310 real changes made)
(1,219 real changes made, 1 to missing)
(5,176 real changes made, 3 to missing)
(21,504 real changes made, 3 to missing)
(76,983 real changes made, 9 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace internship_main = Job`x'_Internship if Hrly_wage_Job`x'_==annu
> al_main_wage | Hrly_comp_Job`x'_==annual_main_comp
  3. }
(3,241 real changes made, 3,241 to missing)
(8,984 real changes made, 8,983 to missing)
(3,079 real changes made, 3,077 to missing)
(6,553 real changes made, 6,552 to missing)
(29,288 real changes made, 29,288 to missing)
(8,994 real changes made, 8,980 to missing)
(12,025 real changes made, 12,008 to missing)
(63 real changes made, 2 to missing)
(246 real changes made)
(959 real changes made)
(4,227 real changes made, 5 to missing)
(18,125 real changes made, 7 to missing)
(72,797 real changes made, 9 to missing)

. foreach x of numlist 13(-1)1 {
  2.     replace internship_first_valid = Job`x'_Internship if Hrly_wage_Job`x'
> _==annual_first_valid_wage | Hrly_comp_Job`x'_==annual_first_valid_comp
  3. }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made)
(4 real changes made)
(7 real changes made)
(17 real changes made)
(64 real changes made)
(260 real changes made)
(1,123 real changes made, 1 to missing)
(6,158 real changes made, 4 to missing)
(88,212 real changes made, 5 to missing)

. 
. gen internship = (Job1_Internship==1 | Job2_Internship==1 | Job3_Internship==
> 1 | Job4_Internship==1 | Job5_Internship==1 | Job6_Internship==1 | Job7_Inter
> nship==1 | Job8_Internship==1 | Job9_Internship==1 | Job10_Internship==1 | Jo
> b11_Internship==1 | Job12_Internship==1 | Job13_Internship==1)

. 
. replace annual_occupation_median = annual_occupation_max if annual_occupation
> _min==annual_occupation_max
(6,245 real changes made, 18 to missing)

. replace annual_industry_median   = annual_industry_max if annual_industry_min
> ==annual_industry_max
(6,750 real changes made, 18 to missing)

. 
. 
. * Create categorical variables for industries and occupations at highest leve
> l of aggregation
. gen annual_occ_min         = .
(332,408 missing values generated)

. gen annual_occ_median      = .
(332,408 missing values generated)

. gen annual_occ_max         = .
(332,408 missing values generated)

. gen annual_occ_main        = .
(332,408 missing values generated)

. gen annual_occ_first_valid = .
(332,408 missing values generated)

. 
. local types = "min median max main first_valid"

. 
. foreach x of local types {
  2.     qui replace annual_occ_`x' = 1  if inrange(annual_occupation_`x',  10,
> 950 )
  3.     qui replace annual_occ_`x' = 2  if inrange(annual_occupation_`x',1000,
> 1960)
  4.     qui replace annual_occ_`x' = 3  if inrange(annual_occupation_`x',2000,
> 2960)
  5.     qui replace annual_occ_`x' = 4  if inrange(annual_occupation_`x',3000,
> 3950)
  6.     qui replace annual_occ_`x' = 5  if inrange(annual_occupation_`x',4000,
> 4960)
  7.     qui replace annual_occ_`x' = 6  if inrange(annual_occupation_`x',5000,
> 5930)
  8.     qui replace annual_occ_`x' = 7  if inrange(annual_occupation_`x',6000,
> 6940)
  9.     qui replace annual_occ_`x' = 8  if inrange(annual_occupation_`x',7000,
> 7850)
 10.     qui replace annual_occ_`x' = 9  if inrange(annual_occupation_`x',7900,
> 8960)
 11.     qui replace annual_occ_`x' = 10 if inrange(annual_occupation_`x',9000,
> 9990)
 12. }

. 
. lab def vlOccupations 1 "EXECUTIVE AND MANAGEMENT" 2 "MATH, COMPUTER, ENGINEE
> RING, PHYSICAL & SOCIAL SCIENTISTS" 3 "COUNSELORS, LAWYERS, TEACHERS, ENTERTA
> INERS, MEDIA WORKERS" 4 "HEALTH CARE AND PROTECTIVE SERVICES" 5 "FOOD PREP, C
> LEANING, PERSONAL CARE, SALES" 6 "OFFICE AND ADMINISTRATIVE SUPPORT WORKERS" 
> 7 "FARMING, FISHING, FORESTRY AND CONSTRUCTION" 8 "INSTALLATION, MAINTENANCE,
>  PRODUCTION, FOOD PREP" 9 "SETTER, OPERATORS, TENDERS" 10 "TRANSPORTATION/MAT
> ERIAL MOVERS, MILITARY, SPECIAL CODES"

. 
. lab val annual_occ_min vlOccupations

. lab val annual_occ_median vlOccupations

. lab val annual_occ_max vlOccupations

. 
. gen annual_ind_min = .
(332,408 missing values generated)

. gen annual_ind_median = .
(332,408 missing values generated)

. gen annual_ind_max = .
(332,408 missing values generated)

. gen annual_ind_main = .
(332,408 missing values generated)

. gen annual_ind_first_valid = .
(332,408 missing values generated)

. 
. foreach x of local types {
  2.     qui replace annual_ind_`x' = 1  if inrange(annual_industry_`x', 170,77
> 0 )
  3.     qui replace annual_ind_`x' = 2  if inrange(annual_industry_`x',1070,39
> 90)
  4.     qui replace annual_ind_`x' = 3  if inrange(annual_industry_`x',4070,57
> 90)
  5.     qui replace annual_ind_`x' = 4  if inrange(annual_industry_`x',5890,58
> 90)
  6.     qui replace annual_ind_`x' = 5  if inrange(annual_industry_`x',6070,67
> 80)
  7.     qui replace annual_ind_`x' = 6  if inrange(annual_industry_`x',6870,71
> 90)
  8.     qui replace annual_ind_`x' = 7  if inrange(annual_industry_`x',7270,77
> 90)
  9.     qui replace annual_ind_`x' = 8  if inrange(annual_industry_`x',7860,84
> 70)
 10.     qui replace annual_ind_`x' = 9  if inrange(annual_industry_`x',8560,92
> 90)
 11.     qui replace annual_ind_`x' = 10 if inrange(annual_industry_`x',9370,99
> 90)
 12. }

. 
. lab def vlIndustries 1 "AGRICULTURE, FORESTRY, FISHING, MINING, UTILITIES, CO
> NSTRUCTION" 2 "MANUFACTURING" 3 "WHOLESALE & RETAIL TRADE" 4 "ARTS, ENTERTAIN
> MENT AND RECREATION SERVICES" 5 "TRANSPORTATION, WAREHOUSING, INFORMATION AND
>  COMMUNICATION" 6 "FIRE" 7 "PROFESSIONAL AND RELATED SERVICES" 8 "EDUCATIONAL
> , HEALTH, AND SOCIAL SERVICES" 9 "ENTERTAINMENT, ACCOMODATIONS, AND FOOD & OT
> HER SERVICES" 10 "PUBLIC ADMINISTRATION, MILITARY & SPECIAL CODES"

. lab val annual_ind_min vlIndustries

. lab val annual_ind_median vlIndustries

. lab val annual_ind_max vlIndustries

. 
. codebook annual_occ_* annual_ind_*

-------------------------------------------------------------------------------
annual_occ_min                                                      (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)
                 label:  vlOccupations

                 range:  [1,10]                       units:  1
         unique values:  10                       missing .:  214,336/332,408

              examples:  5     FOOD PREP, CLEANING, PERSONAL CARE, SALES
                         .     
                         .     
                         .     

-------------------------------------------------------------------------------
annual_occ_median                                                   (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)
                 label:  vlOccupations

                 range:  [1,10]                       units:  1
         unique values:  10                       missing .:  236,350/332,408

              examples:  6     OFFICE AND ADMINISTRATIVE SUPPORT WORKERS
                         .     
                         .     
                         .     

-------------------------------------------------------------------------------
annual_occ_max                                                      (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)
                 label:  vlOccupations

                 range:  [1,10]                       units:  1
         unique values:  10                       missing .:  214,330/332,408

              examples:  5     FOOD PREP, CLEANING, PERSONAL CARE, SALES
                         .     
                         .     
                         .     

-------------------------------------------------------------------------------
annual_occ_main                                                     (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)

                 range:  [1,10]                       units:  1
         unique values:  10                       missing .:  229,252/332,408

                  mean:   5.37465
              std. dev:   2.24019

           percentiles:        10%       25%       50%       75%       90%
                                 3         4         5         6         9

-------------------------------------------------------------------------------
annual_occ_first_valid                                              (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)

                 range:  [1,10]                       units:  1
         unique values:  10                       missing .:  230,116/332,408

                  mean:   5.42595
              std. dev:   2.15081

           percentiles:        10%       25%       50%       75%       90%
                                 3         5         5         6         9

-------------------------------------------------------------------------------
annual_ind_min                                                      (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)
                 label:  vlIndustries

                 range:  [1,10]                       units:  1
         unique values:  9                        missing .:  220,564/332,408

            tabulation:  Freq.   Numeric  Label
                         9,025         1  AGRICULTURE, FORESTRY, FISHING,
                                          MINING, UTILITIES, CONSTRUCTION
                         6,312         2  MANUFACTURING
                        23,130         3  WHOLESALE & RETAIL TRADE
                         5,088         5  TRANSPORTATION, WAREHOUSING,
                                          INFORMATION AND COMMUNICATION
                         5,080         6  FIRE
                        10,910         7  PROFESSIONAL AND RELATED
                                          SERVICES
                        16,985         8  EDUCATIONAL, HEALTH, AND SOCIAL
                                          SERVICES
                        31,738         9  ENTERTAINMENT, ACCOMODATIONS,
                                          AND FOOD & OTHER SERVICES
                         3,576        10  PUBLIC ADMINISTRATION, MILITARY
                                          & SPECIAL CODES
                       220,564         .  

-------------------------------------------------------------------------------
annual_ind_median                                                   (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)
                 label:  vlIndustries

                 range:  [1,10]                       units:  1
         unique values:  9                        missing .:  242,106/332,408

            tabulation:  Freq.   Numeric  Label
                         8,094         1  AGRICULTURE, FORESTRY, FISHING,
                                          MINING, UTILITIES, CONSTRUCTION
                         5,459         2  MANUFACTURING
                        17,555         3  WHOLESALE & RETAIL TRADE
                         4,221         5  TRANSPORTATION, WAREHOUSING,
                                          INFORMATION AND COMMUNICATION
                         4,429         6  FIRE
                         8,999         7  PROFESSIONAL AND RELATED
                                          SERVICES
                        13,628         8  EDUCATIONAL, HEALTH, AND SOCIAL
                                          SERVICES
                        24,791         9  ENTERTAINMENT, ACCOMODATIONS,
                                          AND FOOD & OTHER SERVICES
                         3,126        10  PUBLIC ADMINISTRATION, MILITARY
                                          & SPECIAL CODES
                       242,106         .  

-------------------------------------------------------------------------------
annual_ind_max                                                      (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)
                 label:  vlIndustries

                 range:  [1,10]                       units:  1
         unique values:  9                        missing .:  220,557/332,408

            tabulation:  Freq.   Numeric  Label
                        10,287         1  AGRICULTURE, FORESTRY, FISHING,
                                          MINING, UTILITIES, CONSTRUCTION
                         7,375         2  MANUFACTURING
                        21,202         3  WHOLESALE & RETAIL TRADE
                         5,711         5  TRANSPORTATION, WAREHOUSING,
                                          INFORMATION AND COMMUNICATION
                         5,680         6  FIRE
                        12,147         7  PROFESSIONAL AND RELATED
                                          SERVICES
                        17,207         8  EDUCATIONAL, HEALTH, AND SOCIAL
                                          SERVICES
                        28,389         9  ENTERTAINMENT, ACCOMODATIONS,
                                          AND FOOD & OTHER SERVICES
                         3,853        10  PUBLIC ADMINISTRATION, MILITARY
                                          & SPECIAL CODES
                       220,557         .  

-------------------------------------------------------------------------------
annual_ind_main                                                     (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)

                 range:  [1,10]                       units:  1
         unique values:  9                        missing .:  235,479/332,408

            tabulation:  Freq.  Value
                         8,095  1
                         6,403  2
                        18,961  3
                         4,992  5
                         5,223  6
                        10,192  7
                        15,937  8
                        23,660  9
                         3,466  10
                       235,479  .

-------------------------------------------------------------------------------
annual_ind_first_valid                                              (unlabeled)
-------------------------------------------------------------------------------

                  type:  numeric (float)

                 range:  [1,10]                       units:  1
         unique values:  9                        missing .:  230,117/332,408

            tabulation:  Freq.  Value
                         8,551  1
                         6,366  2
                        20,462  3
                         5,059  5
                         5,012  6
                        10,444  7
                        16,231  8
                        27,107  9
                         3,059  10
                       230,117  .

. 
. /*-----------------------------------------*\
> | Hours per week at various jobs            |
> \*-----------------------------------------*/
. egen total_hours_week           = rowtotal(Hrs_week_Job?_ Hrs_week_Job??_), m
> issing
(214800 missing values generated)

. egen avg_hours_week_across_jobs = rowmean (Hrs_week_Job?_ Hrs_week_Job??_)
(214800 missing values generated)

. 
. /*-----------------------------------------*\
> | Length of employment (longest job)        |
> \*-----------------------------------------*/
. * egen longest_job  = rowmax(Emp1_length_weeks_rounded Emp2_length_weeks_roun
> ded Emp3_length_weeks_rounded Emp4_length_weeks_rounded Emp5_length_weeks_rou
> nded Emp6_length_weeks_rounded Emp7_length_weeks_rounded Emp8_length_weeks_ro
> unded Emp9_length_weeks_rounded Emp10_length_weeks_rounded Emp11_length_weeks
> _rounded)
. * egen shortest_job = rowmin(Emp1_length_weeks_rounded Emp2_length_weeks_roun
> ded Emp3_length_weeks_rounded Emp4_length_weeks_rounded Emp5_length_weeks_rou
> nded Emp6_length_weeks_rounded Emp7_length_weeks_rounded Emp8_length_weeks_ro
> unded Emp9_length_weeks_rounded Emp10_length_weeks_rounded Emp11_length_weeks
> _rounded)
. 
. /*-----------------------------------------*\
> | Hours per week for each year              |
> \*-----------------------------------------*/
. * main variable is CVC_HOURS_WK_YR_ALL -- total hours worked in the year acro
> ss all jobs
. egen    Hrs_worked_tot           = rowtotal(Hours_week1_ Hours_week2_ Hours_w
> eek3_ Hours_week4_ Hours_week5_ Hours_week6_ Hours_week7_ Hours_week8_ Hours_
> week9_ Hours_week10_ Hours_week11_ Hours_week12_ Hours_week13_ Hours_week14_ 
> Hours_week15_ Hours_week16_ Hours_week17_ Hours_week18_ Hours_week19_ Hours_w
> eek20_ Hours_week21_ Hours_week22_ Hours_week23_ Hours_week24_ Hours_week25_ 
> Hours_week26_ Hours_week27_ Hours_week28_ Hours_week29_ Hours_week30_ Hours_w
> eek31_ Hours_week32_ Hours_week33_ Hours_week34_ Hours_week35_ Hours_week36_ 
> Hours_week37_ Hours_week38_ Hours_week39_ Hours_week40_ Hours_week41_ Hours_w
> eek42_ Hours_week43_ Hours_week44_ Hours_week45_ Hours_week46_ Hours_week47_ 
> Hours_week48_ Hours_week49_ Hours_week50_ Hours_week51_ Hours_week52_ Hours_w
> eek53_)

. qui gen Hrs_worked_tot_prime     = floor(52*(Hrs_worked_tot/potential_LF_week
> s))     if year==2011 & inrange(Interview_date,ym(2011,9),ym(2011,12))

. replace Hrs_worked_tot           = Hrs_worked_tot_prime                      
>         if year==2011 & inrange(Interview_date,ym(2011,9),ym(2011,12))
(442 real changes made)

. generat Created_Hours_Worked     = Total_Hours_Worked                        
>                                                                       // this
>  creates an identical variable to the BLS-created annual hours worked for com
> parison purposes
(25,567 missing values generated)

. qui gen Total_Hours_Worked_prime = floor(52*(Total_Hours_Worked/potential_LF_
> weeks)) if year==2011 & inrange(Interview_date,ym(2011,9),ym(2011,12))

. replace Total_Hours_Worked       = Total_Hours_Worked_prime                  
>         if year==2011 & inrange(Interview_date,ym(2011,9),ym(2011,12))
(678 real changes made, 245 to missing)

. replace Total_Hours_Worked       = Hrs_worked_tot                            
>         if mi(Total_Hours_Worked) | Total_Hours_Worked==0              // rep
> lace the created annual hours worked with the sum of the reported weekly hour
> s worked if the created one is missing
(25,626 real changes made)

. replace Total_Hours_Worked       = 5000                                      
>         if Total_Hours_Worked>5000 & ~mi(Total_Hours_Worked)
(373 real changes made)

. 
. * Annual Hours from weekly job and hours per week at job, using dual job info
. gen annualHrsWrkCalcCalc = 0

. forvalues Y = 1/13 {
  2.     generat Hrs_week_alt_Job`Y'_ = Hrs_week_Job`Y'_
  3.     replace Hrs_week_alt_Job`Y'_ = 0 if mi(Hrs_week_Job`Y'_)
  4.     replace annualHrsWrkCalcCalc = annualHrsWrkCalcCalc + weeks_employed_J
> ob`Y'*Hrs_week_alt_Job`Y'_
  5. }
(215,948 missing values generated)
(215,948 real changes made)
(90,672 real changes made)
(278,765 missing values generated)
(278,765 real changes made)
(39,662 real changes made)
(313,352 missing values generated)
(313,352 real changes made)
(12,489 real changes made)
(326,267 missing values generated)
(326,267 real changes made)
(3,419 real changes made)
(330,478 missing values generated)
(330,478 real changes made)
(918 real changes made)
(331,780 missing values generated)
(331,780 real changes made)
(270 real changes made)
(332,157 missing values generated)
(332,157 real changes made)
(86 real changes made)
(332,325 missing values generated)
(332,325 real changes made)
(28 real changes made)
(332,384 missing values generated)
(332,384 real changes made)
(6 real changes made)
(332,402 missing values generated)
(332,402 real changes made)
(1 real change made)
(332,407 missing values generated)
(332,407 real changes made)
(0 real changes made)
(332,407 missing values generated)
(332,407 real changes made)
(0 real changes made)
(332,407 missing values generated)
(332,407 real changes made)
(0 real changes made)

. 
. forvalues x = 1/53 {
  2.     egen HrsWrkCalcCalc_week`x' = rowtotal(total_hrs_week`x'_1 total_hrs_w
> eek`x'_2 total_hrs_week`x'_3 total_hrs_week`x'_4 total_hrs_week`x'_5 total_hr
> s_week`x'_6 total_hrs_week`x'_7 total_hrs_week`x'_8 total_hrs_week`x'_9 total
> _hrs_week`x'_10 total_hrs_week`x'_11)
  3. }

. 
. forvalues x = 1/53 {
  2.     generat hours_week_use`x' = max(HrsWrkCalcCalc_week`x',Hours_week`x'_)
>  if ~mi(Hours_week`x'_)
  3.     replace hours_week_use`x' = HrsWrkCalcCalc_week`x'                    
>  if  mi(Hours_week`x'_)
  4.     replace hours_week_use`x' = 160                                       
>  if inrange(hours_week_use`x',160,.)
  5. }
(240,081 missing values generated)
(240,081 real changes made)
(69 real changes made)
(240,389 missing values generated)
(240,389 real changes made)
(63 real changes made)
(240,464 missing values generated)
(240,464 real changes made)
(68 real changes made)
(240,983 missing values generated)
(240,983 real changes made)
(67 real changes made)
(240,761 missing values generated)
(240,761 real changes made)
(67 real changes made)
(240,738 missing values generated)
(240,738 real changes made)
(67 real changes made)
(240,741 missing values generated)
(240,741 real changes made)
(65 real changes made)
(240,782 missing values generated)
(240,782 real changes made)
(64 real changes made)
(240,533 missing values generated)
(240,533 real changes made)
(68 real changes made)
(240,284 missing values generated)
(240,284 real changes made)
(67 real changes made)
(240,290 missing values generated)
(240,290 real changes made)
(69 real changes made)
(240,233 missing values generated)
(240,233 real changes made)
(69 real changes made)
(240,353 missing values generated)
(240,353 real changes made)
(69 real changes made)
(239,740 missing values generated)
(239,740 real changes made)
(68 real changes made)
(239,924 missing values generated)
(239,924 real changes made)
(69 real changes made)
(239,553 missing values generated)
(239,553 real changes made)
(70 real changes made)
(239,745 missing values generated)
(239,745 real changes made)
(69 real changes made)
(239,062 missing values generated)
(239,062 real changes made)
(74 real changes made)
(239,175 missing values generated)
(239,175 real changes made)
(76 real changes made)
(238,860 missing values generated)
(238,860 real changes made)
(76 real changes made)
(238,851 missing values generated)
(238,851 real changes made)
(75 real changes made)
(238,011 missing values generated)
(238,011 real changes made)
(77 real changes made)
(236,619 missing values generated)
(236,619 real changes made)
(81 real changes made)
(236,185 missing values generated)
(236,185 real changes made)
(84 real changes made)
(235,390 missing values generated)
(235,390 real changes made)
(87 real changes made)
(235,075 missing values generated)
(235,075 real changes made)
(89 real changes made)
(234,016 missing values generated)
(234,016 real changes made)
(90 real changes made)
(234,244 missing values generated)
(234,244 real changes made)
(84 real changes made)
(233,889 missing values generated)
(233,889 real changes made)
(89 real changes made)
(234,110 missing values generated)
(234,110 real changes made)
(89 real changes made)
(233,545 missing values generated)
(233,545 real changes made)
(96 real changes made)
(234,004 missing values generated)
(234,004 real changes made)
(86 real changes made)
(234,557 missing values generated)
(234,557 real changes made)
(86 real changes made)
(235,360 missing values generated)
(235,360 real changes made)
(82 real changes made)
(236,012 missing values generated)
(236,012 real changes made)
(77 real changes made)
(236,325 missing values generated)
(236,325 real changes made)
(75 real changes made)
(236,887 missing values generated)
(236,887 real changes made)
(72 real changes made)
(236,631 missing values generated)
(236,631 real changes made)
(73 real changes made)
(236,662 missing values generated)
(236,662 real changes made)
(72 real changes made)
(235,915 missing values generated)
(235,915 real changes made)
(74 real changes made)
(236,148 missing values generated)
(236,148 real changes made)
(75 real changes made)
(235,862 missing values generated)
(235,862 real changes made)
(79 real changes made)
(236,408 missing values generated)
(236,408 real changes made)
(78 real changes made)
(236,567 missing values generated)
(236,567 real changes made)
(79 real changes made)
(236,998 missing values generated)
(236,998 real changes made)
(77 real changes made)
(237,369 missing values generated)
(237,369 real changes made)
(81 real changes made)
(237,626 missing values generated)
(237,626 real changes made)
(79 real changes made)
(237,951 missing values generated)
(237,951 real changes made)
(73 real changes made)
(238,021 missing values generated)
(238,021 real changes made)
(72 real changes made)
(238,754 missing values generated)
(238,754 real changes made)
(70 real changes made)
(239,113 missing values generated)
(239,113 real changes made)
(68 real changes made)
(240,352 missing values generated)
(240,352 real changes made)
(68 real changes made)
(316,604 missing values generated)
(316,604 real changes made)
(13 real changes made)

. 
. generat annualHrsWrkUse = max(annualHrsWrkCalcCalc,Hrs_worked_tot,Created_Hou
> rs_Worked) if ~mi(Created_Hours_Worked)
(25,567 missing values generated)

. replace annualHrsWrkUse = max(annualHrsWrkCalcCalc,Hrs_worked_tot)           
>            if  mi(Created_Hours_Worked)
(25,567 real changes made)

. 
. generat Total_Hours_Worked_Old = Total_Hours_Worked

. replace Total_Hours_Worked     = annualHrsWrkUse
(15,717 real changes made)

. 
. genera Avg_hrs_worked = Total_Hours_Worked/weeks_employed
(205,394 missing values generated)

. recode Avg_hrs_worked (. = 0)
(Avg_hrs_worked: 205394 changes made)

. 
. 
. /*-----------------------------------------*\
> | Get the Primary Activity for each person  |
> \*-----------------------------------------*/
. lab def vlprimact 1 "School Only" 2 "School and PT" 3 "Part-Time Work" 4 "Ful
> l-Time Work" 5 "Military" 6 "Other Act." 7 "Miss Interview"

. 
. /*-------------------------*\
> | Monthly stuff to get:     |
> |                           |
> | school enrollment status  |
> | military participation    |
> | weeks worked              |
> | hours worked              |
> | wage                      |
> | graduation status         |
> \*-------------------------*/
. gen byte num_weeks_Jan = 4

. gen byte num_weeks_Feb = 4

. gen byte num_weeks_Mar = 5

. gen byte num_weeks_Apr = 4

. gen byte num_weeks_May = 5

. gen byte num_weeks_Jun = 4

. gen byte num_weeks_Jul = 5

. gen byte num_weeks_Aug = 4

. gen byte num_weeks_Sep = 4

. gen byte num_weeks_Oct = 5

. gen byte num_weeks_Nov = 4

. gen byte num_weeks_Dec = 4

. replace  num_weeks_Dec = 5 if inlist(year,1994,2000,2005,2011)
(35,936 real changes made)

. 
. egen byte weeks_worked_Jan = rowtotal(Employed_Week_1  Employed_Week_2  Emplo
> yed_Week_3  Employed_Week_4                  )

. egen byte weeks_worked_Feb = rowtotal(Employed_Week_5  Employed_Week_6  Emplo
> yed_Week_7  Employed_Week_8                  )

. egen byte weeks_worked_Mar = rowtotal(Employed_Week_9  Employed_Week_10 Emplo
> yed_Week_11 Employed_Week_12 Employed_Week_13)

. egen byte weeks_worked_Apr = rowtotal(Employed_Week_14 Employed_Week_15 Emplo
> yed_Week_16 Employed_Week_17                 )

. egen byte weeks_worked_May = rowtotal(Employed_Week_18 Employed_Week_19 Emplo
> yed_Week_20 Employed_Week_21 Employed_Week_22)

. egen byte weeks_worked_Jun = rowtotal(Employed_Week_23 Employed_Week_24 Emplo
> yed_Week_25 Employed_Week_26                 )

. egen byte weeks_worked_Jul = rowtotal(Employed_Week_27 Employed_Week_28 Emplo
> yed_Week_29 Employed_Week_30 Employed_Week_31)

. egen byte weeks_worked_Aug = rowtotal(Employed_Week_32 Employed_Week_33 Emplo
> yed_Week_34 Employed_Week_35                 )

. egen byte weeks_worked_Sep = rowtotal(Employed_Week_36 Employed_Week_37 Emplo
> yed_Week_38 Employed_Week_39                 )

. egen byte weeks_worked_Oct = rowtotal(Employed_Week_40 Employed_Week_41 Emplo
> yed_Week_42 Employed_Week_43 Employed_Week_44)

. egen byte weeks_worked_Nov = rowtotal(Employed_Week_45 Employed_Week_46 Emplo
> yed_Week_47 Employed_Week_48                 )

. egen byte weeks_worked_Dec = rowtotal(Employed_Week_49 Employed_Week_50 Emplo
> yed_Week_51 Employed_Week_52 Employed_Week_53)

. 
. egen hours_worked_Jan = rowtotal(hours_week_use1  hours_week_use2  hours_week
> _use3  hours_week_use4                  )

. egen hours_worked_Feb = rowtotal(hours_week_use5  hours_week_use6  hours_week
> _use7  hours_week_use8                  )

. egen hours_worked_Mar = rowtotal(hours_week_use9  hours_week_use10 hours_week
> _use11 hours_week_use12 hours_week_use13)

. egen hours_worked_Apr = rowtotal(hours_week_use14 hours_week_use15 hours_week
> _use16 hours_week_use17                 )

. egen hours_worked_May = rowtotal(hours_week_use18 hours_week_use19 hours_week
> _use20 hours_week_use21 hours_week_use22)

. egen hours_worked_Jun = rowtotal(hours_week_use23 hours_week_use24 hours_week
> _use25 hours_week_use26                 )

. egen hours_worked_Jul = rowtotal(hours_week_use27 hours_week_use28 hours_week
> _use29 hours_week_use30 hours_week_use31)

. egen hours_worked_Aug = rowtotal(hours_week_use32 hours_week_use33 hours_week
> _use34 hours_week_use35                 )

. egen hours_worked_Sep = rowtotal(hours_week_use36 hours_week_use37 hours_week
> _use38 hours_week_use39                 )

. egen hours_worked_Oct = rowtotal(hours_week_use40 hours_week_use41 hours_week
> _use42 hours_week_use43 hours_week_use44)

. egen hours_worked_Nov = rowtotal(hours_week_use45 hours_week_use46 hours_week
> _use47 hours_week_use48                 )

. egen hours_worked_Dec = rowtotal(hours_week_use49 hours_week_use50 hours_week
> _use51 hours_week_use52 hours_week_use53)

. 
. egen wageJan = rowmean(wage_week1  wage_week2  wage_week3  wage_week4        
>      )
(258520 missing values generated)

. egen wageFeb = rowmean(wage_week5  wage_week6  wage_week7  wage_week8        
>      )
(257992 missing values generated)

. egen wageMar = rowmean(wage_week9  wage_week10 wage_week11 wage_week12 wage_w
> eek13)
(256395 missing values generated)

. egen wageApr = rowmean(wage_week14 wage_week15 wage_week16 wage_week17       
>      )
(256074 missing values generated)

. egen wageMay = rowmean(wage_week18 wage_week19 wage_week20 wage_week21 wage_w
> eek22)
(253265 missing values generated)

. egen wageJun = rowmean(wage_week23 wage_week24 wage_week25 wage_week26       
>      )
(251407 missing values generated)

. egen wageJul = rowmean(wage_week27 wage_week28 wage_week29 wage_week30 wage_w
> eek31)
(249698 missing values generated)

. egen wageAug = rowmean(wage_week32 wage_week33 wage_week34 wage_week35       
>      )
(249823 missing values generated)

. egen wageSep = rowmean(wage_week36 wage_week37 wage_week38 wage_week39       
>      )
(251648 missing values generated)

. egen wageOct = rowmean(wage_week40 wage_week41 wage_week42 wage_week43 wage_w
> eek44)
(250821 missing values generated)

. egen wageNov = rowmean(wage_week45 wage_week46 wage_week47 wage_week48       
>      )
(253632 missing values generated)

. egen wageDec = rowmean(wage_week49 wage_week50 wage_week51 wage_week52 wage_w
> eek53)
(256673 missing values generated)

. 
. egen wageMedianJan = rowmedian(wage_week1  wage_week2  wage_week3  wage_week4
>              )
(258520 missing values generated)

. egen wageMedianFeb = rowmedian(wage_week5  wage_week6  wage_week7  wage_week8
>              )
(257992 missing values generated)

. egen wageMedianMar = rowmedian(wage_week9  wage_week10 wage_week11 wage_week1
> 2 wage_week13)
(256395 missing values generated)

. egen wageMedianApr = rowmedian(wage_week14 wage_week15 wage_week16 wage_week1
> 7            )
(256074 missing values generated)

. egen wageMedianMay = rowmedian(wage_week18 wage_week19 wage_week20 wage_week2
> 1 wage_week22)
(253265 missing values generated)

. egen wageMedianJun = rowmedian(wage_week23 wage_week24 wage_week25 wage_week2
> 6            )
(251407 missing values generated)

. egen wageMedianJul = rowmedian(wage_week27 wage_week28 wage_week29 wage_week3
> 0 wage_week31)
(249698 missing values generated)

. egen wageMedianAug = rowmedian(wage_week32 wage_week33 wage_week34 wage_week3
> 5            )
(249823 missing values generated)

. egen wageMedianSep = rowmedian(wage_week36 wage_week37 wage_week38 wage_week3
> 9            )
(251648 missing values generated)

. egen wageMedianOct = rowmedian(wage_week40 wage_week41 wage_week42 wage_week4
> 3 wage_week44)
(250821 missing values generated)

. egen wageMedianNov = rowmedian(wage_week45 wage_week46 wage_week47 wage_week4
> 8            )
(253632 missing values generated)

. egen wageMedianDec = rowmedian(wage_week49 wage_week50 wage_week51 wage_week5
> 2 wage_week53)
(256673 missing values generated)

. 
. egen wageAltJan = rowmean(wagerWeek1  wagerWeek2  wagerWeek3  wagerWeek4     
>         )
(269065 missing values generated)

. egen wageAltFeb = rowmean(wagerWeek5  wagerWeek6  wagerWeek7  wagerWeek8     
>         )
(268592 missing values generated)

. egen wageAltMar = rowmean(wagerWeek9  wagerWeek10 wagerWeek11 wagerWeek12 wag
> erWeek13)
(267102 missing values generated)

. egen wageAltApr = rowmean(wagerWeek14 wagerWeek15 wagerWeek16 wagerWeek17    
>         )
(266823 missing values generated)

. egen wageAltMay = rowmean(wagerWeek18 wagerWeek19 wagerWeek20 wagerWeek21 wag
> erWeek22)
(264214 missing values generated)

. egen wageAltJun = rowmean(wagerWeek23 wagerWeek24 wagerWeek25 wagerWeek26    
>         )
(262409 missing values generated)

. egen wageAltJul = rowmean(wagerWeek27 wagerWeek28 wagerWeek29 wagerWeek30 wag
> erWeek31)
(260839 missing values generated)

. egen wageAltAug = rowmean(wagerWeek32 wagerWeek33 wagerWeek34 wagerWeek35    
>         )
(260959 missing values generated)

. egen wageAltSep = rowmean(wagerWeek36 wagerWeek37 wagerWeek38 wagerWeek39    
>         )
(262832 missing values generated)

. egen wageAltOct = rowmean(wagerWeek40 wagerWeek41 wagerWeek42 wagerWeek43 wag
> erWeek44)
(262132 missing values generated)

. egen wageAltNov = rowmean(wagerWeek45 wagerWeek46 wagerWeek47 wagerWeek48    
>         )
(263290 missing values generated)

. egen wageAltDec = rowmean(wagerWeek49 wagerWeek50 wagerWeek51 wagerWeek52 wag
> erWeek53)
(264793 missing values generated)

. 
. egen wageAltMedianJan = rowmedian(wagerWeek1  wagerWeek2  wagerWeek3  wagerWe
> ek4             )
(269065 missing values generated)

. egen wageAltMedianFeb = rowmedian(wagerWeek5  wagerWeek6  wagerWeek7  wagerWe
> ek8             )
(268592 missing values generated)

. egen wageAltMedianMar = rowmedian(wagerWeek9  wagerWeek10 wagerWeek11 wagerWe
> ek12 wagerWeek13)
(267102 missing values generated)

. egen wageAltMedianApr = rowmedian(wagerWeek14 wagerWeek15 wagerWeek16 wagerWe
> ek17            )
(266823 missing values generated)

. egen wageAltMedianMay = rowmedian(wagerWeek18 wagerWeek19 wagerWeek20 wagerWe
> ek21 wagerWeek22)
(264214 missing values generated)

. egen wageAltMedianJun = rowmedian(wagerWeek23 wagerWeek24 wagerWeek25 wagerWe
> ek26            )
(262409 missing values generated)

. egen wageAltMedianJul = rowmedian(wagerWeek27 wagerWeek28 wagerWeek29 wagerWe
> ek30 wagerWeek31)
(260839 missing values generated)

. egen wageAltMedianAug = rowmedian(wagerWeek32 wagerWeek33 wagerWeek34 wagerWe
> ek35            )
(260959 missing values generated)

. egen wageAltMedianSep = rowmedian(wagerWeek36 wagerWeek37 wagerWeek38 wagerWe
> ek39            )
(262832 missing values generated)

. egen wageAltMedianOct = rowmedian(wagerWeek40 wagerWeek41 wagerWeek42 wagerWe
> ek43 wagerWeek44)
(262132 missing values generated)

. egen wageAltMedianNov = rowmedian(wagerWeek45 wagerWeek46 wagerWeek47 wagerWe
> ek48            )
(263290 missing values generated)

. egen wageAltMedianDec = rowmedian(wagerWeek49 wagerWeek50 wagerWeek51 wagerWe
> ek52 wagerWeek53)
(264793 missing values generated)

. 
. egen compJan = rowmean(comp_week1  comp_week2  comp_week3  comp_week4        
>      )
(258520 missing values generated)

. egen compFeb = rowmean(comp_week5  comp_week6  comp_week7  comp_week8        
>      )
(257992 missing values generated)

. egen compMar = rowmean(comp_week9  comp_week10 comp_week11 comp_week12 comp_w
> eek13)
(256395 missing values generated)

. egen compApr = rowmean(comp_week14 comp_week15 comp_week16 comp_week17       
>      )
(256074 missing values generated)

. egen compMay = rowmean(comp_week18 comp_week19 comp_week20 comp_week21 comp_w
> eek22)
(253265 missing values generated)

. egen compJun = rowmean(comp_week23 comp_week24 comp_week25 comp_week26       
>      )
(251407 missing values generated)

. egen compJul = rowmean(comp_week27 comp_week28 comp_week29 comp_week30 comp_w
> eek31)
(249698 missing values generated)

. egen compAug = rowmean(comp_week32 comp_week33 comp_week34 comp_week35       
>      )
(249823 missing values generated)

. egen compSep = rowmean(comp_week36 comp_week37 comp_week38 comp_week39       
>      )
(251648 missing values generated)

. egen compOct = rowmean(comp_week40 comp_week41 comp_week42 comp_week43 comp_w
> eek44)
(250821 missing values generated)

. egen compNov = rowmean(comp_week45 comp_week46 comp_week47 comp_week48       
>      )
(253632 missing values generated)

. egen compDec = rowmean(comp_week49 comp_week50 comp_week51 comp_week52 comp_w
> eek53)
(256673 missing values generated)

. 
. egen compMedianJan = rowmedian(comp_week1  comp_week2  comp_week3  comp_week4
>              )
(258520 missing values generated)

. egen compMedianFeb = rowmedian(comp_week5  comp_week6  comp_week7  comp_week8
>              )
(257992 missing values generated)

. egen compMedianMar = rowmedian(comp_week9  comp_week10 comp_week11 comp_week1
> 2 comp_week13)
(256395 missing values generated)

. egen compMedianApr = rowmedian(comp_week14 comp_week15 comp_week16 comp_week1
> 7            )
(256074 missing values generated)

. egen compMedianMay = rowmedian(comp_week18 comp_week19 comp_week20 comp_week2
> 1 comp_week22)
(253265 missing values generated)

. egen compMedianJun = rowmedian(comp_week23 comp_week24 comp_week25 comp_week2
> 6            )
(251407 missing values generated)

. egen compMedianJul = rowmedian(comp_week27 comp_week28 comp_week29 comp_week3
> 0 comp_week31)
(249698 missing values generated)

. egen compMedianAug = rowmedian(comp_week32 comp_week33 comp_week34 comp_week3
> 5            )
(249823 missing values generated)

. egen compMedianSep = rowmedian(comp_week36 comp_week37 comp_week38 comp_week3
> 9            )
(251648 missing values generated)

. egen compMedianOct = rowmedian(comp_week40 comp_week41 comp_week42 comp_week4
> 3 comp_week44)
(250821 missing values generated)

. egen compMedianNov = rowmedian(comp_week45 comp_week46 comp_week47 comp_week4
> 8            )
(253632 missing values generated)

. egen compMedianDec = rowmedian(comp_week49 comp_week50 comp_week51 comp_week5
> 2 comp_week53)
(256673 missing values generated)

. 
. egen compAltJan = rowmean(comprWeek1  comprWeek2  comprWeek3  comprWeek4     
>         )
(271720 missing values generated)

. egen compAltFeb = rowmean(comprWeek5  comprWeek6  comprWeek7  comprWeek8     
>         )
(271254 missing values generated)

. egen compAltMar = rowmean(comprWeek9  comprWeek10 comprWeek11 comprWeek12 com
> prWeek13)
(269865 missing values generated)

. egen compAltApr = rowmean(comprWeek14 comprWeek15 comprWeek16 comprWeek17    
>         )
(269674 missing values generated)

. egen compAltMay = rowmean(comprWeek18 comprWeek19 comprWeek20 comprWeek21 com
> prWeek22)
(267175 missing values generated)

. egen compAltJun = rowmean(comprWeek23 comprWeek24 comprWeek25 comprWeek26    
>         )
(265497 missing values generated)

. egen compAltJul = rowmean(comprWeek27 comprWeek28 comprWeek29 comprWeek30 com
> prWeek31)
(264063 missing values generated)

. egen compAltAug = rowmean(comprWeek32 comprWeek33 comprWeek34 comprWeek35    
>         )
(264211 missing values generated)

. egen compAltSep = rowmean(comprWeek36 comprWeek37 comprWeek38 comprWeek39    
>         )
(266062 missing values generated)

. egen compAltOct = rowmean(comprWeek40 comprWeek41 comprWeek42 comprWeek43 com
> prWeek44)
(265356 missing values generated)

. egen compAltNov = rowmean(comprWeek45 comprWeek46 comprWeek47 comprWeek48    
>         )
(266508 missing values generated)

. egen compAltDec = rowmean(comprWeek49 comprWeek50 comprWeek51 comprWeek52 com
> prWeek53)
(268009 missing values generated)

. 
. egen compAltMedianJan = rowmedian(comprWeek1  comprWeek2  comprWeek3  comprWe
> ek4             )
(271720 missing values generated)

. egen compAltMedianFeb = rowmedian(comprWeek5  comprWeek6  comprWeek7  comprWe
> ek8             )
(271254 missing values generated)

. egen compAltMedianMar = rowmedian(comprWeek9  comprWeek10 comprWeek11 comprWe
> ek12 comprWeek13)
(269865 missing values generated)

. egen compAltMedianApr = rowmedian(comprWeek14 comprWeek15 comprWeek16 comprWe
> ek17            )
(269674 missing values generated)

. egen compAltMedianMay = rowmedian(comprWeek18 comprWeek19 comprWeek20 comprWe
> ek21 comprWeek22)
(267175 missing values generated)

. egen compAltMedianJun = rowmedian(comprWeek23 comprWeek24 comprWeek25 comprWe
> ek26            )
(265497 missing values generated)

. egen compAltMedianJul = rowmedian(comprWeek27 comprWeek28 comprWeek29 comprWe
> ek30 comprWeek31)
(264063 missing values generated)

. egen compAltMedianAug = rowmedian(comprWeek32 comprWeek33 comprWeek34 comprWe
> ek35            )
(264211 missing values generated)

. egen compAltMedianSep = rowmedian(comprWeek36 comprWeek37 comprWeek38 comprWe
> ek39            )
(266062 missing values generated)

. egen compAltMedianOct = rowmedian(comprWeek40 comprWeek41 comprWeek42 comprWe
> ek43 comprWeek44)
(265356 missing values generated)

. egen compAltMedianNov = rowmedian(comprWeek45 comprWeek46 comprWeek47 comprWe
> ek48            )
(266508 missing values generated)

. egen compAltMedianDec = rowmedian(comprWeek49 comprWeek50 comprWeek51 comprWe
> ek52 comprWeek53)
(268009 missing values generated)

. 
. foreach x of local months {
  2.     replace hours_worked_`x' = 400 if inrange(hours_worked_`x',400,.) & nu
> m_weeks_`x'==4
  3.     replace hours_worked_`x' = 500 if inrange(hours_worked_`x',500,.) & nu
> m_weeks_`x'==5
  4.     gen    avgHrs`x' = hours_worked_`x'/weeks_worked_`x'
  5. }
(395 real changes made)
(0 real changes made)
(233,853 missing values generated)
(414 real changes made)
(0 real changes made)
(235,210 missing values generated)
(0 real changes made)
(408 real changes made)
(234,276 missing values generated)
(411 real changes made)
(0 real changes made)
(234,550 missing values generated)
(0 real changes made)
(436 real changes made)
(231,418 missing values generated)
(493 real changes made)
(0 real changes made)
(228,886 missing values generated)
(0 real changes made)
(504 real changes made)
(226,576 missing values generated)
(466 real changes made)
(0 real changes made)
(227,182 missing values generated)
(424 real changes made)
(0 real changes made)
(230,033 missing values generated)
(0 real changes made)
(422 real changes made)
(228,925 missing values generated)
(439 real changes made)
(0 real changes made)
(230,909 missing values generated)
(367 real changes made)
(64 real changes made)
(232,652 missing values generated)

. 
. egen byte weeksMilitaryJan = rowtotal(Military_Week_1  Military_Week_2  Milit
> ary_Week_3  Military_Week_4                  )

. egen byte weeksMilitaryFeb = rowtotal(Military_Week_5  Military_Week_6  Milit
> ary_Week_7  Military_Week_8                  )

. egen byte weeksMilitaryMar = rowtotal(Military_Week_9  Military_Week_10 Milit
> ary_Week_11 Military_Week_12 Military_Week_13)

. egen byte weeksMilitaryApr = rowtotal(Military_Week_14 Military_Week_15 Milit
> ary_Week_16 Military_Week_17                 )

. egen byte weeksMilitaryMay = rowtotal(Military_Week_18 Military_Week_19 Milit
> ary_Week_20 Military_Week_21 Military_Week_22)

. egen byte weeksMilitaryJun = rowtotal(Military_Week_23 Military_Week_24 Milit
> ary_Week_25 Military_Week_26                 )

. egen byte weeksMilitaryJul = rowtotal(Military_Week_27 Military_Week_28 Milit
> ary_Week_29 Military_Week_30 Military_Week_31)

. egen byte weeksMilitaryAug = rowtotal(Military_Week_32 Military_Week_33 Milit
> ary_Week_34 Military_Week_35                 )

. egen byte weeksMilitarySep = rowtotal(Military_Week_36 Military_Week_37 Milit
> ary_Week_38 Military_Week_39                 )

. egen byte weeksMilitaryOct = rowtotal(Military_Week_40 Military_Week_41 Milit
> ary_Week_42 Military_Week_43 Military_Week_44)

. egen byte weeksMilitaryNov = rowtotal(Military_Week_45 Military_Week_46 Milit
> ary_Week_47 Military_Week_48                 )

. egen byte weeksMilitaryDec = rowtotal(Military_Week_49 Military_Week_50 Milit
> ary_Week_51 Military_Week_52 Military_Week_53)

. 
. egen weeksSelfEmployedJan = rowtotal(Self_employed_Week1_  Self_employed_Week
> 2_  Self_employed_Week3_  Self_employed_Week4_             )

. egen weeksSelfEmployedFeb = rowtotal(Self_employed_Week5_  Self_employed_Week
> 6_  Self_employed_Week7_  Self_employed_Week8_             )

. egen weeksSelfEmployedMar = rowtotal(Self_employed_Week9_  Self_employed_Week
> 10_ Self_employed_Week11_ Self_employed_Week12_ Self_employed_Week13_)

. egen weeksSelfEmployedApr = rowtotal(Self_employed_Week14_ Self_employed_Week
> 15_ Self_employed_Week16_ Self_employed_Week17_  )

. egen weeksSelfEmployedMay = rowtotal(Self_employed_Week18_ Self_employed_Week
> 19_ Self_employed_Week20_ Self_employed_Week21_ Self_employed_Week22_)

. egen weeksSelfEmployedJun = rowtotal(Self_employed_Week23_ Self_employed_Week
> 24_ Self_employed_Week25_ Self_employed_Week26_  )

. egen weeksSelfEmployedJul = rowtotal(Self_employed_Week27_ Self_employed_Week
> 28_ Self_employed_Week29_ Self_employed_Week30_ Self_employed_Week31_)

. egen weeksSelfEmployedAug = rowtotal(Self_employed_Week32_ Self_employed_Week
> 33_ Self_employed_Week34_ Self_employed_Week35_ )

. egen weeksSelfEmployedSep = rowtotal(Self_employed_Week36_ Self_employed_Week
> 37_ Self_employed_Week38_ Self_employed_Week39_ )

. egen weeksSelfEmployedOct = rowtotal(Self_employed_Week40_ Self_employed_Week
> 41_ Self_employed_Week42_ Self_employed_Week43_ Self_employed_Week44_)

. egen weeksSelfEmployedNov = rowtotal(Self_employed_Week45_ Self_employed_Week
> 46_ Self_employed_Week47_ Self_employed_Week48_ )

. egen weeksSelfEmployedDec = rowtotal(Self_employed_Week49_ Self_employed_Week
> 50_ Self_employed_Week51_ Self_employed_Week52_ Self_employed_Week53_)

. 
. *****************************************************************************
. * Use Tot_Weeks_Worked_all and Total_Hours_Worked to replicate 'recall' 
. *  caculations done in y79. Quote from y79_create_work.do
. * "* [7] Supplement work history weekly arrays with weeks_worked_recall and
. *       hrs_per_wk_recall for cohorts 1957-1959
. *       Force all months to be a consecutive spell. Randomize start month
. *       If mi hrs_per_wk_recall, assume PT, set hrs=10
. *
. *  Note: there is a variable weeks_worked_annual_svy that works well with
. *        recall; on or after 17, each indiv has either weeks_worked_recall
. *        or weeks_worked_annual_svy. Use these vars for ages 17-19.
. *        Similarly true for hours_worked_annual_svy   "
. *****************************************************************************
. gen     monthsWorkedRecall = round(Tot_Weeks_Worked_all/4.3,1)     if inlist(
> age,12,13,14,15,16,17,18,19)
(304,183 missing values generated)

. replace monthsWorkedRecall = 12 if inrange(monthsWorkedRecall,12,.)
(0 real changes made)

. 
. gen     avgHrsRecall       = Total_Hours_Worked /Tot_Weeks_Worked_all if inra
> nge(monthsWorkedRecall,1,12) & !mi(Total_Hours_Worked )
(321,014 missing values generated)

. replace avgHrsRecall       = 50                                       if inra
> nge(avgHrsRecall,50,.) 
(1,401 real changes made)

. replace avgHrsRecall       = 10                                       if inra
> nge(monthsWorkedRecall,1,12) & mi(avgHrsRecall)
(0 real changes made)

. 
. gen firstMonthWorkedRecall = round(runiform()*(12-monthsWorkedRecall),1)+1   
> if inrange(monthsWorkedRecall,1,12)
(321,014 missing values generated)

. 
. foreach month in `months' {
  2.     gen workedRecall`month'=inrange(scalar`month',firstMonthWorkedRecall,f
> irstMonthWorkedRecall+monthsWorkedRecall-1) & !mi(monthsWorkedRecall)
  3. }

. foreach month in `months' {
  2.     gen     avgHrsRecall`month'= avgHrsRecall if workedRecall`month'==1
  3. }
(325,433 missing values generated)
(324,074 missing values generated)
(323,311 missing values generated)
(322,840 missing values generated)
(322,555 missing values generated)
(322,390 missing values generated)
(322,347 missing values generated)
(322,486 missing values generated)
(322,744 missing values generated)
(323,253 missing values generated)
(324,047 missing values generated)
(325,495 missing values generated)

. 
. /*----------------------------------------------------------*\
> | Create primary activity variable                           | 
> |     Full-Time Work:                                        |
> |       i.   max weeks worked in the month                   |
> |       ii.  35+ hours worked per week worked                |
> |       iii. Not in school that month                        |
> |     Part-Time Work:                                        |
> |       i.   not in full-time work                           |
> |       ii.  >0   weeks worked  per month OR                 |
> |       iii. >=42 hours worked per month                     |
> |                                                            |
> |     Military:                                              |
> |     weeksMilitary>=weeksEmp AND                            |
> |     not enrolled in school that month  --> 5               |
> |     else, treat as others:                                 |
> |       yes school                       -->                 |
> |            no work                     --> 1               |
> |            yes work                    --> 2               |
> |       no school                        -->                 |
> |                                        --> 3,4,6           |
> \*----------------------------------------------------------*/
. 
. capture drop flag1 flag2

. gen flag1 = yofd(dofm(R1interviewDate)) ==1998

. gen flag2 = yofd(dofm(R17interviewDate))==2016

. 
. foreach x of local months {
  2.     * Use School_Yr_to_Grade variable to determine school attendance if cu
> rrent month is before the interview date
.     gen byte In_school`x' = ~mi(School_Yr_to_Grade) if year<=1996
  3.     replace  In_school`x' = ~mi(School_Yr_to_Grade) if         mdy(scalar`
> x',1,year)<dofm(R1interviewDate) & year==1997
  4.     replace  In_school`x' = ~mi(School_Yr_to_Grade) if flag1 & mdy(scalar`
> x',1,year)<dofm(R1interviewDate) & year==1998 // for the few people who had R
> 1 interviews in 1998
  5.     replace  In_school`x' = (Enrolled_K12_`x'==1 | Enrolled_college_`x'==1
> ) if         mdy(scalar`x',1,year)>=dofm(R1interviewDate) & year==1997
  6.     replace  In_school`x' = (Enrolled_K12_`x'==1 | Enrolled_college_`x'==1
> ) if flag1 & mdy(scalar`x',1,year)>=dofm(R1interviewDate) & year==1998 // for
>  the few people who had R1 interviews in 1998
  7.     replace  In_school`x' = (Enrolled_K12_`x'==1 | Enrolled_college_`x'==1
> ) if year>1997 & ~flag1
  8.     replace  In_school`x' = (Enrolled_K12_`x'==1 | Enrolled_college_`x'==1
> ) if year>1998 & flag1
  9. }
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)
(179,680 missing values generated)
(8,984 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(170,696 real changes made)
(0 real changes made)

. foreach x of local months {
  2.     gen byte Enr_K12`x' = In_school`x' & ~Enrolled_college_`x'
  3. }

. * impute Jul, Aug as "summer months" in the years before the interview date (
> Tyler, 9/18/2013)
. foreach x in Jul Aug {
  2.     replace In_school`x' = 0 if year<=1996
  3.     replace In_school`x' = 0 if         mdy(scalar`x',1,year)<dofm(R1inter
> viewDate) & year==1997
  4.     replace In_school`x' = 0 if flag1 & mdy(scalar`x',1,year)<dofm(R1inter
> viewDate) & year==1998 // for the few people who had R1 interviews in 1998
  5.     replace Enr_K12`x'   = 0 if year<=1996
  6.     replace Enr_K12`x'   = 0 if         mdy(scalar`x',1,year)<dofm(R1inter
> viewDate) & year==1997
  7.     replace Enr_K12`x'   = 0 if flag1 & mdy(scalar`x',1,year)<dofm(R1inter
> viewDate) & year==1998 // for the few people who had R1 interviews in 1998
  8.     
. }
(76,351 real changes made)
(8,685 real changes made)
(0 real changes made)
(76,351 real changes made)
(8,685 real changes made)
(0 real changes made)
(76,351 real changes made)
(8,685 real changes made)
(0 real changes made)
(76,351 real changes made)
(8,684 real changes made)
(0 real changes made)

. 
. * Create annual school, work, military and other dummies
. foreach x of local months {
  2.     gen byte workFT`x'      = (weeks_worked_`x'==num_weeks_`x') & inrange(
> avgHrs`x',35,.)
  3.     gen byte workPT`x'      = ~workFT`x' & (hours_worked_`x'>=42 | weeks_w
> orked_`x'>=1)
  4.     gen byte military`x'    = inrange(weeksMilitary`x',1,.) & weeksMilitar
> y`x'>=weeks_worked_`x' & ~In_school`x'
  5.     gen byte workSch`x'     = In_school`x' & (hours_worked_`x'>=8 | weeks_
> worked_`x'>=1)
  6.     gen byte schOnly`x'     = In_school`x' &  hours_worked_`x'<8  & weeks_
> worked_`x'<1
  7.     
.     gen byte work`x'        = (workFT`x') | (workPT`x')
  8.     
.     gen byte workK12`x'     = workSch`x'*Enr_K12`x'
  9.     gen byte workCollege`x' = workSch`x'*Enrolled_college_`x'
 10.     
.     gen byte other`x'       = ~In_school`x' & ~work`x' & ~military`x' // uses
>  defn of workB
 11.     
.     * Label variables
.     lab var workFT`x'      "WORKED FT"
 12.     lab var workPT`x'      "WORKED PT"
 13.     lab var work`x'        "WORKED"
 14.     lab var workSch`x'     "WORKED AND ATTENDED SCHOOL"
 15.     lab var workK12`x'     "WORKED AND ATTENDED K12"
 16.     lab var workCollege`x' "WORKED AND ATTENDED COLLEGE"
 17.     lab var military`x'    "SERVED IN MILITARY"
 18.     lab var other`x'       "OTHER ACTIVITY"
 19.     
.     * Create activityC
.     gen byte activity`x' = .
 20.     replace  activity`x' = 1  if schOnly`x'                               
> // School Only
 21.     replace  activity`x' = 2  if workSch`x'                               
> // School and Work using defn A
 22.     replace  activity`x' = 3  if ~military`x' & ~In_school`x' & workPT`x' 
> // Part-Time Work Only using defn A
 23.     replace  activity`x' = 4  if ~military`x' & ~In_school`x' & workFT`x' 
> // Full-Time Work Only
 24.     replace  activity`x' = 5  if military`x'                              
> // Military
 25.     replace  activity`x' = 6  if other`x'                                 
> // Other
 26.     
.     lab var activity`x' "ACTIVITY"
 27. }
(332,408 missing values generated)
(109,812 real changes made)
(27,459 real changes made)
(17,496 real changes made)
(53,577 real changes made)
(2,333 real changes made)
(121,731 real changes made)
(332,408 missing values generated)
(109,753 real changes made)
(26,437 real changes made)
(16,930 real changes made)
(53,813 real changes made)
(2,349 real changes made)
(123,126 real changes made)
(332,408 missing values generated)
(109,051 real changes made)
(26,893 real changes made)
(17,611 real changes made)
(53,600 real changes made)
(2,340 real changes made)
(122,913 real changes made)
(332,408 missing values generated)
(108,626 real changes made)
(26,876 real changes made)
(16,424 real changes made)
(54,535 real changes made)
(2,359 real changes made)
(123,588 real changes made)
(332,408 missing values generated)
(105,828 real changes made)
(29,229 real changes made)
(17,473 real changes made)
(54,275 real changes made)
(2,350 real changes made)
(123,253 real changes made)
(332,408 missing values generated)
(97,665 real changes made)
(25,734 real changes made)
(20,823 real changes made)
(56,941 real changes made)
(2,409 real changes made)
(128,836 real changes made)
(332,408 missing values generated)
(6,629 real changes made)
(16,070 real changes made)
(30,378 real changes made)
(59,361 real changes made)
(2,459 real changes made)
(217,511 real changes made)
(332,408 missing values generated)
(14,027 real changes made)
(23,482 real changes made)
(24,210 real changes made)
(57,514 real changes made)
(2,423 real changes made)
(210,752 real changes made)
(332,408 missing values generated)
(103,067 real changes made)
(27,683 real changes made)
(18,035 real changes made)
(56,640 real changes made)
(2,406 real changes made)
(124,577 real changes made)
(332,408 missing values generated)
(102,955 real changes made)
(27,842 real changes made)
(19,554 real changes made)
(56,063 real changes made)
(2,368 real changes made)
(123,626 real changes made)
(332,408 missing values generated)
(102,895 real changes made)
(27,945 real changes made)
(17,802 real changes made)
(55,734 real changes made)
(2,342 real changes made)
(125,690 real changes made)
(332,408 missing values generated)
(102,036 real changes made)
(28,179 real changes made)
(16,345 real changes made)
(55,211 real changes made)
(2,351 real changes made)
(128,286 real changes made)

. 
. * Recall - Create annual school, work, military and other dummies
. foreach x of local months {
  2.     gen byte workFTRecall`x'      = (workedRecall`x'==1 & inrange(avgHrsRe
> call`x',35, .))
  3.     gen byte workPTRecall`x'      = ~workFTRecall`x' & (workedRecall`x'==1
>  & inrange(avgHrsRecall`x',10,35))
  4.     gen byte militaryRecall`x'    = inrange(weeksMilitary`x',1,.) & weeksM
> ilitary`x'>=weeks_worked_`x' & ~In_school`x'
  5.     gen byte workSchRecall`x'     = In_school`x' & workedRecall`x'==1
  6.     gen byte schOnlyRecall`x'     = In_school`x' & workedRecall`x'==0
  7.     
.     gen byte workRecall`x'        = (workFTRecall`x') | (workPTRecall`x')
  8.     
.     gen byte workK12Recall`x'     = workSchRecall`x'*Enr_K12`x'
  9.     gen byte workCollegeRecall`x' = workSchRecall`x'*Enrolled_college_`x'
 10.     
.     gen byte otherRecall`x'       = ~In_school`x' & ~workRecall`x' & ~militar
> yRecall`x' 
 11.     
.     * Label variables
.     lab var workFTRecall`x'      "WORKED FT"
 12.     lab var workPTRecall`x'      "WORKED PT"
 13.     lab var workRecall`x'        "WORKED"
 14.     lab var workSchRecall`x'     "WORKED AND ATTENDED SCHOOL"
 15.     lab var workK12Recall`x'     "WORKED AND ATTENDED K12"
 16.     lab var workCollegeRecall`x' "WORKED AND ATTENDED COLLEGE"
 17.     lab var militaryRecall`x'    "SERVED IN MILITARY"
 18.     lab var otherRecall`x'       "OTHER ACTIVITY"
 19.     
.     * Create activityC
.     gen byte activityRecall`x' = .
 20.     replace  activityRecall`x' = 1  if schOnlyRecall`x'                   
>                         
 21.     replace  activityRecall`x' = 2  if workSchRecall`x'                   
>                   
 22.     replace  activityRecall`x' = 3  if ~militaryRecall`x' & ~In_school`x' 
> & workPTRecall`x' 
 23.     replace  activityRecall`x' = 4  if ~militaryRecall`x' & ~In_school`x' 
> & workFTRecall`x' 
 24.     replace  activityRecall`x' = 5  if militaryRecall`x'                  
>                   
 25.     replace  activityRecall`x' = 6  if otherRecall`x'                     
>                   
 26.     
.     lab var activityRecall`x' "ACTIVITY"
 27. }
(332,408 missing values generated)
(127,030 real changes made)
(10,241 real changes made)
(764 real changes made)
(4,283 real changes made)
(2,333 real changes made)
(187,757 real changes made)
(332,408 missing values generated)
(125,500 real changes made)
(10,690 real changes made)
(974 real changes made)
(4,948 real changes made)
(2,349 real changes made)
(187,947 real changes made)
(332,408 missing values generated)
(124,941 real changes made)
(11,003 real changes made)
(1,088 real changes made)
(5,274 real changes made)
(2,340 real changes made)
(187,762 real changes made)
(332,408 missing values generated)
(124,334 real changes made)
(11,168 real changes made)
(1,177 real changes made)
(5,468 real changes made)
(2,359 real changes made)
(187,902 real changes made)
(332,408 missing values generated)
(123,756 real changes made)
(11,301 real changes made)
(1,208 real changes made)
(5,584 real changes made)
(2,350 real changes made)
(188,209 real changes made)
(332,408 missing values generated)
(112,807 real changes made)
(10,592 real changes made)
(1,553 real changes made)
(5,841 real changes made)
(2,409 real changes made)
(199,206 real changes made)
(332,408 missing values generated)
(20,953 real changes made)
(1,746 real changes made)
(2,233 real changes made)
(6,074 real changes made)
(2,459 real changes made)
(298,943 real changes made)
(332,408 missing values generated)
(34,815 real changes made)
(2,694 real changes made)
(1,747 real changes made)
(5,893 real changes made)
(2,423 real changes made)
(284,836 real changes made)
(332,408 missing values generated)
(119,867 real changes made)
(10,883 real changes made)
(1,270 real changes made)
(5,686 real changes made)
(2,406 real changes made)
(192,296 real changes made)
(332,408 missing values generated)
(120,097 real changes made)
(10,700 real changes made)
(1,195 real changes made)
(5,463 real changes made)
(2,368 real changes made)
(192,585 real changes made)
(332,408 missing values generated)
(120,419 real changes made)
(10,421 real changes made)
(1,042 real changes made)
(5,130 real changes made)
(2,342 real changes made)
(193,054 real changes made)
(332,408 missing values generated)
(120,299 real changes made)
(9,916 real changes made)
(822 real changes made)
(4,437 real changes made)
(2,351 real changes made)
(194,583 real changes made)

. 
end of do-file

. 
. sort ID year

. compress
  variable male was float now byte
  variable female was float now byte
  variable m_Meduc was float now byte
  variable m_Feduc was float now byte
  variable foreignBorn was float now byte
  variable m_afqt was float now byte
  variable m_afqtAR was float now byte
  variable m_afqtCS was float now byte
  variable m_afqtMK was float now byte
  variable m_afqtNO was float now byte
  variable m_afqtPC was float now byte
  variable m_afqtWK was float now byte
  variable m_famInc1996 was float now byte
  variable true_rel_HH_head was float now byte
  variable liveWithMom14 was float now byte
  variable femaleHeadHH1997 was float now byte
  variable born_1980 was float now byte
  variable born_1981 was float now byte
  variable born_1982 was float now byte
  variable born_1983 was float now byte
  variable born_1984 was float now byte
  variable now_1997 was float now int
  variable DOB was float now int
  variable age_now was float now byte
  variable white was float now byte
  variable black was float now byte
  variable hispanic was float now byte
  variable mixed was float now byte
  variable Interview_date was float now int
  variable R1interviewDate was float now int
  variable R1interviewDay was float now int
  variable R1interviewWeek was float now int
  variable R2interviewDate was float now int
  variable R2interviewDay was float now int
  variable R2interviewWeek was float now int
  variable R3interviewDate was float now int
  variable R3interviewDay was float now int
  variable R3interviewWeek was float now int
  variable R4interviewDate was float now int
  variable R4interviewDay was float now int
  variable R4interviewWeek was float now int
  variable R5interviewDate was float now int
  variable R5interviewDay was float now int
  variable R5interviewWeek was float now int
  variable R6interviewDate was float now int
  variable R6interviewDay was float now int
  variable R6interviewWeek was float now int
  variable R7interviewDate was float now int
  variable R7interviewDay was float now int
  variable R7interviewWeek was float now int
  variable R8interviewDate was float now int
  variable R8interviewDay was float now int
  variable R8interviewWeek was float now int
  variable R9interviewDate was float now int
  variable R9interviewDay was float now int
  variable R9interviewWeek was float now int
  variable R10interviewDate was float now int
  variable R10interviewDay was float now int
  variable R10interviewWeek was float now int
  variable R11interviewDate was float now int
  variable R11interviewDay was float now int
  variable R11interviewWeek was float now int
  variable R12interviewDate was float now int
  variable R12interviewDay was float now int
  variable R12interviewWeek was float now int
  variable R13interviewDate was float now int
  variable R13interviewDay was float now int
  variable R13interviewWeek was float now int
  variable R14interviewDate was float now byte
  variable R14interviewDay was float now byte
  variable R14interviewWeek was float now byte
  variable R15interviewDate was float now int
  variable R15interviewDay was float now int
  variable R15interviewWeek was float now int
  variable R16interviewDate was float now byte
  variable R16interviewDay was float now byte
  variable R16interviewWeek was float now byte
  variable R17interviewDate was float now int
  variable R17interviewDay was float now int
  variable R17interviewWeek was float now int
  variable Interview_day was float now int
  variable Interview_month was float now byte
  variable miss_interview was float now byte
  variable ever_miss_interview was float now byte
  variable age_at_miss_int was float now byte
  variable year_miss_int was float now int
  variable miss_interview_cum was float now byte
  variable miss_interview_length was float now byte
  variable year_first_long_spell was float now int
  variable long_miss_flag was float now byte
  variable year_first_short_spell was float now int
  variable short_miss_flag was float now byte
  variable miss_interview_last_spell was float now byte
  variable not_missing_interview was float now byte
  variable nonmissing_int_year was float now int
  variable max_nonmissing_int_year was float now int
  variable missIntLastSpell was float now byte
  variable last_survey_yearA was float now int
  variable last_survey_year_hastyA was float now int
  variable last_survey_year was float now int
  variable last_survey_year_hasty was float now int
  variable last_int_dayA was float now int
  variable last_int_day was float now int
  variable ever_miss_1_int was float now byte
  variable ever_miss_2_int was float now byte
  variable ever_miss_3_int was float now byte
  variable ever_miss_4_int was float now byte
  variable ever_miss_5_int was float now byte
  variable ever_miss_6_int was float now byte
  variable ever_miss_7_int was float now byte
  variable ever_miss_8_int was float now byte
  variable ever_miss_9_int was float now byte
  variable ever_miss_10_int was float now byte
  variable ever_miss_11_int was float now byte
  variable ever_miss_12_int was float now byte
  variable ever_miss_13_int was float now byte
  variable ever_miss_3plus_int was float now byte
  variable ever_return_after_1_miss_int was float now byte
  variable ever_return_after_2_miss_int was float now byte
  variable ever_return_after_3_miss_int was float now byte
  variable ever_return_after_4_miss_int was float now byte
  variable ever_return_after_5_miss_int was float now byte
  variable ever_return_after_6_miss_int was float now byte
  variable ever_return_after_7_miss_int was float now byte
  variable ever_return_after_8_miss_int was float now byte
  variable ever_return_after_9_miss_int was float now byte
  variable ever_return_after_10_miss_int was float now byte
  variable ever_return_after_11_miss_int was float now byte
  variable ever_return_after_12_miss_int was float now byte
  variable ever_return_after_13_miss_int was float now byte
  variable ever_return_after_3plus_miss_int was float now byte
  variable Diploma_date was float now int
  variable GED_date was float now int
  variable Diploma_year was float now int
  variable GED_year was float now int
  variable HS_date was float now int
  variable HS_year was float now int
  variable BA_date was float now int
  variable AA_date was float now int
  variable Prof_date was float now int
  variable PhD_date was float now int
  variable MA_date was float now int
  variable Grad_date was float now int
  variable BA_year was float now int
  variable AA_year was float now int
  variable PhD_year was float now int
  variable MA_year was float now int
  variable Prof_year was float now int
  variable Grad_year was float now int
  variable BA_month was float now byte
  variable AA_month was float now byte
  variable GED_month was float now byte
  variable Diploma_month was float now byte
  variable HS_month was float now byte
  variable PhD_month was float now byte
  variable MA_month was float now byte
  variable Prof_month was float now byte
  variable Grad_month was float now byte
  variable year12Grade was float now int
  variable yr12Grade was float now int
  variable Enrolled_K12_Jan was float now byte
  variable Enrolled_college_Jan was float now byte
  variable Enrolled_2yr_Jan was float now byte
  variable Enrolled_4yr_Jan was float now byte
  variable Enrolled_grad_school_Jan was float now byte
  variable Enrolled_K12_Feb was float now byte
  variable Enrolled_college_Feb was float now byte
  variable Enrolled_2yr_Feb was float now byte
  variable Enrolled_4yr_Feb was float now byte
  variable Enrolled_grad_school_Feb was float now byte
  variable Enrolled_K12_Mar was float now byte
  variable Enrolled_college_Mar was float now byte
  variable Enrolled_2yr_Mar was float now byte
  variable Enrolled_4yr_Mar was float now byte
  variable Enrolled_grad_school_Mar was float now byte
  variable Enrolled_K12_Apr was float now byte
  variable Enrolled_college_Apr was float now byte
  variable Enrolled_2yr_Apr was float now byte
  variable Enrolled_4yr_Apr was float now byte
  variable Enrolled_grad_school_Apr was float now byte
  variable Enrolled_K12_May was float now byte
  variable Enrolled_college_May was float now byte
  variable Enrolled_2yr_May was float now byte
  variable Enrolled_4yr_May was float now byte
  variable Enrolled_grad_school_May was float now byte
  variable Enrolled_K12_Jun was float now byte
  variable Enrolled_college_Jun was float now byte
  variable Enrolled_2yr_Jun was float now byte
  variable Enrolled_4yr_Jun was float now byte
  variable Enrolled_grad_school_Jun was float now byte
  variable Enrolled_K12_Jul was float now byte
  variable Enrolled_college_Jul was float now byte
  variable Enrolled_2yr_Jul was float now byte
  variable Enrolled_4yr_Jul was float now byte
  variable Enrolled_grad_school_Jul was float now byte
  variable Enrolled_K12_Aug was float now byte
  variable Enrolled_college_Aug was float now byte
  variable Enrolled_2yr_Aug was float now byte
  variable Enrolled_4yr_Aug was float now byte
  variable Enrolled_grad_school_Aug was float now byte
  variable Enrolled_K12_Sep was float now byte
  variable Enrolled_college_Sep was float now byte
  variable Enrolled_2yr_Sep was float now byte
  variable Enrolled_4yr_Sep was float now byte
  variable Enrolled_grad_school_Sep was float now byte
  variable Enrolled_K12_Oct was float now byte
  variable Enrolled_college_Oct was float now byte
  variable Enrolled_2yr_Oct was float now byte
  variable Enrolled_4yr_Oct was float now byte
  variable Enrolled_grad_school_Oct was float now byte
  variable Enrolled_K12_Nov was float now byte
  variable Enrolled_college_Nov was float now byte
  variable Enrolled_2yr_Nov was float now byte
  variable Enrolled_4yr_Nov was float now byte
  variable Enrolled_grad_school_Nov was float now byte
  variable Enrolled_K12_Dec was float now byte
  variable Enrolled_college_Dec was float now byte
  variable Enrolled_2yr_Dec was float now byte
  variable Enrolled_4yr_Dec was float now byte
  variable Enrolled_grad_school_Dec was float now byte
  variable Months_in_K12 was float now byte
  variable Months_in_college was float now byte
  variable Months_in_2yr was float now byte
  variable Months_in_4yr was float now byte
  variable Months_in_grad_school was float now byte
  variable Months_in_school was float now byte
  variable weeksSchool was float now int
  variable In_K12 was float now byte
  variable In_college was float now byte
  variable In_grad_school was float now byte
  variable lastValidK12AJan was float now int
  variable lastValidK12Jan was float now int
  variable lastValidK12AFeb was float now int
  variable lastValidK12Feb was float now int
  variable lastValidK12AMar was float now int
  variable lastValidK12Mar was float now int
  variable lastValidK12AApr was float now int
  variable lastValidK12Apr was float now int
  variable lastValidK12AMay was float now int
  variable lastValidK12May was float now int
  variable lastValidK12AJun was float now int
  variable lastValidK12Jun was float now int
  variable lastValidK12AJul was float now int
  variable lastValidK12Jul was float now int
  variable lastValidK12AAug was float now int
  variable lastValidK12Aug was float now int
  variable lastValidK12ASep was float now int
  variable lastValidK12Sep was float now int
  variable lastValidK12AOct was float now int
  variable lastValidK12Oct was float now int
  variable lastValidK12ANov was float now int
  variable lastValidK12Nov was float now int
  variable lastValidK12ADec was float now int
  variable lastValidK12Dec was float now int
  variable lastValidK12 was float now int
  variable everColBefHSgradAJan was float now byte
  variable everColBefHSgradJan was float now byte
  variable everColBefHSgradAFeb was float now byte
  variable everColBefHSgradFeb was float now byte
  variable everColBefHSgradAMar was float now byte
  variable everColBefHSgradMar was float now byte
  variable everColBefHSgradAApr was float now byte
  variable everColBefHSgradApr was float now byte
  variable everColBefHSgradAMay was float now byte
  variable everColBefHSgradMay was float now byte
  variable everColBefHSgradAJun was float now byte
  variable everColBefHSgradJun was float now byte
  variable everColBefHSgradAJul was float now byte
  variable everColBefHSgradJul was float now byte
  variable everColBefHSgradAAug was float now byte
  variable everColBefHSgradAug was float now byte
  variable everColBefHSgradASep was float now byte
  variable everColBefHSgradSep was float now byte
  variable everColBefHSgradAOct was float now byte
  variable everColBefHSgradOct was float now byte
  variable everColBefHSgradANov was float now byte
  variable everColBefHSgradNov was float now byte
  variable everColBefHSgradADec was float now byte
  variable everColBefHSgradDec was float now byte
  variable everColBefHSgrad was float now byte
  variable HS_year2 was float now int
  variable HS_month2 was float now byte
  variable everEnrK12A was float now int
  variable everEnrK12 was float now byte
  variable gradGraduate was float now byte
  variable grad4yr was float now byte
  variable grad2yr was float now byte
  variable gradDiploma was float now byte
  variable gradGED was float now byte
  variable gradHS was float now byte
  variable yrGradGraduate was float now byte
  variable yrGrad4yr was float now byte
  variable yrGrad2yr was float now byte
  variable yrGradHS was float now byte
  variable yrGradDiploma was float now byte
  variable yrGradGED was float now byte
  variable lastValidSchoolDateAJan was float now int
  variable lastValidSchoolDateJan was float now int
  variable lastValidSchoolDateAFeb was float now int
  variable lastValidSchoolDateFeb was float now int
  variable lastValidSchoolDateAMar was float now int
  variable lastValidSchoolDateMar was float now int
  variable lastValidSchoolDateAApr was float now int
  variable lastValidSchoolDateApr was float now int
  variable lastValidSchoolDateAMay was float now int
  variable lastValidSchoolDateMay was float now int
  variable lastValidSchoolDateAJun was float now int
  variable lastValidSchoolDateJun was float now int
  variable lastValidSchoolDateAJul was float now int
  variable lastValidSchoolDateJul was float now int
  variable lastValidSchoolDateAAug was float now int
  variable lastValidSchoolDateAug was float now int
  variable lastValidSchoolDateASep was float now int
  variable lastValidSchoolDateSep was float now int
  variable lastValidSchoolDateAOct was float now int
  variable lastValidSchoolDateOct was float now int
  variable lastValidSchoolDateANov was float now int
  variable lastValidSchoolDateNov was float now int
  variable lastValidSchoolDateADec was float now int
  variable lastValidSchoolDateDec was float now int
  variable lastValidSchoolDate was float now int
  variable Self_employed_Week1_ was float now byte
  variable Self_employed_Week2_ was float now byte
  variable Self_employed_Week3_ was float now byte
  variable Self_employed_Week4_ was float now byte
  variable Self_employed_Week5_ was float now byte
  variable Self_employed_Week6_ was float now byte
  variable Self_employed_Week7_ was float now byte
  variable Self_employed_Week8_ was float now byte
  variable Self_employed_Week9_ was float now byte
  variable Self_employed_Week10_ was float now byte
  variable Self_employed_Week11_ was float now byte
  variable Self_employed_Week12_ was float now byte
  variable Self_employed_Week13_ was float now byte
  variable Self_employed_Week14_ was float now byte
  variable Self_employed_Week15_ was float now byte
  variable Self_employed_Week16_ was float now byte
  variable Self_employed_Week17_ was float now byte
  variable Self_employed_Week18_ was float now byte
  variable Self_employed_Week19_ was float now byte
  variable Self_employed_Week20_ was float now byte
  variable Self_employed_Week21_ was float now byte
  variable Self_employed_Week22_ was float now byte
  variable Self_employed_Week23_ was float now byte
  variable Self_employed_Week24_ was float now byte
  variable Self_employed_Week25_ was float now byte
  variable Self_employed_Week26_ was float now byte
  variable Self_employed_Week27_ was float now byte
  variable Self_employed_Week28_ was float now byte
  variable Self_employed_Week29_ was float now byte
  variable Self_employed_Week30_ was float now byte
  variable Self_employed_Week31_ was float now byte
  variable Self_employed_Week32_ was float now byte
  variable Self_employed_Week33_ was float now byte
  variable Self_employed_Week34_ was float now byte
  variable Self_employed_Week35_ was float now byte
  variable Self_employed_Week36_ was float now byte
  variable Self_employed_Week37_ was float now byte
  variable Self_employed_Week38_ was float now byte
  variable Self_employed_Week39_ was float now byte
  variable Self_employed_Week40_ was float now byte
  variable Self_employed_Week41_ was float now byte
  variable Self_employed_Week42_ was float now byte
  variable Self_employed_Week43_ was float now byte
  variable Self_employed_Week44_ was float now byte
  variable Self_employed_Week45_ was float now byte
  variable Self_employed_Week46_ was float now byte
  variable Self_employed_Week47_ was float now byte
  variable Self_employed_Week48_ was float now byte
  variable Self_employed_Week49_ was float now byte
  variable Self_employed_Week50_ was float now byte
  variable Self_employed_Week51_ was float now byte
  variable Self_employed_Week52_ was float now byte
  variable Self_employed_Week53_ was float now byte
  variable self_employed_job_current was float now byte
  variable ind_job_current was float now int
  variable occ_job_current was float now int
  variable internship_job_current was float now byte
  variable self_employed_job_main was float now byte
  variable ind_job_main was float now int
  variable occ_job_main was float now int
  variable internship_job_main was float now byte
  variable weeks_employed was float now byte
  variable weeks_in_labor_force was float now byte
  variable Weeks_Employed_noID was float now byte
  variable Weeks_Emp_Status_Missing0 was float now byte
  variable Weeks_Emp_Status_MissingDotA was float now byte
  variable Weeks_Emp_Status_MissingDotI was float now byte
  variable Weeks_Emp_Status_MissingDotV was float now byte
  variable Weeks_Emp_Status_MissingDotD was float now byte
  variable Weeks_Emp_Status_MissingDotR was float now byte
  variable Weeks_Emp_Status_MissingDot was float now byte
  variable Number_labor_status_switches was float now byte
  variable potential_LF_weeks was float now byte
  variable weeks_employed_prime was float now byte
  variable weeks_in_labor_force_prime was float now byte
  variable Weeks_Employed_noID_prime was float now byte
  variable Hrs_week_Job11_ was float now byte
  variable switch_Job1ID2 was float now byte
  variable switch_Job1ID3 was float now byte
  variable switch_Job1ID4 was float now byte
  variable switch_Job1ID5 was float now byte
  variable switch_Job1ID6 was float now byte
  variable switch_Job1ID7 was float now byte
  variable switch_Job1ID8 was float now byte
  variable switch_Job1ID9 was float now byte
  variable switch_Job1ID10 was float now byte
  variable switch_Job1ID11 was float now byte
  variable switch_Job1ID12 was float now byte
  variable switch_Job1ID13 was float now byte
  variable switch_Job1ID14 was float now byte
  variable switch_Job1ID15 was float now byte
  variable switch_Job1ID16 was float now byte
  variable switch_Job1ID17 was float now byte
  variable switch_Job1ID18 was float now byte
  variable switch_Job1ID19 was float now byte
  variable switch_Job1ID20 was float now byte
  variable switch_Job1ID21 was float now byte
  variable switch_Job1ID22 was float now byte
  variable switch_Job1ID23 was float now byte
  variable switch_Job1ID24 was float now byte
  variable switch_Job1ID25 was float now byte
  variable switch_Job1ID26 was float now byte
  variable switch_Job1ID27 was float now byte
  variable switch_Job1ID28 was float now byte
  variable switch_Job1ID29 was float now byte
  variable switch_Job1ID30 was float now byte
  variable switch_Job1ID31 was float now byte
  variable switch_Job1ID32 was float now byte
  variable switch_Job1ID33 was float now byte
  variable switch_Job1ID34 was float now byte
  variable switch_Job1ID35 was float now byte
  variable switch_Job1ID36 was float now byte
  variable switch_Job1ID37 was float now byte
  variable switch_Job1ID38 was float now byte
  variable switch_Job1ID39 was float now byte
  variable switch_Job1ID40 was float now byte
  variable switch_Job1ID41 was float now byte
  variable switch_Job1ID42 was float now byte
  variable switch_Job1ID43 was float now byte
  variable switch_Job1ID44 was float now byte
  variable switch_Job1ID45 was float now byte
  variable switch_Job1ID46 was float now byte
  variable switch_Job1ID47 was float now byte
  variable switch_Job1ID48 was float now byte
  variable switch_Job1ID49 was float now byte
  variable switch_Job1ID50 was float now byte
  variable switch_Job1ID51 was float now byte
  variable switch_Job1ID52 was float now byte
  variable num_primary_job_switches was float now byte
  variable total_employers was float now byte
  variable total_hrs_week1_1 was float now int
  variable total_hrs_week1_2 was float now int
  variable total_hrs_week1_3 was float now int
  variable total_hrs_week1_4 was float now int
  variable total_hrs_week1_5 was float now byte
  variable total_hrs_week1_6 was float now byte
  variable total_hrs_week1_7 was float now byte
  variable total_hrs_week1_8 was float now byte
  variable total_hrs_week1_9 was float now byte
  variable total_hrs_week1_10 was float now byte
  variable total_hrs_week1_11 was float now byte
  variable total_hrs_week1_12 was float now byte
  variable total_hrs_week1_13 was float now byte
  variable total_hrs_week2_1 was float now int
  variable total_hrs_week2_2 was float now int
  variable total_hrs_week2_3 was float now int
  variable total_hrs_week2_4 was float now int
  variable total_hrs_week2_5 was float now byte
  variable total_hrs_week2_6 was float now byte
  variable total_hrs_week2_7 was float now byte
  variable total_hrs_week2_8 was float now byte
  variable total_hrs_week2_9 was float now byte
  variable total_hrs_week2_10 was float now byte
  variable total_hrs_week2_11 was float now byte
  variable total_hrs_week2_12 was float now byte
  variable total_hrs_week2_13 was float now byte
  variable total_hrs_week3_1 was float now int
  variable total_hrs_week3_2 was float now int
  variable total_hrs_week3_3 was float now int
  variable total_hrs_week3_4 was float now int
  variable total_hrs_week3_5 was float now byte
  variable total_hrs_week3_6 was float now byte
  variable total_hrs_week3_7 was float now byte
  variable total_hrs_week3_8 was float now byte
  variable total_hrs_week3_9 was float now byte
  variable total_hrs_week3_10 was float now byte
  variable total_hrs_week3_11 was float now byte
  variable total_hrs_week3_12 was float now byte
  variable total_hrs_week3_13 was float now byte
  variable total_hrs_week4_1 was float now int
  variable total_hrs_week4_2 was float now int
  variable total_hrs_week4_3 was float now int
  variable total_hrs_week4_4 was float now int
  variable total_hrs_week4_5 was float now byte
  variable total_hrs_week4_6 was float now byte
  variable total_hrs_week4_7 was float now byte
  variable total_hrs_week4_8 was float now byte
  variable total_hrs_week4_9 was float now byte
  variable total_hrs_week4_10 was float now byte
  variable total_hrs_week4_11 was float now byte
  variable total_hrs_week4_12 was float now byte
  variable total_hrs_week4_13 was float now byte
  variable total_hrs_week5_1 was float now int
  variable total_hrs_week5_2 was float now int
  variable total_hrs_week5_3 was float now int
  variable total_hrs_week5_4 was float now int
  variable total_hrs_week5_5 was float now byte
  variable total_hrs_week5_6 was float now byte
  variable total_hrs_week5_7 was float now byte
  variable total_hrs_week5_8 was float now byte
  variable total_hrs_week5_9 was float now byte
  variable total_hrs_week5_10 was float now byte
  variable total_hrs_week5_11 was float now byte
  variable total_hrs_week5_12 was float now byte
  variable total_hrs_week5_13 was float now byte
  variable total_hrs_week6_1 was float now int
  variable total_hrs_week6_2 was float now int
  variable total_hrs_week6_3 was float now int
  variable total_hrs_week6_4 was float now int
  variable total_hrs_week6_5 was float now byte
  variable total_hrs_week6_6 was float now byte
  variable total_hrs_week6_7 was float now byte
  variable total_hrs_week6_8 was float now byte
  variable total_hrs_week6_9 was float now byte
  variable total_hrs_week6_10 was float now byte
  variable total_hrs_week6_11 was float now byte
  variable total_hrs_week6_12 was float now byte
  variable total_hrs_week6_13 was float now byte
  variable total_hrs_week7_1 was float now int
  variable total_hrs_week7_2 was float now int
  variable total_hrs_week7_3 was float now int
  variable total_hrs_week7_4 was float now int
  variable total_hrs_week7_5 was float now byte
  variable total_hrs_week7_6 was float now byte
  variable total_hrs_week7_7 was float now byte
  variable total_hrs_week7_8 was float now byte
  variable total_hrs_week7_9 was float now byte
  variable total_hrs_week7_10 was float now byte
  variable total_hrs_week7_11 was float now byte
  variable total_hrs_week7_12 was float now byte
  variable total_hrs_week7_13 was float now byte
  variable total_hrs_week8_1 was float now int
  variable total_hrs_week8_2 was float now int
  variable total_hrs_week8_3 was float now int
  variable total_hrs_week8_4 was float now int
  variable total_hrs_week8_5 was float now byte
  variable total_hrs_week8_6 was float now byte
  variable total_hrs_week8_7 was float now byte
  variable total_hrs_week8_8 was float now byte
  variable total_hrs_week8_9 was float now byte
  variable total_hrs_week8_10 was float now byte
  variable total_hrs_week8_11 was float now byte
  variable total_hrs_week8_12 was float now byte
  variable total_hrs_week8_13 was float now byte
  variable total_hrs_week9_1 was float now int
  variable total_hrs_week9_2 was float now int
  variable total_hrs_week9_3 was float now int
  variable total_hrs_week9_4 was float now int
  variable total_hrs_week9_5 was float now byte
  variable total_hrs_week9_6 was float now byte
  variable total_hrs_week9_7 was float now byte
  variable total_hrs_week9_8 was float now byte
  variable total_hrs_week9_9 was float now byte
  variable total_hrs_week9_10 was float now byte
  variable total_hrs_week9_11 was float now byte
  variable total_hrs_week9_12 was float now byte
  variable total_hrs_week9_13 was float now byte
  variable total_hrs_week10_1 was float now int
  variable total_hrs_week10_2 was float now int
  variable total_hrs_week10_3 was float now int
  variable total_hrs_week10_4 was float now int
  variable total_hrs_week10_5 was float now byte
  variable total_hrs_week10_6 was float now byte
  variable total_hrs_week10_7 was float now byte
  variable total_hrs_week10_8 was float now byte
  variable total_hrs_week10_9 was float now byte
  variable total_hrs_week10_10 was float now byte
  variable total_hrs_week10_11 was float now byte
  variable total_hrs_week10_12 was float now byte
  variable total_hrs_week10_13 was float now byte
  variable total_hrs_week11_1 was float now int
  variable total_hrs_week11_2 was float now int
  variable total_hrs_week11_3 was float now int
  variable total_hrs_week11_4 was float now int
  variable total_hrs_week11_5 was float now byte
  variable total_hrs_week11_6 was float now byte
  variable total_hrs_week11_7 was float now byte
  variable total_hrs_week11_8 was float now byte
  variable total_hrs_week11_9 was float now byte
  variable total_hrs_week11_10 was float now byte
  variable total_hrs_week11_11 was float now byte
  variable total_hrs_week11_12 was float now byte
  variable total_hrs_week11_13 was float now byte
  variable total_hrs_week12_1 was float now int
  variable total_hrs_week12_2 was float now int
  variable total_hrs_week12_3 was float now int
  variable total_hrs_week12_4 was float now int
  variable total_hrs_week12_5 was float now byte
  variable total_hrs_week12_6 was float now byte
  variable total_hrs_week12_7 was float now byte
  variable total_hrs_week12_8 was float now byte
  variable total_hrs_week12_9 was float now byte
  variable total_hrs_week12_10 was float now byte
  variable total_hrs_week12_11 was float now byte
  variable total_hrs_week12_12 was float now byte
  variable total_hrs_week12_13 was float now byte
  variable total_hrs_week13_1 was float now int
  variable total_hrs_week13_2 was float now int
  variable total_hrs_week13_3 was float now int
  variable total_hrs_week13_4 was float now int
  variable total_hrs_week13_5 was float now byte
  variable total_hrs_week13_6 was float now byte
  variable total_hrs_week13_7 was float now byte
  variable total_hrs_week13_8 was float now byte
  variable total_hrs_week13_9 was float now byte
  variable total_hrs_week13_10 was float now byte
  variable total_hrs_week13_11 was float now byte
  variable total_hrs_week13_12 was float now byte
  variable total_hrs_week13_13 was float now byte
  variable total_hrs_week14_1 was float now int
  variable total_hrs_week14_2 was float now int
  variable total_hrs_week14_3 was float now int
  variable total_hrs_week14_4 was float now int
  variable total_hrs_week14_5 was float now byte
  variable total_hrs_week14_6 was float now byte
  variable total_hrs_week14_7 was float now byte
  variable total_hrs_week14_8 was float now byte
  variable total_hrs_week14_9 was float now byte
  variable total_hrs_week14_10 was float now byte
  variable total_hrs_week14_11 was float now byte
  variable total_hrs_week14_12 was float now byte
  variable total_hrs_week14_13 was float now byte
  variable total_hrs_week15_1 was float now int
  variable total_hrs_week15_2 was float now int
  variable total_hrs_week15_3 was float now int
  variable total_hrs_week15_4 was float now int
  variable total_hrs_week15_5 was float now byte
  variable total_hrs_week15_6 was float now byte
  variable total_hrs_week15_7 was float now byte
  variable total_hrs_week15_8 was float now byte
  variable total_hrs_week15_9 was float now byte
  variable total_hrs_week15_10 was float now byte
  variable total_hrs_week15_11 was float now byte
  variable total_hrs_week15_12 was float now byte
  variable total_hrs_week15_13 was float now byte
  variable total_hrs_week16_1 was float now int
  variable total_hrs_week16_2 was float now int
  variable total_hrs_week16_3 was float now int
  variable total_hrs_week16_4 was float now int
  variable total_hrs_week16_5 was float now byte
  variable total_hrs_week16_6 was float now byte
  variable total_hrs_week16_7 was float now byte
  variable total_hrs_week16_8 was float now byte
  variable total_hrs_week16_9 was float now byte
  variable total_hrs_week16_10 was float now byte
  variable total_hrs_week16_11 was float now byte
  variable total_hrs_week16_12 was float now byte
  variable total_hrs_week16_13 was float now byte
  variable total_hrs_week17_1 was float now int
  variable total_hrs_week17_2 was float now int
  variable total_hrs_week17_3 was float now int
  variable total_hrs_week17_4 was float now int
  variable total_hrs_week17_5 was float now byte
  variable total_hrs_week17_6 was float now byte
  variable total_hrs_week17_7 was float now byte
  variable total_hrs_week17_8 was float now byte
  variable total_hrs_week17_9 was float now byte
  variable total_hrs_week17_10 was float now byte
  variable total_hrs_week17_11 was float now byte
  variable total_hrs_week17_12 was float now byte
  variable total_hrs_week17_13 was float now byte
  variable total_hrs_week18_1 was float now int
  variable total_hrs_week18_2 was float now int
  variable total_hrs_week18_3 was float now int
  variable total_hrs_week18_4 was float now int
  variable total_hrs_week18_5 was float now byte
  variable total_hrs_week18_6 was float now byte
  variable total_hrs_week18_7 was float now byte
  variable total_hrs_week18_8 was float now byte
  variable total_hrs_week18_9 was float now byte
  variable total_hrs_week18_10 was float now byte
  variable total_hrs_week18_11 was float now byte
  variable total_hrs_week18_12 was float now byte
  variable total_hrs_week18_13 was float now byte
  variable total_hrs_week19_1 was float now int
  variable total_hrs_week19_2 was float now int
  variable total_hrs_week19_3 was float now int
  variable total_hrs_week19_4 was float now int
  variable total_hrs_week19_5 was float now byte
  variable total_hrs_week19_6 was float now byte
  variable total_hrs_week19_7 was float now byte
  variable total_hrs_week19_8 was float now byte
  variable total_hrs_week19_9 was float now byte
  variable total_hrs_week19_10 was float now byte
  variable total_hrs_week19_11 was float now byte
  variable total_hrs_week19_12 was float now byte
  variable total_hrs_week19_13 was float now byte
  variable total_hrs_week20_1 was float now int
  variable total_hrs_week20_2 was float now int
  variable total_hrs_week20_3 was float now int
  variable total_hrs_week20_4 was float now int
  variable total_hrs_week20_5 was float now byte
  variable total_hrs_week20_6 was float now byte
  variable total_hrs_week20_7 was float now byte
  variable total_hrs_week20_8 was float now byte
  variable total_hrs_week20_9 was float now byte
  variable total_hrs_week20_10 was float now byte
  variable total_hrs_week20_11 was float now byte
  variable total_hrs_week20_12 was float now byte
  variable total_hrs_week20_13 was float now byte
  variable total_hrs_week21_1 was float now int
  variable total_hrs_week21_2 was float now int
  variable total_hrs_week21_3 was float now int
  variable total_hrs_week21_4 was float now int
  variable total_hrs_week21_5 was float now byte
  variable total_hrs_week21_6 was float now byte
  variable total_hrs_week21_7 was float now byte
  variable total_hrs_week21_8 was float now byte
  variable total_hrs_week21_9 was float now byte
  variable total_hrs_week21_10 was float now byte
  variable total_hrs_week21_11 was float now byte
  variable total_hrs_week21_12 was float now byte
  variable total_hrs_week21_13 was float now byte
  variable total_hrs_week22_1 was float now int
  variable total_hrs_week22_2 was float now int
  variable total_hrs_week22_3 was float now int
  variable total_hrs_week22_4 was float now int
  variable total_hrs_week22_5 was float now int
  variable total_hrs_week22_6 was float now byte
  variable total_hrs_week22_7 was float now byte
  variable total_hrs_week22_8 was float now byte
  variable total_hrs_week22_9 was float now byte
  variable total_hrs_week22_10 was float now byte
  variable total_hrs_week22_11 was float now byte
  variable total_hrs_week22_12 was float now byte
  variable total_hrs_week22_13 was float now byte
  variable total_hrs_week23_1 was float now int
  variable total_hrs_week23_2 was float now int
  variable total_hrs_week23_3 was float now int
  variable total_hrs_week23_4 was float now int
  variable total_hrs_week23_5 was float now int
  variable total_hrs_week23_6 was float now byte
  variable total_hrs_week23_7 was float now byte
  variable total_hrs_week23_8 was float now byte
  variable total_hrs_week23_9 was float now byte
  variable total_hrs_week23_10 was float now byte
  variable total_hrs_week23_11 was float now byte
  variable total_hrs_week23_12 was float now byte
  variable total_hrs_week23_13 was float now byte
  variable total_hrs_week24_1 was float now int
  variable total_hrs_week24_2 was float now int
  variable total_hrs_week24_3 was float now int
  variable total_hrs_week24_4 was float now int
  variable total_hrs_week24_5 was float now int
  variable total_hrs_week24_6 was float now byte
  variable total_hrs_week24_7 was float now byte
  variable total_hrs_week24_8 was float now byte
  variable total_hrs_week24_9 was float now byte
  variable total_hrs_week24_10 was float now byte
  variable total_hrs_week24_11 was float now byte
  variable total_hrs_week24_12 was float now byte
  variable total_hrs_week24_13 was float now byte
  variable total_hrs_week25_1 was float now int
  variable total_hrs_week25_2 was float now int
  variable total_hrs_week25_3 was float now int
  variable total_hrs_week25_4 was float now int
  variable total_hrs_week25_5 was float now int
  variable total_hrs_week25_6 was float now byte
  variable total_hrs_week25_7 was float now byte
  variable total_hrs_week25_8 was float now byte
  variable total_hrs_week25_9 was float now byte
  variable total_hrs_week25_10 was float now byte
  variable total_hrs_week25_11 was float now byte
  variable total_hrs_week25_12 was float now byte
  variable total_hrs_week25_13 was float now byte
  variable total_hrs_week26_1 was float now int
  variable total_hrs_week26_2 was float now int
  variable total_hrs_week26_3 was float now int
  variable total_hrs_week26_4 was float now int
  variable total_hrs_week26_5 was float now int
  variable total_hrs_week26_6 was float now byte
  variable total_hrs_week26_7 was float now byte
  variable total_hrs_week26_8 was float now byte
  variable total_hrs_week26_9 was float now byte
  variable total_hrs_week26_10 was float now byte
  variable total_hrs_week26_11 was float now byte
  variable total_hrs_week26_12 was float now byte
  variable total_hrs_week26_13 was float now byte
  variable total_hrs_week27_1 was float now int
  variable total_hrs_week27_2 was float now int
  variable total_hrs_week27_3 was float now int
  variable total_hrs_week27_4 was float now int
  variable total_hrs_week27_5 was float now int
  variable total_hrs_week27_6 was float now byte
  variable total_hrs_week27_7 was float now byte
  variable total_hrs_week27_8 was float now byte
  variable total_hrs_week27_9 was float now byte
  variable total_hrs_week27_10 was float now byte
  variable total_hrs_week27_11 was float now byte
  variable total_hrs_week27_12 was float now byte
  variable total_hrs_week27_13 was float now byte
  variable total_hrs_week28_1 was float now int
  variable total_hrs_week28_2 was float now int
  variable total_hrs_week28_3 was float now int
  variable total_hrs_week28_4 was float now int
  variable total_hrs_week28_5 was float now byte
  variable total_hrs_week28_6 was float now byte
  variable total_hrs_week28_7 was float now byte
  variable total_hrs_week28_8 was float now byte
  variable total_hrs_week28_9 was float now byte
  variable total_hrs_week28_10 was float now byte
  variable total_hrs_week28_11 was float now byte
  variable total_hrs_week28_12 was float now byte
  variable total_hrs_week28_13 was float now byte
  variable total_hrs_week29_1 was float now int
  variable total_hrs_week29_2 was float now int
  variable total_hrs_week29_3 was float now int
  variable total_hrs_week29_4 was float now int
  variable total_hrs_week29_5 was float now byte
  variable total_hrs_week29_6 was float now byte
  variable total_hrs_week29_7 was float now byte
  variable total_hrs_week29_8 was float now byte
  variable total_hrs_week29_9 was float now byte
  variable total_hrs_week29_10 was float now byte
  variable total_hrs_week29_11 was float now byte
  variable total_hrs_week29_12 was float now byte
  variable total_hrs_week29_13 was float now byte
  variable total_hrs_week30_1 was float now int
  variable total_hrs_week30_2 was float now int
  variable total_hrs_week30_3 was float now int
  variable total_hrs_week30_4 was float now int
  variable total_hrs_week30_5 was float now byte
  variable total_hrs_week30_6 was float now byte
  variable total_hrs_week30_7 was float now byte
  variable total_hrs_week30_8 was float now byte
  variable total_hrs_week30_9 was float now byte
  variable total_hrs_week30_10 was float now byte
  variable total_hrs_week30_11 was float now byte
  variable total_hrs_week30_12 was float now byte
  variable total_hrs_week30_13 was float now byte
  variable total_hrs_week31_1 was float now int
  variable total_hrs_week31_2 was float now int
  variable total_hrs_week31_3 was float now int
  variable total_hrs_week31_4 was float now int
  variable total_hrs_week31_5 was float now byte
  variable total_hrs_week31_6 was float now byte
  variable total_hrs_week31_7 was float now byte
  variable total_hrs_week31_8 was float now byte
  variable total_hrs_week31_9 was float now byte
  variable total_hrs_week31_10 was float now byte
  variable total_hrs_week31_11 was float now byte
  variable total_hrs_week31_12 was float now byte
  variable total_hrs_week31_13 was float now byte
  variable total_hrs_week32_1 was float now int
  variable total_hrs_week32_2 was float now int
  variable total_hrs_week32_3 was float now int
  variable total_hrs_week32_4 was float now int
  variable total_hrs_week32_5 was float now byte
  variable total_hrs_week32_6 was float now byte
  variable total_hrs_week32_7 was float now byte
  variable total_hrs_week32_8 was float now byte
  variable total_hrs_week32_9 was float now byte
  variable total_hrs_week32_10 was float now byte
  variable total_hrs_week32_11 was float now byte
  variable total_hrs_week32_12 was float now byte
  variable total_hrs_week32_13 was float now byte
  variable total_hrs_week33_1 was float now int
  variable total_hrs_week33_2 was float now int
  variable total_hrs_week33_3 was float now int
  variable total_hrs_week33_4 was float now int
  variable total_hrs_week33_5 was float now byte
  variable total_hrs_week33_6 was float now byte
  variable total_hrs_week33_7 was float now byte
  variable total_hrs_week33_8 was float now byte
  variable total_hrs_week33_9 was float now byte
  variable total_hrs_week33_10 was float now byte
  variable total_hrs_week33_11 was float now byte
  variable total_hrs_week33_12 was float now byte
  variable total_hrs_week33_13 was float now byte
  variable total_hrs_week34_1 was float now int
  variable total_hrs_week34_2 was float now int
  variable total_hrs_week34_3 was float now int
  variable total_hrs_week34_4 was float now int
  variable total_hrs_week34_5 was float now byte
  variable total_hrs_week34_6 was float now byte
  variable total_hrs_week34_7 was float now byte
  variable total_hrs_week34_8 was float now byte
  variable total_hrs_week34_9 was float now byte
  variable total_hrs_week34_10 was float now byte
  variable total_hrs_week34_11 was float now byte
  variable total_hrs_week34_12 was float now byte
  variable total_hrs_week34_13 was float now byte
  variable total_hrs_week35_1 was float now int
  variable total_hrs_week35_2 was float now int
  variable total_hrs_week35_3 was float now int
  variable total_hrs_week35_4 was float now int
  variable total_hrs_week35_5 was float now byte
  variable total_hrs_week35_6 was float now byte
  variable total_hrs_week35_7 was float now byte
  variable total_hrs_week35_8 was float now byte
  variable total_hrs_week35_9 was float now byte
  variable total_hrs_week35_10 was float now byte
  variable total_hrs_week35_11 was float now byte
  variable total_hrs_week35_12 was float now byte
  variable total_hrs_week35_13 was float now byte
  variable total_hrs_week36_1 was float now int
  variable total_hrs_week36_2 was float now int
  variable total_hrs_week36_3 was float now int
  variable total_hrs_week36_4 was float now int
  variable total_hrs_week36_5 was float now byte
  variable total_hrs_week36_6 was float now byte
  variable total_hrs_week36_7 was float now byte
  variable total_hrs_week36_8 was float now byte
  variable total_hrs_week36_9 was float now byte
  variable total_hrs_week36_10 was float now byte
  variable total_hrs_week36_11 was float now byte
  variable total_hrs_week36_12 was float now byte
  variable total_hrs_week36_13 was float now byte
  variable total_hrs_week37_1 was float now int
  variable total_hrs_week37_2 was float now int
  variable total_hrs_week37_3 was float now int
  variable total_hrs_week37_4 was float now int
  variable total_hrs_week37_5 was float now byte
  variable total_hrs_week37_6 was float now byte
  variable total_hrs_week37_7 was float now byte
  variable total_hrs_week37_8 was float now byte
  variable total_hrs_week37_9 was float now byte
  variable total_hrs_week37_10 was float now byte
  variable total_hrs_week37_11 was float now byte
  variable total_hrs_week37_12 was float now byte
  variable total_hrs_week37_13 was float now byte
  variable total_hrs_week38_1 was float now int
  variable total_hrs_week38_2 was float now int
  variable total_hrs_week38_3 was float now int
  variable total_hrs_week38_4 was float now byte
  variable total_hrs_week38_5 was float now byte
  variable total_hrs_week38_6 was float now byte
  variable total_hrs_week38_7 was float now byte
  variable total_hrs_week38_8 was float now byte
  variable total_hrs_week38_9 was float now byte
  variable total_hrs_week38_10 was float now byte
  variable total_hrs_week38_11 was float now byte
  variable total_hrs_week38_12 was float now byte
  variable total_hrs_week38_13 was float now byte
  variable total_hrs_week39_1 was float now int
  variable total_hrs_week39_2 was float now int
  variable total_hrs_week39_3 was float now int
  variable total_hrs_week39_4 was float now byte
  variable total_hrs_week39_5 was float now byte
  variable total_hrs_week39_6 was float now byte
  variable total_hrs_week39_7 was float now byte
  variable total_hrs_week39_8 was float now byte
  variable total_hrs_week39_9 was float now byte
  variable total_hrs_week39_10 was float now byte
  variable total_hrs_week39_11 was float now byte
  variable total_hrs_week39_12 was float now byte
  variable total_hrs_week39_13 was float now byte
  variable total_hrs_week40_1 was float now int
  variable total_hrs_week40_2 was float now int
  variable total_hrs_week40_3 was float now int
  variable total_hrs_week40_4 was float now byte
  variable total_hrs_week40_5 was float now byte
  variable total_hrs_week40_6 was float now byte
  variable total_hrs_week40_7 was float now byte
  variable total_hrs_week40_8 was float now byte
  variable total_hrs_week40_9 was float now byte
  variable total_hrs_week40_10 was float now byte
  variable total_hrs_week40_11 was float now byte
  variable total_hrs_week40_12 was float now byte
  variable total_hrs_week40_13 was float now byte
  variable total_hrs_week41_1 was float now int
  variable total_hrs_week41_2 was float now int
  variable total_hrs_week41_3 was float now int
  variable total_hrs_week41_4 was float now byte
  variable total_hrs_week41_5 was float now byte
  variable total_hrs_week41_6 was float now byte
  variable total_hrs_week41_7 was float now byte
  variable total_hrs_week41_8 was float now byte
  variable total_hrs_week41_9 was float now byte
  variable total_hrs_week41_10 was float now byte
  variable total_hrs_week41_11 was float now byte
  variable total_hrs_week41_12 was float now byte
  variable total_hrs_week41_13 was float now byte
  variable total_hrs_week42_1 was float now int
  variable total_hrs_week42_2 was float now int
  variable total_hrs_week42_3 was float now int
  variable total_hrs_week42_4 was float now byte
  variable total_hrs_week42_5 was float now byte
  variable total_hrs_week42_6 was float now byte
  variable total_hrs_week42_7 was float now byte
  variable total_hrs_week42_8 was float now byte
  variable total_hrs_week42_9 was float now byte
  variable total_hrs_week42_10 was float now byte
  variable total_hrs_week42_11 was float now byte
  variable total_hrs_week42_12 was float now byte
  variable total_hrs_week42_13 was float now byte
  variable total_hrs_week43_1 was float now int
  variable total_hrs_week43_2 was float now int
  variable total_hrs_week43_3 was float now int
  variable total_hrs_week43_4 was float now byte
  variable total_hrs_week43_5 was float now byte
  variable total_hrs_week43_6 was float now byte
  variable total_hrs_week43_7 was float now byte
  variable total_hrs_week43_8 was float now byte
  variable total_hrs_week43_9 was float now byte
  variable total_hrs_week43_10 was float now byte
  variable total_hrs_week43_11 was float now byte
  variable total_hrs_week43_12 was float now byte
  variable total_hrs_week43_13 was float now byte
  variable total_hrs_week44_1 was float now int
  variable total_hrs_week44_2 was float now int
  variable total_hrs_week44_3 was float now int
  variable total_hrs_week44_4 was float now byte
  variable total_hrs_week44_5 was float now byte
  variable total_hrs_week44_6 was float now byte
  variable total_hrs_week44_7 was float now byte
  variable total_hrs_week44_8 was float now byte
  variable total_hrs_week44_9 was float now byte
  variable total_hrs_week44_10 was float now byte
  variable total_hrs_week44_11 was float now byte
  variable total_hrs_week44_12 was float now byte
  variable total_hrs_week44_13 was float now byte
  variable total_hrs_week45_1 was float now int
  variable total_hrs_week45_2 was float now int
  variable total_hrs_week45_3 was float now int
  variable total_hrs_week45_4 was float now byte
  variable total_hrs_week45_5 was float now byte
  variable total_hrs_week45_6 was float now byte
  variable total_hrs_week45_7 was float now byte
  variable total_hrs_week45_8 was float now byte
  variable total_hrs_week45_9 was float now byte
  variable total_hrs_week45_10 was float now byte
  variable total_hrs_week45_11 was float now byte
  variable total_hrs_week45_12 was float now byte
  variable total_hrs_week45_13 was float now byte
  variable total_hrs_week46_1 was float now int
  variable total_hrs_week46_2 was float now int
  variable total_hrs_week46_3 was float now int
  variable total_hrs_week46_4 was float now byte
  variable total_hrs_week46_5 was float now byte
  variable total_hrs_week46_6 was float now byte
  variable total_hrs_week46_7 was float now byte
  variable total_hrs_week46_8 was float now byte
  variable total_hrs_week46_9 was float now byte
  variable total_hrs_week46_10 was float now byte
  variable total_hrs_week46_11 was float now byte
  variable total_hrs_week46_12 was float now byte
  variable total_hrs_week46_13 was float now byte
  variable total_hrs_week47_1 was float now int
  variable total_hrs_week47_2 was float now int
  variable total_hrs_week47_3 was float now int
  variable total_hrs_week47_4 was float now byte
  variable total_hrs_week47_5 was float now byte
  variable total_hrs_week47_6 was float now byte
  variable total_hrs_week47_7 was float now byte
  variable total_hrs_week47_8 was float now byte
  variable total_hrs_week47_9 was float now byte
  variable total_hrs_week47_10 was float now byte
  variable total_hrs_week47_11 was float now byte
  variable total_hrs_week47_12 was float now byte
  variable total_hrs_week47_13 was float now byte
  variable total_hrs_week48_1 was float now int
  variable total_hrs_week48_2 was float now int
  variable total_hrs_week48_3 was float now int
  variable total_hrs_week48_4 was float now byte
  variable total_hrs_week48_5 was float now byte
  variable total_hrs_week48_6 was float now byte
  variable total_hrs_week48_7 was float now byte
  variable total_hrs_week48_8 was float now byte
  variable total_hrs_week48_9 was float now byte
  variable total_hrs_week48_10 was float now byte
  variable total_hrs_week48_11 was float now byte
  variable total_hrs_week48_12 was float now byte
  variable total_hrs_week48_13 was float now byte
  variable total_hrs_week49_1 was float now int
  variable total_hrs_week49_2 was float now int
  variable total_hrs_week49_3 was float now int
  variable total_hrs_week49_4 was float now byte
  variable total_hrs_week49_5 was float now byte
  variable total_hrs_week49_6 was float now byte
  variable total_hrs_week49_7 was float now byte
  variable total_hrs_week49_8 was float now byte
  variable total_hrs_week49_9 was float now byte
  variable total_hrs_week49_10 was float now byte
  variable total_hrs_week49_11 was float now byte
  variable total_hrs_week49_12 was float now byte
  variable total_hrs_week49_13 was float now byte
  variable total_hrs_week50_1 was float now int
  variable total_hrs_week50_2 was float now int
  variable total_hrs_week50_3 was float now int
  variable total_hrs_week50_4 was float now byte
  variable total_hrs_week50_5 was float now byte
  variable total_hrs_week50_6 was float now byte
  variable total_hrs_week50_7 was float now byte
  variable total_hrs_week50_8 was float now byte
  variable total_hrs_week50_9 was float now byte
  variable total_hrs_week50_10 was float now byte
  variable total_hrs_week50_11 was float now byte
  variable total_hrs_week50_12 was float now byte
  variable total_hrs_week50_13 was float now byte
  variable total_hrs_week51_1 was float now int
  variable total_hrs_week51_2 was float now int
  variable total_hrs_week51_3 was float now int
  variable total_hrs_week51_4 was float now byte
  variable total_hrs_week51_5 was float now byte
  variable total_hrs_week51_6 was float now byte
  variable total_hrs_week51_7 was float now byte
  variable total_hrs_week51_8 was float now byte
  variable total_hrs_week51_9 was float now byte
  variable total_hrs_week51_10 was float now byte
  variable total_hrs_week51_11 was float now byte
  variable total_hrs_week51_12 was float now byte
  variable total_hrs_week51_13 was float now byte
  variable total_hrs_week52_1 was float now int
  variable total_hrs_week52_2 was float now int
  variable total_hrs_week52_3 was float now int
  variable total_hrs_week52_4 was float now byte
  variable total_hrs_week52_5 was float now byte
  variable total_hrs_week52_6 was float now byte
  variable total_hrs_week52_7 was float now byte
  variable total_hrs_week52_8 was float now byte
  variable total_hrs_week52_9 was float now byte
  variable total_hrs_week52_10 was float now byte
  variable total_hrs_week52_11 was float now byte
  variable total_hrs_week52_12 was float now byte
  variable total_hrs_week52_13 was float now byte
  variable total_hrs_week53_1 was float now int
  variable total_hrs_week53_2 was float now int
  variable total_hrs_week53_3 was float now byte
  variable total_hrs_week53_4 was float now byte
  variable total_hrs_week53_5 was float now byte
  variable total_hrs_week53_6 was float now byte
  variable total_hrs_week53_7 was float now byte
  variable total_hrs_week53_8 was float now byte
  variable total_hrs_week53_9 was float now byte
  variable total_hrs_week53_10 was float now byte
  variable total_hrs_week53_11 was float now byte
  variable total_hrs_week53_12 was float now byte
  variable total_hrs_week53_13 was float now byte
  variable wage_dem_week1 was float now int
  variable comp_dem_week1 was float now int
  variable wage_dem_week2 was float now int
  variable comp_dem_week2 was float now int
  variable wage_dem_week3 was float now int
  variable comp_dem_week3 was float now int
  variable wage_dem_week4 was float now int
  variable comp_dem_week4 was float now int
  variable wage_dem_week5 was float now int
  variable comp_dem_week5 was float now int
  variable wage_dem_week6 was float now int
  variable comp_dem_week6 was float now int
  variable wage_dem_week7 was float now int
  variable comp_dem_week7 was float now int
  variable wage_dem_week8 was float now int
  variable comp_dem_week8 was float now int
  variable wage_dem_week9 was float now int
  variable comp_dem_week9 was float now int
  variable wage_dem_week10 was float now int
  variable comp_dem_week10 was float now int
  variable wage_dem_week11 was float now int
  variable comp_dem_week11 was float now int
  variable wage_dem_week12 was float now int
  variable comp_dem_week12 was float now int
  variable wage_dem_week13 was float now int
  variable comp_dem_week13 was float now int
  variable wage_dem_week14 was float now int
  variable comp_dem_week14 was float now int
  variable wage_dem_week15 was float now int
  variable comp_dem_week15 was float now int
  variable wage_dem_week16 was float now int
  variable comp_dem_week16 was float now int
  variable wage_dem_week17 was float now int
  variable comp_dem_week17 was float now int
  variable wage_dem_week18 was float now int
  variable comp_dem_week18 was float now int
  variable wage_dem_week19 was float now int
  variable comp_dem_week19 was float now int
  variable wage_dem_week20 was float now int
  variable comp_dem_week20 was float now int
  variable wage_dem_week21 was float now int
  variable comp_dem_week21 was float now int
  variable wage_dem_week22 was float now int
  variable comp_dem_week22 was float now int
  variable wage_dem_week23 was float now int
  variable comp_dem_week23 was float now int
  variable wage_dem_week24 was float now int
  variable comp_dem_week24 was float now int
  variable wage_dem_week25 was float now int
  variable comp_dem_week25 was float now int
  variable wage_dem_week26 was float now int
  variable comp_dem_week26 was float now int
  variable wage_dem_week27 was float now int
  variable comp_dem_week27 was float now int
  variable wage_dem_week28 was float now int
  variable comp_dem_week28 was float now int
  variable wage_dem_week29 was float now int
  variable comp_dem_week29 was float now int
  variable wage_dem_week30 was float now int
  variable comp_dem_week30 was float now int
  variable wage_dem_week31 was float now int
  variable comp_dem_week31 was float now int
  variable wage_dem_week32 was float now int
  variable comp_dem_week32 was float now int
  variable wage_dem_week33 was float now int
  variable comp_dem_week33 was float now int
  variable wage_dem_week34 was float now int
  variable comp_dem_week34 was float now int
  variable wage_dem_week35 was float now int
  variable comp_dem_week35 was float now int
  variable wage_dem_week36 was float now int
  variable comp_dem_week36 was float now int
  variable wage_dem_week37 was float now int
  variable comp_dem_week37 was float now int
  variable wage_dem_week38 was float now int
  variable comp_dem_week38 was float now int
  variable wage_dem_week39 was float now int
  variable comp_dem_week39 was float now int
  variable wage_dem_week40 was float now int
  variable comp_dem_week40 was float now int
  variable wage_dem_week41 was float now int
  variable comp_dem_week41 was float now int
  variable wage_dem_week42 was float now int
  variable comp_dem_week42 was float now int
  variable wage_dem_week43 was float now int
  variable comp_dem_week43 was float now int
  variable wage_dem_week44 was float now int
  variable comp_dem_week44 was float now int
  variable wage_dem_week45 was float now int
  variable comp_dem_week45 was float now int
  variable wage_dem_week46 was float now int
  variable comp_dem_week46 was float now int
  variable wage_dem_week47 was float now int
  variable comp_dem_week47 was float now int
  variable wage_dem_week48 was float now int
  variable comp_dem_week48 was float now int
  variable wage_dem_week49 was float now int
  variable comp_dem_week49 was float now int
  variable wage_dem_week50 was float now int
  variable comp_dem_week50 was float now int
  variable wage_dem_week51 was float now int
  variable comp_dem_week51 was float now int
  variable wage_dem_week52 was float now int
  variable comp_dem_week52 was float now int
  variable wage_dem_week53 was float now int
  variable comp_dem_week53 was float now int
  variable mostWeeksEmployed was float now byte
  variable annual_industry_median was float now int
  variable annual_industry_min was float now int
  variable annual_industry_max was float now int
  variable annual_industry_main was float now int
  variable annual_industry_first_valid was float now int
  variable annual_occupation_median was float now int
  variable annual_occupation_min was float now int
  variable annual_occupation_max was float now int
  variable annual_occupation_main was float now int
  variable annual_occupation_first_valid was float now int
  variable internship_min was float now byte
  variable internship_max was float now byte
  variable internship_main was float now byte
  variable internship_first_valid was float now byte
  variable internship was float now byte
  variable annual_occ_min was float now byte
  variable annual_occ_median was float now byte
  variable annual_occ_max was float now byte
  variable annual_occ_main was float now byte
  variable annual_occ_first_valid was float now byte
  variable annual_ind_min was float now byte
  variable annual_ind_median was float now byte
  variable annual_ind_max was float now byte
  variable annual_ind_main was float now byte
  variable annual_ind_first_valid was float now byte
  variable total_hours_week was float now int
  variable Hrs_worked_tot was float now int
  variable Hrs_worked_tot_prime was float now int
  variable Created_Hours_Worked was float now int
  variable Total_Hours_Worked_prime was float now int
  variable annualHrsWrkCalcCalc was float now int
  variable Hrs_week_alt_Job1_ was float now int
  variable Hrs_week_alt_Job2_ was float now int
  variable Hrs_week_alt_Job3_ was float now int
  variable Hrs_week_alt_Job4_ was float now int
  variable Hrs_week_alt_Job5_ was float now int
  variable Hrs_week_alt_Job6_ was float now byte
  variable Hrs_week_alt_Job7_ was float now byte
  variable Hrs_week_alt_Job8_ was float now byte
  variable Hrs_week_alt_Job9_ was float now byte
  variable Hrs_week_alt_Job10_ was float now byte
  variable Hrs_week_alt_Job11_ was float now byte
  variable Hrs_week_alt_Job12_ was float now byte
  variable Hrs_week_alt_Job13_ was float now byte
  variable HrsWrkCalcCalc_week1 was float now int
  variable HrsWrkCalcCalc_week2 was float now int
  variable HrsWrkCalcCalc_week3 was float now int
  variable HrsWrkCalcCalc_week4 was float now int
  variable HrsWrkCalcCalc_week5 was float now int
  variable HrsWrkCalcCalc_week6 was float now int
  variable HrsWrkCalcCalc_week7 was float now int
  variable HrsWrkCalcCalc_week8 was float now int
  variable HrsWrkCalcCalc_week9 was float now int
  variable HrsWrkCalcCalc_week10 was float now int
  variable HrsWrkCalcCalc_week11 was float now int
  variable HrsWrkCalcCalc_week12 was float now int
  variable HrsWrkCalcCalc_week13 was float now int
  variable HrsWrkCalcCalc_week14 was float now int
  variable HrsWrkCalcCalc_week15 was float now int
  variable HrsWrkCalcCalc_week16 was float now int
  variable HrsWrkCalcCalc_week17 was float now int
  variable HrsWrkCalcCalc_week18 was float now int
  variable HrsWrkCalcCalc_week19 was float now int
  variable HrsWrkCalcCalc_week20 was float now int
  variable HrsWrkCalcCalc_week21 was float now int
  variable HrsWrkCalcCalc_week22 was float now int
  variable HrsWrkCalcCalc_week23 was float now int
  variable HrsWrkCalcCalc_week24 was float now int
  variable HrsWrkCalcCalc_week25 was float now int
  variable HrsWrkCalcCalc_week26 was float now int
  variable HrsWrkCalcCalc_week27 was float now int
  variable HrsWrkCalcCalc_week28 was float now int
  variable HrsWrkCalcCalc_week29 was float now int
  variable HrsWrkCalcCalc_week30 was float now int
  variable HrsWrkCalcCalc_week31 was float now int
  variable HrsWrkCalcCalc_week32 was float now int
  variable HrsWrkCalcCalc_week33 was float now int
  variable HrsWrkCalcCalc_week34 was float now int
  variable HrsWrkCalcCalc_week35 was float now int
  variable HrsWrkCalcCalc_week36 was float now int
  variable HrsWrkCalcCalc_week37 was float now int
  variable HrsWrkCalcCalc_week38 was float now int
  variable HrsWrkCalcCalc_week39 was float now int
  variable HrsWrkCalcCalc_week40 was float now int
  variable HrsWrkCalcCalc_week41 was float now int
  variable HrsWrkCalcCalc_week42 was float now int
  variable HrsWrkCalcCalc_week43 was float now int
  variable HrsWrkCalcCalc_week44 was float now int
  variable HrsWrkCalcCalc_week45 was float now int
  variable HrsWrkCalcCalc_week46 was float now int
  variable HrsWrkCalcCalc_week47 was float now int
  variable HrsWrkCalcCalc_week48 was float now int
  variable HrsWrkCalcCalc_week49 was float now int
  variable HrsWrkCalcCalc_week50 was float now int
  variable HrsWrkCalcCalc_week51 was float now int
  variable HrsWrkCalcCalc_week52 was float now int
  variable HrsWrkCalcCalc_week53 was float now int
  variable hours_week_use1 was float now int
  variable hours_week_use2 was float now int
  variable hours_week_use3 was float now int
  variable hours_week_use4 was float now int
  variable hours_week_use5 was float now int
  variable hours_week_use6 was float now int
  variable hours_week_use7 was float now int
  variable hours_week_use8 was float now int
  variable hours_week_use9 was float now int
  variable hours_week_use10 was float now int
  variable hours_week_use11 was float now int
  variable hours_week_use12 was float now int
  variable hours_week_use13 was float now int
  variable hours_week_use14 was float now int
  variable hours_week_use15 was float now int
  variable hours_week_use16 was float now int
  variable hours_week_use17 was float now int
  variable hours_week_use18 was float now int
  variable hours_week_use19 was float now int
  variable hours_week_use20 was float now int
  variable hours_week_use21 was float now int
  variable hours_week_use22 was float now int
  variable hours_week_use23 was float now int
  variable hours_week_use24 was float now int
  variable hours_week_use25 was float now int
  variable hours_week_use26 was float now int
  variable hours_week_use27 was float now int
  variable hours_week_use28 was float now int
  variable hours_week_use29 was float now int
  variable hours_week_use30 was float now int
  variable hours_week_use31 was float now int
  variable hours_week_use32 was float now int
  variable hours_week_use33 was float now int
  variable hours_week_use34 was float now int
  variable hours_week_use35 was float now int
  variable hours_week_use36 was float now int
  variable hours_week_use37 was float now int
  variable hours_week_use38 was float now int
  variable hours_week_use39 was float now int
  variable hours_week_use40 was float now int
  variable hours_week_use41 was float now int
  variable hours_week_use42 was float now int
  variable hours_week_use43 was float now int
  variable hours_week_use44 was float now int
  variable hours_week_use45 was float now int
  variable hours_week_use46 was float now int
  variable hours_week_use47 was float now int
  variable hours_week_use48 was float now int
  variable hours_week_use49 was float now int
  variable hours_week_use50 was float now int
  variable hours_week_use51 was float now int
  variable hours_week_use52 was float now int
  variable hours_week_use53 was float now int
  variable annualHrsWrkUse was float now int
  variable Total_Hours_Worked_Old was float now int
  variable hours_worked_Jan was float now int
  variable hours_worked_Feb was float now int
  variable hours_worked_Mar was float now int
  variable hours_worked_Apr was float now int
  variable hours_worked_May was float now int
  variable hours_worked_Jun was float now int
  variable hours_worked_Jul was float now int
  variable hours_worked_Aug was float now int
  variable hours_worked_Sep was float now int
  variable hours_worked_Oct was float now int
  variable hours_worked_Nov was float now int
  variable hours_worked_Dec was float now int
  variable weeksSelfEmployedJan was float now byte
  variable weeksSelfEmployedFeb was float now byte
  variable weeksSelfEmployedMar was float now byte
  variable weeksSelfEmployedApr was float now byte
  variable weeksSelfEmployedMay was float now byte
  variable weeksSelfEmployedJun was float now byte
  variable weeksSelfEmployedJul was float now byte
  variable weeksSelfEmployedAug was float now byte
  variable weeksSelfEmployedSep was float now byte
  variable weeksSelfEmployedOct was float now byte
  variable weeksSelfEmployedNov was float now byte
  variable weeksSelfEmployedDec was float now byte
  variable monthsWorkedRecall was float now byte
  variable firstMonthWorkedRecall was float now byte
  variable workedRecallJan was float now byte
  variable workedRecallFeb was float now byte
  variable workedRecallMar was float now byte
  variable workedRecallApr was float now byte
  variable workedRecallMay was float now byte
  variable workedRecallJun was float now byte
  variable workedRecallJul was float now byte
  variable workedRecallAug was float now byte
  variable workedRecallSep was float now byte
  variable workedRecallOct was float now byte
  variable workedRecallNov was float now byte
  variable workedRecallDec was float now byte
  variable flag1 was float now byte
  variable flag2 was float now byte
  (1,240,546,656 bytes saved)

. save y97_master.dta, replace
file y97_master.dta saved

. !zip -m y97_master.dta.zip y97_master.dta

  adding: y97_master.dta (deflated 97%)

. 
. log close
      name:  <unnamed>
       log:  /home/data/ransom/WageReturnsRepo/Data/y97/y97_create_master.log
  log type:  text
 closed on:  30 Jan 2019, 10:29:20
-------------------------------------------------------------------------------

. 
. 
end of do-file

. do y97_create_trim

. version 14.1

. clear all

. set more off

. capture log close

. 
. log using "y97_create_trim.log", replace
-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /home/data/ransom/WageReturnsRepo/Data/y97/y97_create_trim.log
  log type:  text
 opened on:  30 Jan 2019, 10:29:20

. 
. !unzip y97_master.dta.zip

Archive:  y97_master.dta.zip
  inflating: y97_master.dta          

. use y97_master.dta

. !rm y97_master.dta


. 
. local months Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec

. 
. foreach x of local months {
  2.     replace  activity`x' = 1  if schOnly`x'                               
> // School Only
  3.     replace  activity`x' = 2  if workSch`x'                               
> // School and Work using defn A
  4.     replace  activity`x' = 3  if !military`x' & !In_school`x' & workPT`x' 
> // Part-Time Work Only using defn A
  5.     replace  activity`x' = 4  if !military`x' & !In_school`x' & workFT`x' 
> // Full-Time Work Only
  6.     replace  activity`x' = 5  if military`x'                              
> // Military
  7.     replace  activity`x' = 6  if other`x'                                 
> // Other
  8. }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. foreach x of local months {
  2.     * Create mutually exclusive activity indicators
.     gen byte one`x'   = schOnly`x'             
  3.     gen byte two`x'   = workSch`x'               
  4.     gen byte three`x' = !military`x' & !In_school`x' & workPT`x'
  5.     gen byte four`x'  = !military`x' & !In_school`x' & workFT`x'
  6.     gen byte five`x'  = military`x'              
  7.     gen byte six`x'   = other`x'    
  8. }

. 
. tab2 oneJan twoJan threeJan fourJan fiveJan sixJan, mi

-> tabulation of oneJan by twoJan  

           |        twoJan
    oneJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   195,137     27,459 |   222,596 
         1 |   109,812          0 |   109,812 
-----------+----------------------+----------
     Total |   304,949     27,459 |   332,408 


-> tabulation of oneJan by threeJan  

           |       threeJan
    oneJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   205,100     17,496 |   222,596 
         1 |   109,812          0 |   109,812 
-----------+----------------------+----------
     Total |   314,912     17,496 |   332,408 


-> tabulation of oneJan by fourJan  

           |        fourJan
    oneJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   169,019     53,577 |   222,596 
         1 |   109,812          0 |   109,812 
-----------+----------------------+----------
     Total |   278,831     53,577 |   332,408 


-> tabulation of oneJan by fiveJan  

           |        fiveJan
    oneJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   220,263      2,333 |   222,596 
         1 |   109,812          0 |   109,812 
-----------+----------------------+----------
     Total |   330,075      2,333 |   332,408 


-> tabulation of oneJan by sixJan  

           |        sixJan
    oneJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   100,865    121,731 |   222,596 
         1 |   109,812          0 |   109,812 
-----------+----------------------+----------
     Total |   210,677    121,731 |   332,408 


-> tabulation of twoJan by threeJan  

           |       threeJan
    twoJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   287,453     17,496 |   304,949 
         1 |    27,459          0 |    27,459 
-----------+----------------------+----------
     Total |   314,912     17,496 |   332,408 


-> tabulation of twoJan by fourJan  

           |        fourJan
    twoJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   251,372     53,577 |   304,949 
         1 |    27,459          0 |    27,459 
-----------+----------------------+----------
     Total |   278,831     53,577 |   332,408 


-> tabulation of twoJan by fiveJan  

           |        fiveJan
    twoJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   302,616      2,333 |   304,949 
         1 |    27,459          0 |    27,459 
-----------+----------------------+----------
     Total |   330,075      2,333 |   332,408 


-> tabulation of twoJan by sixJan  

           |        sixJan
    twoJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   183,218    121,731 |   304,949 
         1 |    27,459          0 |    27,459 
-----------+----------------------+----------
     Total |   210,677    121,731 |   332,408 


-> tabulation of threeJan by fourJan  

           |        fourJan
  threeJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   261,335     53,577 |   314,912 
         1 |    17,496          0 |    17,496 
-----------+----------------------+----------
     Total |   278,831     53,577 |   332,408 


-> tabulation of threeJan by fiveJan  

           |        fiveJan
  threeJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   312,579      2,333 |   314,912 
         1 |    17,496          0 |    17,496 
-----------+----------------------+----------
     Total |   330,075      2,333 |   332,408 


-> tabulation of threeJan by sixJan  

           |        sixJan
  threeJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   193,181    121,731 |   314,912 
         1 |    17,496          0 |    17,496 
-----------+----------------------+----------
     Total |   210,677    121,731 |   332,408 


-> tabulation of fourJan by fiveJan  

           |        fiveJan
   fourJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   276,498      2,333 |   278,831 
         1 |    53,577          0 |    53,577 
-----------+----------------------+----------
     Total |   330,075      2,333 |   332,408 


-> tabulation of fourJan by sixJan  

           |        sixJan
   fourJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   157,100    121,731 |   278,831 
         1 |    53,577          0 |    53,577 
-----------+----------------------+----------
     Total |   210,677    121,731 |   332,408 


-> tabulation of fiveJan by sixJan  

           |        sixJan
   fiveJan |         0          1 |     Total
-----------+----------------------+----------
         0 |   208,344    121,731 |   330,075 
         1 |     2,333          0 |     2,333 
-----------+----------------------+----------
     Total |   210,677    121,731 |   332,408 


. 
. foreach x of local months {
  2.     assert workSch`x'==workK12`x'+workCollege`x'
  3.     assert schOnly`x'+workSch`x'==In_school`x'
  4. }

. 
. foreach x of local months {
  2.     * assert (schOnly`x')+(workSch`x')+(!military`x' & !In_school`x' & wor
> kPT`x')+(!military`x' & !In_school`x' & workFT`x')+(military`x')+(other`x')==
> 1
.     tab year if (schOnly`x')+(workSch`x')+(!military`x' & !In_school`x' & wor
> kPT`x')+(!military`x' & !In_school`x' & workFT`x')+(military`x')+(other`x')~=
> 1
  3. }
no observations
no observations
no observations
no observations
no observations
no observations
no observations
no observations
no observations
no observations
no observations
no observations

. 
. * Assume people who are missing foreignBorn are actually foreign born
. recode foreignBorn (. = 1)
(foreignBorn: 9250 changes made)

. 
. foreach x in AR CS MK NO PC WK {
  2.     ren m_afqt`x' m_asvab`x'
  3. }

. 
. * keep variables
. local demographics ID year age_now miss_interview miss_interview_cum miss_int
> erview_length year_miss_int ever_return_after_*int ever_miss_interview ever_m
> iss*int age_at*int missIntLastSpell last_int_day Meduc m_Meduc Feduc m_Feduc 
> foreignBorn afqt_std asvabAR_std asvabCS_std asvabMK_std asvabNO_std asvabPC_
> std asvabWK_std m_afqt m_asvabAR m_asvabCS m_asvabMK m_asvabNO m_asvabPC m_as
> vabWK famInc1996 m_famInc1996 liveWithMom14 femaleHeadHH1997 HHsize1997 femal
> e race white black hispanic mixed birth_month birth_year born_1980 born_1981 
> born_1982 born_1983 born_1984 Sample_type weight fedMinWage cpi Interview_dat
> e

. local school Highest_Grade_Completed School_Yr_to_Grade In_school??? Months_i
> n_K12 Months_in_college Months_in_grad_school In_K12 In_grad_school School_Yr
> _to_Grade Enrolled_K12_??? Enrolled_college_??? Enrolled_2yr_??? Enrolled_4yr
> _??? Enrolled_grad_school_??? gradGraduate yrGradGraduate grad4yr yrGrad4yr g
> rad2yr yrGrad2yr gradHS yrGradHS gradGED yrGradGED gradDiploma yrGradDiploma 
> Grad_month BA_month AA_month Diploma_month GED_month HS_month Grad_year BA_ye
> ar AA_year Diploma_year GED_year HS_year 

. local work weeks_employed weeks_worked_??? weeksSelfEmployed??? hours_worked_
> ??? avgHrs??? weeksMilitary??? workFT??? workPT??? work??? workSch??? workK12
> ??? workCollege??? military??? other??? activity???  workFTRecall??? workPTRe
> call??? workRecall??? workSchRecall??? workK12Recall??? workCollegeRecall??? 
> militaryRecall??? otherRecall??? activityRecall???  weeks_in_labor_force Avg_
> hrs_worked Hrs_worked_tot Created_Hours_Worked Total_Hours_Worked Total_Hours
> _Worked_Old annualHrsWrkCalcCalc annual_most_wage annual_main_wage annual_med
> ian_wage annual_least_wage annual_mean_wage annual_most_comp annual_main_comp
>  annual_median_comp annual_least_comp annual_mean_comp annual_ind_max annual_
> occ_max annual_occ_main annual_ind_main annual_ind_min annual_occ_min interns
> hip_max internship_min internship_main internship Hrs_worked_tot Created_Hour
> s_Worked num_jobs_week* wage_week* comp_week* wagerWeek* comprWeek* wage??? c
> omp??? wageAlt??? compAlt??? wageMedian??? compMedian??? wageAltMedian??? com
> pAltMedian??? total_employers num_primary_job_switches

. keep `demographics' `school' `work' lastValidSchoolDate long_miss_flag max_no
> nmissing_int_year R*interview* wage_job_current wage_job_main comp_job_curren
> t comp_job_main Highest_degree_ever self_employed_job_current self_employed_j
> ob_main occ_job_current occ_job_main ind_job_current ind_job_main

. 
. #delimit ;
delimiter now ;
. capture ren ID id;

.  lab var id "Person ID";

. capture ren age_now age;

.  lab var age "Age as of Jan 1 of current year";

. capture ren Meduc hgcMoth;

.  lab var hgcMoth "Mother's HGC";

. capture ren m_Meduc m_hgcMoth;

.  lab var m_hgcMoth "Missing Mother's HGC";

. capture ren Feduc hgcFath;

.  lab var hgcFath "Father's HGC";

. capture ren m_Feduc m_hgcFath;

.  lab var m_hgcFath "Missing Father's HGC";

.  capture ren foreignBorn foreignBorn;

.  lab var foreignBorn "Born outside of the US";

. capture ren afqt_std    afqt   ;

.  lab var afqt      "Standardized AFQT (Altonji et al.)";

. capture ren asvabAR_std asvabAR;

.  lab var asvabAR   "Standardized ASVAB Arithmetic Reasoning    (AR) Subtest (
> Altonji et al.)";

. capture ren asvabCS_std asvabCS;

.  lab var asvabCS   "Standardized ASVAB Coding Speed            (CS) Subtest (
> Altonji et al.)";

. capture ren asvabMK_std asvabMK;

.  lab var asvabMK   "Standardized ASVAB Mathematics Knowledge   (MK) Subtest (
> Altonji et al.)";

. capture ren asvabNO_std asvabNO;

.  lab var asvabNO   "Standardized ASVAB Numerical Operations    (NO) Subtest (
> Altonji et al.)";

. capture ren asvabPC_std asvabPC;

.  lab var asvabPC   "Standardized ASVAB Paragraph Comprehension (PC) Subtest (
> Altonji et al.)";

. capture ren asvabWK_std asvabWK;

.  lab var asvabWK   "Standardized ASVAB Word Knowledge          (WK) Subtest (
> Altonji et al.)";

. capture ren m_afqt    m_afqt   ;

.  lab var m_afqt    "Missing AFQT"                              ;

. capture ren m_asvabAR m_asvabAR;

.  lab var m_asvabAR "Missing ASVAB Arithmetic Reasoning    (AR)";

. capture ren m_asvabCS m_asvabCS;

.  lab var m_asvabCS "Missing ASVAB Coding Speed            (CS)";

. capture ren m_asvabMK m_asvabMK;

.  lab var m_asvabMK "Missing ASVAB Mathematics Knowledge   (MK)";

. capture ren m_asvabNO m_asvabNO;

.  lab var m_asvabNO "Missing ASVAB Numerical Operations    (NO)";

. capture ren m_asvabPC m_asvabPC;

.  lab var m_asvabPC "Missing ASVAB Paragraph Comprehension (PC)";

. capture ren m_asvabWK m_asvabWK;

.  lab var m_asvabWK "Missing ASVAB Word Knowledge          (WK)";

. capture ren famInc1996 famInc1996;

.  lab var famInc1996 "(Real) Family Income in 1996";

. capture ren m_famInc1996 m_famInc1996;

.  lab var m_famInc1996 "Missing Family Income in 1996";

. * capture ren Census_region region;
.  * lab var region "Census Region at Interview Date";
. capture ren birth_month birthMonth;

. capture ren birth_year  birthYear;

. capture ren born_1980 born1980;

.  lab var born1980 "Born in year 1980 dummy";

. capture ren born_1981 born1981;

.  lab var born1981 "Born in year 1981 dummy";

. capture ren born_1982 born1982;

.  lab var born1982 "Born in year 1982 dummy";

. capture ren born_1983 born1983;

.  lab var born1983 "Born in year 1983 dummy";

. capture ren born_1984 born1984;

.  lab var born1984 "Born in year 1984 dummy";

.  // remember to use b1984 as the omitted dummy
> gen oversample = 1-Sample_type;

.  lab var oversample "Dummy: 1=oversample; 0=cross-sectional";

. drop Sample_type;

. lab var fedMinWage "Federal Minimum Wage, $1982-84";

. lab var cpi "Consumer Price Index (CPI) $1982-84";

. *lab var weight_cc "Cumulative Cases survey weight (BLS created)";
. *lab var weight_panel "Panel survey weight (BLS created)";
. *lab var weight_altonji "Altonji et al. survey weight";
. *lab var custom_weight "Custom (BLS created) survey weight";
. ren Highest_Grade_Completed hgcIn;

.  lab var hgcIn "HGC as of survey date";

. ren School_Yr_to_Grade grade_current;

.  lab var grade_current "Current Grade Attending";

. ren Months_in_K12 monthsK12;

.  lab var monthsK12 "Months enrolled in K12 in calendar year t";

. ren Months_in_college monthsCollege;

.  lab var monthsCollege "Months enrolled in College in calendar year t";

. ren Months_in_grad_school monthsGradSch;

.  lab var monthsGradSch "Months enrolled in Graduate School in calendar year t
> ";

. * ren In_K12 enrK12;
.  * lab var enrK12 "Ever enrolled in K12 in calendar year t";
. * ren In_college enrCollege;
.  * lab var enrCollege "Ever enrolled in College in calendar year t";
. * ren In_grad_school enrGradSch;
.  * lab var enrGradSch "Ever enrolled in Graduate school in calendar year t";
. foreach mon in Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec {;
  2.     ren Enrolled_K12_`mon' enrK12`mon';
  3.  lab var enrK12`mon' "Enrolled in K12 in `mon' of calendar year t";
  4.     ren Enrolled_college_`mon' enrCollege`mon';
  5.  lab var enrCollege`mon' "Enrolled in College in `mon' of calendar year t"
> ;
  6.     ren Enrolled_2yr_`mon' enr2yr`mon';
  7.  lab var enr2yr`mon' "Enrolled in 2yr in `mon' of calendar year t";
  8.     ren Enrolled_4yr_`mon' enr4yr`mon';
  9.  lab var enr4yr`mon' "Enrolled in 4yr in `mon' of calendar year t";
 10.     ren Enrolled_grad_school_`mon' enrGradSch`mon';
 11.  lab var enrGradSch`mon' "Enrolled in Graduate School in `mon' of calendar
>  year t";
 12. };

. * ren Weeks_in_Military weeksMilitary;
.  * lab var weeksMilitary "Number of weeks of calendar year t spent in the mil
> itary";
. ren weeks_employed weeksEmployed;

.  lab var weeksEmployed "Number of weeks of calendar year t spent working for 
> an employer";

. ren weeks_in_labor_force weeksLabForce;

.  lab var weeksLabForce "Number of weeks of calendar year t spent in the labor
>  force";

. ren Avg_hrs_worked annualAvgHrsWrk;

.  lab var annualAvgHrsWrk "Annual Hours Worked / Weeks Employed, where N/0 = 0
> ";

. ren Total_Hours_Worked annualHrsWrk;

.  lab var annualHrsWrk "Hours worked in calendar year t across all jobs";

. ren annual_most_wage annualWageMax;

.  lab var annualWageMax "Highest wage across all jobs in calendar year t";

. ren annual_median_wage annualWageMed;

.  lab var annualWageMed "Median wage across all jobs in calendar year t";

. ren annual_least_wage annualWageMin;

.  lab var annualWageMin "Lowest wage across all jobs in calendar year t";

. ren annual_mean_wage annualWageMean;

.  lab var annualWageMean "Average wage weighted by job length in calendar year
>  t";

. ren annual_main_wage annualWageMain;

.  lab var annualWageMain "Wage at main job in calendar year t";

. ren annual_most_comp annualCompMax;

.  lab var annualCompMax "Highest comp across all jobs in calendar year t";

. ren annual_median_comp annualCompMed;

.  lab var annualCompMed "Median comp across all jobs in calendar year t";

. ren annual_least_comp annualCompMin;

.  lab var annualCompMin "Lowest comp across all jobs in calendar year t";

. ren annual_mean_comp annualCompMean;

.  lab var annualCompMean "Average comp weighted by job length in calendar year
>  t";

. ren annual_main_comp annualCompMain;

.  lab var annualCompMain "Comp at main job in calendar year t";

. ren annual_ind_max annualIndMax;

.  lab var annualIndMax "Industry of the highest-wage job in calendar year t";

. ren annual_occ_max annualOccMax;

.  lab var annualOccMax "Industry of the highest-wage job in calendar year t";

. ren annual_ind_main annualIndMain;

.  lab var annualIndMain "Industry of the main job in calendar year t";

. ren annual_occ_main annualOccMain;

.  lab var annualOccMax "Occupation of the main job in calendar year t";

. ren annual_ind_min annualIndMin;

.  lab var annualIndMin "Industry of the highest-wage job in calendar year t";

. ren annual_occ_min annualOccMin;

.  lab var annualOccMin "Industry of the highest-wage job in calendar year t";

. ren internship_max internshipMax;

.  lab var internshipMax "Industry of the highest-wage job in calendar year t";

. ren internship_min internshipMin;

.  lab var internshipMin "Industry of the highest-wage job in calendar year t";

. lab var internship "Any job reported in calendar year t was an internship";

. foreach mon of local months {;
  2.     ren weeks_worked_`mon' weeksWrk`mon';
  3.  lab var weeksWrk`mon' "Weeks Worked in `mon' of calendar year t";
  4.     ren hours_worked_`mon' monthlyHrsWrk`mon';
  5.  lab var monthlyHrsWrk`mon' "Total Hours Worked in `mon' of calendar year 
> t";
  6.     ren avgHrs`mon' avgHrsWrk`mon';
  7.  lab var avgHrsWrk`mon' "Average weekly hours worked in `mon' of calendar 
> year t";
  8.     lab var weeksMilitary`mon' "Weeks in military in `mon' of calendar yea
> r t";
  9.     ren work`mon' atWork`mon';
 10.  lab var atWork`mon' "Activity >=2 & Activity<=4 in `mon' of calendar year
>  t";
 11.         ren workFTRecall`mon'      RECALLworkFTRecall`mon'      ;
 12.     ren workPTRecall`mon'      RECALLworkPTRecall`mon'      ;
 13.     ren militaryRecall`mon'    RECALLmilitaryRecall`mon'    ;
 14.     ren workRecall`mon'        RECALLworkRecall`mon'        ;
 15.     ren workSchRecall`mon'     RECALLworkSchRecall`mon'     ;
 16.     ren workK12Recall`mon'     RECALLworkK12Recall`mon'     ;
 17.     ren workCollegeRecall`mon' RECALLworkCollegeRecall`mon' ;
 18.     ren otherRecall`mon'       RECALLotherRecall`mon'       ;
 19.     ren activityRecall`mon'    RECALLactivityRecall`mon'    ;
 20. };

. #delimit cr
delimiter now cr
. 
. capture ren In_school enrSchool

. capture ren id id

. capture ren year year

. capture ren age age

. capture ren birth_year birthYear

. capture ren white white

. capture ren black black

. capture ren hispanic hispanic

. capture ren race race

. capture ren HH_size_78 HHsize1978

. capture ren HHsize1997 HHsize1997

. capture ren region region

. capture ren hgcIn hgcIn

. capture ren weight_panel weight

. capture ren oversample oversampleRace

. capture ren annualHrsWrk annualHrsWrk

. capture ren grade_current gradeCurrent

. capture ren miss_interview missInt

. capture ren afqt afqt

. capture ren female female

. capture ren hgcMoth hgcMoth

. capture ren m_hgcMoth m_hgcMoth

. capture ren hgcFath hgcFath

. capture ren m_hgcFath m_hgcFath

. capture ren foreignBorn foreignBorn

. capture ren m_afqt m_afqt

. capture ren famInc1978 famInc1978

. capture ren famInc1996 famInc1996

. capture ren m_famInc1978 m_famInc1978

. capture ren m_famInc1996 m_famInc1996

. capture ren femaleHeadHH1997 femaleHeadHH1997

. capture ren livwmom14 liveWithMom14

. capture ren born1961 born1961

. capture ren born1962 born1962

. capture ren born1963 born1963

. capture ren born1964 born1964

. capture ren born1980 born1980

. capture ren born1981 born1981

. capture ren born1982 born1982

. capture ren born1983 born1983

. capture ren born1984 born1984

. capture ren age_at_miss_int ageAtMissInt

. capture ren year_miss_int yearMissInt

. capture ren ever_miss_interview everMissInt

. capture ren miss_interview_cum missIntCum

. capture ren miss_interview_length missIntLength

. capture ren ever_miss_3plus_int everMiss3plusInt

. capture ren ever_return_after_3plus_miss_int everReturnAfter3plusMissInt

. capture ren fedMinWage    fedMinWage

. capture ren cpi           cpi

. capture ren enrCollegeJan enrCollegeJan

. capture ren enrCollegeFeb enrCollegeFeb

. capture ren enrCollegeMar enrCollegeMar

. capture ren enrCollegeApr enrCollegeApr

. capture ren enrCollegeMay enrCollegeMay

. capture ren enrCollegeJun enrCollegeJun

. capture ren enrCollegeJul enrCollegeJul

. capture ren enrCollegeAug enrCollegeAug

. capture ren enrCollegeSep enrCollegeSep

. capture ren enrCollegeOct enrCollegeOct

. capture ren enrCollegeNov enrCollegeNov

. capture ren enrCollegeDec enrCollegeDec

. capture ren enr2yrJan enr2yrJan

. capture ren enr2yrFeb enr2yrFeb

. capture ren enr2yrMar enr2yrMar

. capture ren enr2yrApr enr2yrApr

. capture ren enr2yrMay enr2yrMay

. capture ren enr2yrJun enr2yrJun

. capture ren enr2yrJul enr2yrJul

. capture ren enr2yrAug enr2yrAug

. capture ren enr2yrSep enr2yrSep

. capture ren enr2yrOct enr2yrOct

. capture ren enr2yrNov enr2yrNov

. capture ren enr2yrDec enr2yrDec

. capture ren enr4yrJan enr4yrJan

. capture ren enr4yrFeb enr4yrFeb

. capture ren enr4yrMar enr4yrMar

. capture ren enr4yrApr enr4yrApr

. capture ren enr4yrMay enr4yrMay

. capture ren enr4yrJun enr4yrJun

. capture ren enr4yrJul enr4yrJul

. capture ren enr4yrAug enr4yrAug

. capture ren enr4yrSep enr4yrSep

. capture ren enr4yrOct enr4yrOct

. capture ren enr4yrNov enr4yrNov

. capture ren enr4yrDec enr4yrDec

. capture ren enrGradSchJan enrGradSchJan

. capture ren enrGradSchFeb enrGradSchFeb

. capture ren enrGradSchMar enrGradSchMar

. capture ren enrGradSchApr enrGradSchApr

. capture ren enrGradSchMay enrGradSchMay

. capture ren enrGradSchJun enrGradSchJun

. capture ren enrGradSchJul enrGradSchJul

. capture ren enrGradSchAug enrGradSchAug

. capture ren enrGradSchSep enrGradSchSep

. capture ren enrGradSchOct enrGradSchOct

. capture ren enrGradSchNov enrGradSchNov

. capture ren enrGradSchDec enrGradSchDec

. capture ren enrK12Jan enrK12Jan

. capture ren enrK12Feb enrK12Feb

. capture ren enrK12Mar enrK12Mar

. capture ren enrK12Apr enrK12Apr

. capture ren enrK12May enrK12May

. capture ren enrK12Jun enrK12Jun

. capture ren enrK12Jul enrK12Jul

. capture ren enrK12Aug enrK12Aug

. capture ren enrK12Sep enrK12Sep

. capture ren enrK12Oct enrK12Oct

. capture ren enrK12Nov enrK12Nov

. capture ren enrK12Dec enrK12Dec

. capture ren monthsCollege monthsCollege

. capture ren monthsGradSch monthsGradSch

. capture ren monthsK12 monthsK12

. capture ren enrK12 enrK12

. capture ren enrCollege enrCollege

. capture ren enrGradSch enrGradSch

. capture ren weeksEmployed weeksEmployed

. capture ren weeksLabForce weeksLabForce

. capture ren annualWageMean annualWageMean

. capture ren annualWageMed annualWageMed

. capture ren annualWageMin annualWageMin

. capture ren annualWageMax annualWageMax

. capture ren annualWageMain annualWageMain

. capture ren annualCompMean annualCompMean

. capture ren annualCompMed annualCompMed

. capture ren annualCompMin annualCompMin

. capture ren annualCompMax annualCompMax

. capture ren annualCompMain annualCompMain

. capture ren annualOccMin annualOccMin

. capture ren annualOccMax annualOccMax

. capture ren annualOccMain annualOccMain

. capture ren annualIndMin annualIndMin

. capture ren annualIndMax annualIndMax

. capture ren annualIndMain annualIndMain

. capture ren weeksWrkJan weeksWrkJan

. capture ren weeksWrkFeb weeksWrkFeb

. capture ren weeksWrkMar weeksWrkMar

. capture ren weeksWrkApr weeksWrkApr

. capture ren weeksWrkMay weeksWrkMay

. capture ren weeksWrkJun weeksWrkJun

. capture ren weeksWrkJul weeksWrkJul

. capture ren weeksWrkAug weeksWrkAug

. capture ren weeksWrkSep weeksWrkSep

. capture ren weeksWrkOct weeksWrkOct

. capture ren weeksWrkNov weeksWrkNov

. capture ren weeksWrkDec weeksWrkDec

. capture ren annualAvgHrsWrk annualAvgHrsWrk

. capture ren weeksMilitary weeksMilitary

. * capture ren   workFT workFT
. * capture ren   workPT_A workPT_A
. * capture ren   workPT_B workPT_B
. * capture ren   militaryA militaryA
. * capture ren   militaryB militaryB
. * capture ren   militaryC militaryC
. * capture ren   workA workA
. * capture ren   workB workB
. * capture ren   workSchA workSchA
. * capture ren   workK12A workK12A
. * capture ren   workCollegeA workCollegeA
. * capture ren   workSchB workSchB
. * capture ren   workK12B workK12B
. * capture ren   workCollegeB workCollegeB
. * capture ren   otherA otherA
. * capture ren   otherB otherB
. * capture ren   otherC otherC
. * capture ren   activityA activityA
. * capture ren   activityB activityB
. * capture ren   activityC activityC
. 
. capture lab var id "Person ID"

. capture lab var year "Year of Survey"

. capture lab var age "Age as of Jan 1 of current year"

. capture lab var birthYear "Birth year"

. capture lab var white "White indicator"

. capture lab var black "Black indicator"

. capture lab var hispanic "Hispanic indicator"

. capture lab var race "Race from Screener (Mixed dropped in 97)"

. capture lab var HHsize1978 "Household Size in 1979"

. capture lab var HHsize1997 "Household Size in 1997"

. capture lab var region "Census Region at Interview Date"

. capture lab var hgcIn "HGC as of survey date"

. capture lab var weight "Panel survey weight (BLS created)"

. capture lab var oversampleRace "Dummy: 1=oversample; 0=cross-sectional"

. capture lab var annualHrsWrk "Hours worked in calendar year t across all jobs
> "

. capture lab var gradeCurrent "Current Grade Attending"

. capture lab var missInt "Missed Interview In Current Year"

. capture lab var afqt "Standardized AFQT (Altonji et al.)"

. capture lab var female "Female"

. capture lab var hgcMoth "Mother's HGC"

. capture lab var m_hgcMoth "Missing Mother's HGC"

. capture lab var hgcFath "Father's HGC"

. capture lab var m_hgcFath "Missing Father's HGC"

. capture lab var foreignBorn "Born outside of the US"

. capture lab var m_afqt "Missing AFQT"

. capture lab var famInc1978 "(Real) Family Income in 1978"

. capture lab var famInc1996 "(Real) Family Income in 1996"

. capture lab var m_famInc1978 "Missing Family Income in 1978"

. capture lab var m_famInc1996 "Missing Family Income in 1996"

. capture lab var femaleHeadHH1997 "Female headed household in 1997"

. capture lab var liveWithMom14 "Live with mother at age 14"

. capture lab var born1961 "Born in year 1961 dummy"

. capture lab var born1962 "Born in year 1962 dummy"

. capture lab var born1963 "Born in year 1963 dummy"

. capture lab var born1964 "Born in year 1964 dummy"

. capture lab var born1980 "Born in year 1980 dummy"

. capture lab var born1981 "Born in year 1981 dummy"

. capture lab var born1982 "Born in year 1982 dummy"

. capture lab var born1983 "Born in year 1983 dummy"

. capture lab var born1984 "Born in year 1984 dummy"

. capture lab var ageAtMissInt "Age * Miss Int dummy"

. capture lab var yearMissInt "Year * Miss Int dummy"

. capture lab var everMissInt "Ever miss an interview"

. capture lab var missIntCum "Running Tally Of Current Missed Interview Spell"

. capture lab var missIntLength "Length Of Current Missed Interview Spell"

. capture lab var everMiss3plusInt "Ever miss 3+ consecutive interviews"

. capture lab var everReturnAfter3plusMissInt "Ever return after missing 3+ con
> secutive interviews"

. capture lab var fedMinWage "Federal Minimum Wage, $1982-84"

. capture lab var cpi "Consumer Price Index (CPI) $1982-84"

. capture lab var enrCollegeJan "Enrolled in College in Jan of Survey Year"

. capture lab var enrCollegeFeb "Enrolled in College in Feb of Survey Year"

. capture lab var enrCollegeMar "Enrolled in College in Mar of Survey Year"

. capture lab var enrCollegeApr "Enrolled in College in Apr of Survey Year"

. capture lab var enrCollegeMay "Enrolled in College in May of Survey Year"

. capture lab var enrCollegeJun "Enrolled in College in Jun of Survey Year"

. capture lab var enrCollegeJul "Enrolled in College in Jul of Survey Year"

. capture lab var enrCollegeAug "Enrolled in College in Aug of Survey Year"

. capture lab var enrCollegeSep "Enrolled in College in Sep of Survey Year"

. capture lab var enrCollegeOct "Enrolled in College in Oct of Survey Year"

. capture lab var enrCollegeNov "Enrolled in College in Nov of Survey Year"

. capture lab var enrCollegeDec "Enrolled in College in Dec of Survey Year"

. capture lab var enr2yrJan "Enrolled in 2yr in Jan of Survey Year"

. capture lab var enr2yrFeb "Enrolled in 2yr in Feb of Survey Year"

. capture lab var enr2yrMar "Enrolled in 2yr in Mar of Survey Year"

. capture lab var enr2yrApr "Enrolled in 2yr in Apr of Survey Year"

. capture lab var enr2yrMay "Enrolled in 2yr in May of Survey Year"

. capture lab var enr2yrJun "Enrolled in 2yr in Jun of Survey Year"

. capture lab var enr2yrJul "Enrolled in 2yr in Jul of Survey Year"

. capture lab var enr2yrAug "Enrolled in 2yr in Aug of Survey Year"

. capture lab var enr2yrSep "Enrolled in 2yr in Sep of Survey Year"

. capture lab var enr2yrOct "Enrolled in 2yr in Oct of Survey Year"

. capture lab var enr2yrNov "Enrolled in 2yr in Nov of Survey Year"

. capture lab var enr2yrDec "Enrolled in 2yr in Dec of Survey Year"

. capture lab var enr4yrJan "Enrolled in 4yr in Jan of Survey Year"

. capture lab var enr4yrFeb "Enrolled in 4yr in Feb of Survey Year"

. capture lab var enr4yrMar "Enrolled in 4yr in Mar of Survey Year"

. capture lab var enr4yrApr "Enrolled in 4yr in Apr of Survey Year"

. capture lab var enr4yrMay "Enrolled in 4yr in May of Survey Year"

. capture lab var enr4yrJun "Enrolled in 4yr in Jun of Survey Year"

. capture lab var enr4yrJul "Enrolled in 4yr in Jul of Survey Year"

. capture lab var enr4yrAug "Enrolled in 4yr in Aug of Survey Year"

. capture lab var enr4yrSep "Enrolled in 4yr in Sep of Survey Year"

. capture lab var enr4yrOct "Enrolled in 4yr in Oct of Survey Year"

. capture lab var enr4yrNov "Enrolled in 4yr in Nov of Survey Year"

. capture lab var enr4yrDec "Enrolled in 4yr in Dec of Survey Year"

. capture lab var enrGradSchJan "Enrolled in Grad School in Jan of Survey Year"

. capture lab var enrGradSchFeb "Enrolled in Grad School in Feb of Survey Year"

. capture lab var enrGradSchMar "Enrolled in Grad School in Mar of Survey Year"

. capture lab var enrGradSchApr "Enrolled in Grad School in Apr of Survey Year"

. capture lab var enrGradSchMay "Enrolled in Grad School in May of Survey Year"

. capture lab var enrGradSchJun "Enrolled in Grad School in Jun of Survey Year"

. capture lab var enrGradSchJul "Enrolled in Grad School in Jul of Survey Year"

. capture lab var enrGradSchAug "Enrolled in Grad School in Aug of Survey Year"

. capture lab var enrGradSchSep "Enrolled in Grad School in Sep of Survey Year"

. capture lab var enrGradSchOct "Enrolled in Grad School in Oct of Survey Year"

. capture lab var enrGradSchNov "Enrolled in Grad School in Nov of Survey Year"

. capture lab var enrGradSchDec "Enrolled in Grad School in Dec of Survey Year"

. capture lab var enrK12Jan "Enrolled in K12 in Jan of Survey Year"

. capture lab var enrK12Feb "Enrolled in K12 in Feb of Survey Year"

. capture lab var enrK12Mar "Enrolled in K12 in Mar of Survey Year"

. capture lab var enrK12Apr "Enrolled in K12 in Apr of Survey Year"

. capture lab var enrK12May "Enrolled in K12 in May of Survey Year"

. capture lab var enrK12Jun "Enrolled in K12 in Jun of Survey Year"

. capture lab var enrK12Jul "Enrolled in K12 in Jul of Survey Year"

. capture lab var enrK12Aug "Enrolled in K12 in Aug of Survey Year"

. capture lab var enrK12Sep "Enrolled in K12 in Sep of Survey Year"

. capture lab var enrK12Oct "Enrolled in K12 in Oct of Survey Year"

. capture lab var enrK12Nov "Enrolled in K12 in Nov of Survey Year"

. capture lab var enrK12Dec "Enrolled in K12 in Dec of Survey Year"

. capture lab var monthsCollege "Months enrolled in College in calendar year t"

. capture lab var monthsGradSch "Months enrolled in Graduate School in calendar
>  year t"

. capture lab var monthsK12 "Months enrolled in K12 in calendar year t"

. capture lab var enrK12 "Ever enrolled in K12 in calendar year t"

. capture lab var enrCollege "Ever enrolled in College in calendar year t"

. capture lab var enrGradSch "Ever enrolled in Graduate school in calendar year
>  t"

. capture lab var weeksEmployed "Number of weeks of calendar year t spent worki
> ng for an employer"

. capture lab var weeksLabForce "Number of weeks of calendar year t spent in th
> e labor force"

. capture lab var annualWageMean "Average wage weighted by weeks worked in cale
> ndar year"

. capture lab var annualWageMed "Median wage across all jobs in calendar year t
> "

. capture lab var annualWageMin "Lowest wage across all jobs in calendar year t
> "

. capture lab var annualWageMax "Highest wage across all jobs in calendar year 
> t"

. capture lab var annualWageMain "Wage at main job in calendar year t"

. capture lab var annualCompMean "Average Comp weighted by weeks worked in cale
> ndar year"

. capture lab var annualCompMed "Median Comp across all jobs in calendar year t
> "

. capture lab var annualCompMin "Lowest Comp across all jobs in calendar year t
> "

. capture lab var annualCompMax "Highest Comp across all jobs in calendar year 
> t"

. capture lab var annualCompMain "Comp at main job in calendar year t"

. capture lab var annualOccMin "Occupation of the lowest-wage job in calendar y
> ear t"

. capture lab var annualOccMax "Occupation of the highest-wage job in calendar 
> year t"

. capture lab var annualOccMain "Occupation of the main job in calendar year t"

. capture lab var annualIndMin "Industry of the lowest-wage job in calendar yea
> r t"

. capture lab var annualIndMax "Industry of the highest-wage job in calendar ye
> ar t"

. capture lab var annualIndMain "Industry of the main job in calendar year t"

. capture lab var weeksWrkJan "Weeks Worked in Jan of calendar year t"

. capture lab var weeksWrkFeb "Weeks Worked in Feb of calendar year t"

. capture lab var weeksWrkMar "Weeks Worked in Mar of calendar year t"

. capture lab var weeksWrkApr "Weeks Worked in Apr of calendar year t"

. capture lab var weeksWrkMay "Weeks Worked in May of calendar year t"

. capture lab var weeksWrkJun "Weeks Worked in Jun of calendar year t"

. capture lab var weeksWrkJul "Weeks Worked in Jul of calendar year t"

. capture lab var weeksWrkAug "Weeks Worked in Aug of calendar year t"

. capture lab var weeksWrkSep "Weeks Worked in Sep of calendar year t"

. capture lab var weeksWrkOct "Weeks Worked in Oct of calendar year t"

. capture lab var weeksWrkNov "Weeks Worked in Nov of calendar year t"

. capture lab var weeksWrkDec "Weeks Worked in Dec of calendar year t"

. capture lab var weeksSelfEmployedJan   "Weeks Self-Employed in Jan of calenda
> r year t"

. capture lab var weeksSelfEmployedFeb   "Weeks Self-Employed in Feb of calenda
> r year t"

. capture lab var weeksSelfEmployedMar   "Weeks Self-Employed in Mar of calenda
> r year t"

. capture lab var weeksSelfEmployedApr   "Weeks Self-Employed in Apr of calenda
> r year t"

. capture lab var weeksSelfEmployedMay   "Weeks Self-Employed in May of calenda
> r year t"

. capture lab var weeksSelfEmployedJun   "Weeks Self-Employed in Jun of calenda
> r year t"

. capture lab var weeksSelfEmployedJul   "Weeks Self-Employed in Jul of calenda
> r year t"

. capture lab var weeksSelfEmployedAug   "Weeks Self-Employed in Aug of calenda
> r year t"

. capture lab var weeksSelfEmployedSep   "Weeks Self-Employed in Sep of calenda
> r year t"

. capture lab var weeksSelfEmployedOct   "Weeks Self-Employed in Oct of calenda
> r year t"

. capture lab var weeksSelfEmployedNov   "Weeks Self-Employed in Nov of calenda
> r year t"

. capture lab var weeksSelfEmployedDec   "Weeks Self-Employed in Dec of calenda
> r year t"

. capture lab var annualAvgHrsWrk "Annual Hours Worked / Weeks Employed, where 
> N/0 = 0"

. capture lab var weeksMilitary "Number of weeks of calendar year t spent in th
> e military"

. * capture lab var workFT "Working Full-Time indicator"
. * capture lab var workPT_A "Working Part-Time indicator (Def A)"
. * capture lab var workPT_B "Working Part-Time indicator (Def B)"
. * capture lab var militaryA "Military indicator (Def A)"
. * capture lab var militaryB "Military indicator (Def B)"
. * capture lab var militaryC "Military indicator (Def C)"
. * capture lab var workA "Working indicator (Def A)"
. * capture lab var workB "Working indicator (Def B)"
. * capture lab var workSchA "Working and School indicator (Def A)"
. * capture lab var workK12A "Working and K12 indicator (Def A)"
. * capture lab var workCollegeA "Working and College indicator (Def A)"
. * capture lab var workSchB "Working and School indicator (Def B)"
. * capture lab var workK12B "Working and K12 indicator (Def B)"
. * capture lab var workCollegeB "Working and College indicator (Def B)"
. * capture lab var otherA "Other indicator (Def A)"
. * capture lab var otherB "Other indicator (Def B)"
. * capture lab var otherC "Other indicator (Def C)"
. * capture lab var activityA "Primary Activity (Def A)"
. * capture lab var activityB "Primary Activity (Def B)"
. * capture lab var activityC "Primary Activity (Def C)"
. capture ren Hrs_worked_tot annualHrsWrkCalc

. capture lab var annualHrsWrkCalc "Annual Hours calculated as sum of 'Hours pe
> r week across jobs' variable"

. capture ren Created_Hours_Worked annualHrsWrkRaw

. capture lab var annualHrsWrkRaw "Annual Hours from raw survey data"

. capture ren Total_Hours_Worked_Old annualHrsWrkOld

. capture lab var annualHrsWrkOld "Previous Annual Hours variable (before summi
> ng over different types)"

. capture lab var annualHrsWrkCalcCalc "Annual Hours calculated as sum of 'Hour
> s per week at job X' multiplied by weeks worked at job X in the year"

. 
. ren wage_job_current          WageJobCurrent

. ren wage_job_main             WageJobMain

. ren comp_job_current          CompJobCurrent

. ren comp_job_main             CompJobMain

. ren self_employed_job_current selfEmployedJobCurrent

. ren self_employed_job_main    selfEmployedJobMain

. ren occ_job_current           occJobCurrent

. ren occ_job_main              occJobMain

. ren ind_job_current           indJobCurrent

. ren ind_job_main              indJobMain

. 
. order id year age birthMonth birthYear white black hispanic mixed liveWithMom
> 14 race HHsize1997 weight oversampleRace annualHrsWrk gradeCurrent missInt af
> qt asvabAR asvabCS asvabMK asvabNO asvabPC asvabWK m_afqt m_asvabAR m_asvabCS
>  m_asvabMK m_asvabNO m_asvabPC m_asvabWK female hgcIn hgcMoth m_hgcMoth hgcFa
> th m_hgcFath foreignBorn famInc1996 m_famInc1996 femaleHeadHH1997 born1980 bo
> rn1981 born1982 born1983 born1984 ageAtMissInt yearMissInt everMissInt missIn
> tCum missIntLength everMiss3plusInt everReturnAfter3plusMissInt missIntLastSp
> ell fedMinWage cpi enrCollegeJan enrCollegeFeb enrCollegeMar enrCollegeApr en
> rCollegeMay enrCollegeJun enrCollegeJul enrCollegeAug enrCollegeSep enrColleg
> eOct enrCollegeNov enrCollegeDec enr2yrJan enr2yrFeb enr2yrMar enr2yrApr enr2
> yrMay enr2yrJun enr2yrJul enr2yrAug enr2yrSep enr2yrOct enr2yrNov enr2yrDec e
> nr4yrJan enr4yrFeb enr4yrMar enr4yrApr enr4yrMay enr4yrJun enr4yrJul enr4yrAu
> g enr4yrSep enr4yrOct enr4yrNov enr4yrDec enrGradSchJan enrGradSchFeb enrGrad
> SchMar enrGradSchApr enrGradSchMay enrGradSchJun enrGradSchJul enrGradSchAug 
> enrGradSchSep enrGradSchOct enrGradSchNov enrGradSchDec enrK12Jan enrK12Feb e
> nrK12Mar enrK12Apr enrK12May enrK12Jun enrK12Jul enrK12Aug enrK12Sep enrK12Oc
> t enrK12Nov enrK12Dec monthsCollege monthsGradSch monthsK12 weeksEmployed wee
> ksLabForce annualWageMean annualWageMed annualWageMin annualWageMax annualWag
> eMain wageJan wageFeb wageMar wageApr wageMay wageJun wageJul wageAug wageSep
>  wageOct wageNov wageDec wageMedianJan wageMedianFeb wageMedianMar wageMedian
> Apr wageMedianMay wageMedianJun wageMedianJul wageMedianAug wageMedianSep wag
> eMedianOct wageMedianNov wageMedianDec wageAltJan wageAltFeb wageAltMar wageA
> ltApr wageAltMay wageAltJun wageAltJul wageAltAug wageAltSep wageAltOct wageA
> ltNov wageAltDec wageAltMedianJan wageAltMedianFeb wageAltMedianMar wageAltMe
> dianApr wageAltMedianMay wageAltMedianJun wageAltMedianJul wageAltMedianAug w
> ageAltMedianSep wageAltMedianOct wageAltMedianNov wageAltMedianDec annualComp
> Mean annualCompMed annualCompMin annualCompMax annualCompMain compJan compFeb
>  compMar compApr compMay compJun compJul compAug compSep compOct compNov comp
> Dec compMedianJan compMedianFeb compMedianMar compMedianApr compMedianMay com
> pMedianJun compMedianJul compMedianAug compMedianSep compMedianOct compMedian
> Nov compMedianDec compAltJan compAltFeb compAltMar compAltApr compAltMay comp
> AltJun compAltJul compAltAug compAltSep compAltOct compAltNov compAltDec comp
> AltMedianJan compAltMedianFeb compAltMedianMar compAltMedianApr compAltMedian
> May compAltMedianJun compAltMedianJul compAltMedianAug compAltMedianSep compA
> ltMedianOct compAltMedianNov compAltMedianDec annualOccMin annualOccMax annua
> lOccMain annualIndMin annualIndMax annualIndMain weeksWrkJan weeksWrkFeb week
> sWrkMar weeksWrkApr weeksWrkMay weeksWrkJun weeksWrkJul weeksWrkAug weeksWrkS
> ep weeksWrkOct weeksWrkNov weeksWrkDec weeksSelfEmployedJan weeksSelfEmployed
> Feb weeksSelfEmployedMar weeksSelfEmployedApr weeksSelfEmployedMay weeksSelfE
> mployedJun weeksSelfEmployedJul weeksSelfEmployedAug weeksSelfEmployedSep wee
> ksSelfEmployedOct weeksSelfEmployedNov weeksSelfEmployedDec avgHrsWrkJan avgH
> rsWrkFeb avgHrsWrkMar avgHrsWrkApr avgHrsWrkMay avgHrsWrkJun avgHrsWrkJul avg
> HrsWrkAug avgHrsWrkSep avgHrsWrkOct avgHrsWrkNov avgHrsWrkDec annualAvgHrsWrk
>  monthlyHrsWrkJan monthlyHrsWrkFeb monthlyHrsWrkMar monthlyHrsWrkApr monthlyH
> rsWrkMay monthlyHrsWrkJun monthlyHrsWrkJul monthlyHrsWrkAug monthlyHrsWrkSep 
> monthlyHrsWrkOct monthlyHrsWrkNov monthlyHrsWrkDec weeksMilitaryJan weeksMili
> taryFeb weeksMilitaryMar weeksMilitaryApr weeksMilitaryMay weeksMilitaryJun w
> eeksMilitaryJul weeksMilitaryAug weeksMilitarySep weeksMilitaryOct weeksMilit
> aryNov weeksMilitaryDec workFTJan workFTFeb workFTMar workFTApr workFTMay wor
> kFTJun workFTJul workFTAug workFTSep workFTOct workFTNov workFTDec workPTJan 
> workPTFeb workPTMar workPTApr workPTMay workPTJun workPTJul workPTAug workPTS
> ep workPTOct workPTNov workPTDec militaryJan militaryFeb militaryMar military
> Apr militaryMay militaryJun militaryJul militaryAug militarySep militaryOct m
> ilitaryNov militaryDec atWorkJan atWorkFeb atWorkMar atWorkApr atWorkMay atWo
> rkJun atWorkJul atWorkAug atWorkSep atWorkOct atWorkNov atWorkDec workSchJan 
> workSchFeb workSchMar workSchApr workSchMay workSchJun workSchJul workSchAug 
> workSchSep workSchOct workSchNov workSchDec workK12Jan workK12Feb workK12Mar 
> workK12Apr workK12May workK12Jun workK12Jul workK12Aug workK12Sep workK12Oct 
> workK12Nov workK12Dec workCollegeJan workCollegeFeb workCollegeMar workColleg
> eApr workCollegeMay workCollegeJun workCollegeJul workCollegeAug workCollegeS
> ep workCollegeOct workCollegeNov workCollegeDec otherJan otherFeb otherMar ot
> herApr otherMay otherJun otherJul otherAug otherSep otherOct otherNov otherDe
> c activityJan activityFeb activityMar activityApr activityMay activityJun act
> ivityJul activityAug activitySep activityOct activityNov activityDec RECALLwo
> rkFTRecallJan RECALLworkFTRecallFeb RECALLworkFTRecallMar RECALLworkFTRecallA
> pr RECALLworkFTRecallMay RECALLworkFTRecallJun RECALLworkFTRecallJul RECALLwo
> rkFTRecallAug RECALLworkFTRecallSep RECALLworkFTRecallOct RECALLworkFTRecallN
> ov RECALLworkFTRecallDec RECALLworkPTRecallJan RECALLworkPTRecallFeb RECALLwo
> rkPTRecallMar RECALLworkPTRecallApr RECALLworkPTRecallMay RECALLworkPTRecallJ
> un RECALLworkPTRecallJul RECALLworkPTRecallAug RECALLworkPTRecallSep RECALLwo
> rkPTRecallOct RECALLworkPTRecallNov RECALLworkPTRecallDec RECALLmilitaryRecal
> lJan RECALLmilitaryRecallFeb RECALLmilitaryRecallMar RECALLmilitaryRecallApr 
> RECALLmilitaryRecallMay RECALLmilitaryRecallJun RECALLmilitaryRecallJul RECAL
> LmilitaryRecallAug RECALLmilitaryRecallSep RECALLmilitaryRecallOct RECALLmili
> taryRecallNov RECALLmilitaryRecallDec RECALLworkRecallJan RECALLworkRecallFeb
>  RECALLworkRecallMar RECALLworkRecallApr RECALLworkRecallMay RECALLworkRecall
> Jun RECALLworkRecallJul RECALLworkRecallAug RECALLworkRecallSep RECALLworkRec
> allOct RECALLworkRecallNov RECALLworkRecallDec RECALLworkSchRecallJan RECALLw
> orkSchRecallFeb RECALLworkSchRecallMar RECALLworkSchRecallApr RECALLworkSchRe
> callMay RECALLworkSchRecallJun RECALLworkSchRecallJul RECALLworkSchRecallAug 
> RECALLworkSchRecallSep RECALLworkSchRecallOct RECALLworkSchRecallNov RECALLwo
> rkSchRecallDec RECALLworkK12RecallJan RECALLworkK12RecallFeb RECALLworkK12Rec
> allMar RECALLworkK12RecallApr RECALLworkK12RecallMay RECALLworkK12RecallJun R
> ECALLworkK12RecallJul RECALLworkK12RecallAug RECALLworkK12RecallSep RECALLwor
> kK12RecallOct RECALLworkK12RecallNov RECALLworkK12RecallDec RECALLworkCollege
> RecallJan RECALLworkCollegeRecallFeb RECALLworkCollegeRecallMar RECALLworkCol
> legeRecallApr RECALLworkCollegeRecallMay RECALLworkCollegeRecallJun RECALLwor
> kCollegeRecallJul RECALLworkCollegeRecallAug RECALLworkCollegeRecallSep RECAL
> LworkCollegeRecallOct RECALLworkCollegeRecallNov RECALLworkCollegeRecallDec R
> ECALLotherRecallJan RECALLotherRecallFeb RECALLotherRecallMar RECALLotherReca
> llApr RECALLotherRecallMay RECALLotherRecallJun RECALLotherRecallJul RECALLot
> herRecallAug RECALLotherRecallSep RECALLotherRecallOct RECALLotherRecallNov R
> ECALLotherRecallDec RECALLactivityRecallJan RECALLactivityRecallFeb RECALLact
> ivityRecallMar RECALLactivityRecallApr RECALLactivityRecallMay RECALLactivity
> RecallJun RECALLactivityRecallJul RECALLactivityRecallAug RECALLactivityRecal
> lSep RECALLactivityRecallOct RECALLactivityRecallNov RECALLactivityRecallDec 
> gradGraduate yrGradGraduate grad4yr yrGrad4yr grad2yr yrGrad2yr gradHS yrGrad
> HS gradDiploma yrGradDiploma gradGED yrGradGED annualHrsWrkCalc annualHrsWrkC
> alcCalc annualHrsWrkRaw annualHrsWrkOld Grad_month BA_month AA_month Diploma_
> month GED_month HS_month Grad_year BA_year AA_year Diploma_year GED_year HS_y
> ear WageJobCurrent WageJobMain CompJobCurrent CompJobMain Interview_date last
> _int_day R*interview* Highest_degree_ever selfEmployedJobCurrent selfEmployed
> JobMain indJobMain indJobCurrent occJobMain occJobCurrent long_miss_flag max_
> nonmissing_int_year lastValidSchoolDate

. keep  id year age birthMonth birthYear white black hispanic mixed liveWithMom
> 14 race HHsize1997 weight oversampleRace annualHrsWrk gradeCurrent missInt af
> qt asvabAR asvabCS asvabMK asvabNO asvabPC asvabWK m_afqt m_asvabAR m_asvabCS
>  m_asvabMK m_asvabNO m_asvabPC m_asvabWK female hgcIn hgcMoth m_hgcMoth hgcFa
> th m_hgcFath foreignBorn famInc1996 m_famInc1996 femaleHeadHH1997 born1980 bo
> rn1981 born1982 born1983 born1984 ageAtMissInt yearMissInt everMissInt missIn
> tCum missIntLength everMiss3plusInt everReturnAfter3plusMissInt missIntLastSp
> ell fedMinWage cpi enrCollegeJan enrCollegeFeb enrCollegeMar enrCollegeApr en
> rCollegeMay enrCollegeJun enrCollegeJul enrCollegeAug enrCollegeSep enrColleg
> eOct enrCollegeNov enrCollegeDec enr2yrJan enr2yrFeb enr2yrMar enr2yrApr enr2
> yrMay enr2yrJun enr2yrJul enr2yrAug enr2yrSep enr2yrOct enr2yrNov enr2yrDec e
> nr4yrJan enr4yrFeb enr4yrMar enr4yrApr enr4yrMay enr4yrJun enr4yrJul enr4yrAu
> g enr4yrSep enr4yrOct enr4yrNov enr4yrDec enrGradSchJan enrGradSchFeb enrGrad
> SchMar enrGradSchApr enrGradSchMay enrGradSchJun enrGradSchJul enrGradSchAug 
> enrGradSchSep enrGradSchOct enrGradSchNov enrGradSchDec enrK12Jan enrK12Feb e
> nrK12Mar enrK12Apr enrK12May enrK12Jun enrK12Jul enrK12Aug enrK12Sep enrK12Oc
> t enrK12Nov enrK12Dec monthsCollege monthsGradSch monthsK12 weeksEmployed wee
> ksLabForce annualWageMean annualWageMed annualWageMin annualWageMax annualWag
> eMain wageJan wageFeb wageMar wageApr wageMay wageJun wageJul wageAug wageSep
>  wageOct wageNov wageDec wageMedianJan wageMedianFeb wageMedianMar wageMedian
> Apr wageMedianMay wageMedianJun wageMedianJul wageMedianAug wageMedianSep wag
> eMedianOct wageMedianNov wageMedianDec wageAltJan wageAltFeb wageAltMar wageA
> ltApr wageAltMay wageAltJun wageAltJul wageAltAug wageAltSep wageAltOct wageA
> ltNov wageAltDec wageAltMedianJan wageAltMedianFeb wageAltMedianMar wageAltMe
> dianApr wageAltMedianMay wageAltMedianJun wageAltMedianJul wageAltMedianAug w
> ageAltMedianSep wageAltMedianOct wageAltMedianNov wageAltMedianDec annualComp
> Mean annualCompMed annualCompMin annualCompMax annualCompMain compJan compFeb
>  compMar compApr compMay compJun compJul compAug compSep compOct compNov comp
> Dec compMedianJan compMedianFeb compMedianMar compMedianApr compMedianMay com
> pMedianJun compMedianJul compMedianAug compMedianSep compMedianOct compMedian
> Nov compMedianDec compAltJan compAltFeb compAltMar compAltApr compAltMay comp
> AltJun compAltJul compAltAug compAltSep compAltOct compAltNov compAltDec comp
> AltMedianJan compAltMedianFeb compAltMedianMar compAltMedianApr compAltMedian
> May compAltMedianJun compAltMedianJul compAltMedianAug compAltMedianSep compA
> ltMedianOct compAltMedianNov compAltMedianDec annualOccMin annualOccMax annua
> lOccMain annualIndMin annualIndMax annualIndMain weeksWrkJan weeksWrkFeb week
> sWrkMar weeksWrkApr weeksWrkMay weeksWrkJun weeksWrkJul weeksWrkAug weeksWrkS
> ep weeksWrkOct weeksWrkNov weeksWrkDec weeksSelfEmployedJan weeksSelfEmployed
> Feb weeksSelfEmployedMar weeksSelfEmployedApr weeksSelfEmployedMay weeksSelfE
> mployedJun weeksSelfEmployedJul weeksSelfEmployedAug weeksSelfEmployedSep wee
> ksSelfEmployedOct weeksSelfEmployedNov weeksSelfEmployedDec avgHrsWrkJan avgH
> rsWrkFeb avgHrsWrkMar avgHrsWrkApr avgHrsWrkMay avgHrsWrkJun avgHrsWrkJul avg
> HrsWrkAug avgHrsWrkSep avgHrsWrkOct avgHrsWrkNov avgHrsWrkDec annualAvgHrsWrk
>  monthlyHrsWrkJan monthlyHrsWrkFeb monthlyHrsWrkMar monthlyHrsWrkApr monthlyH
> rsWrkMay monthlyHrsWrkJun monthlyHrsWrkJul monthlyHrsWrkAug monthlyHrsWrkSep 
> monthlyHrsWrkOct monthlyHrsWrkNov monthlyHrsWrkDec weeksMilitaryJan weeksMili
> taryFeb weeksMilitaryMar weeksMilitaryApr weeksMilitaryMay weeksMilitaryJun w
> eeksMilitaryJul weeksMilitaryAug weeksMilitarySep weeksMilitaryOct weeksMilit
> aryNov weeksMilitaryDec workFTJan workFTFeb workFTMar workFTApr workFTMay wor
> kFTJun workFTJul workFTAug workFTSep workFTOct workFTNov workFTDec workPTJan 
> workPTFeb workPTMar workPTApr workPTMay workPTJun workPTJul workPTAug workPTS
> ep workPTOct workPTNov workPTDec militaryJan militaryFeb militaryMar military
> Apr militaryMay militaryJun militaryJul militaryAug militarySep militaryOct m
> ilitaryNov militaryDec atWorkJan atWorkFeb atWorkMar atWorkApr atWorkMay atWo
> rkJun atWorkJul atWorkAug atWorkSep atWorkOct atWorkNov atWorkDec workSchJan 
> workSchFeb workSchMar workSchApr workSchMay workSchJun workSchJul workSchAug 
> workSchSep workSchOct workSchNov workSchDec workK12Jan workK12Feb workK12Mar 
> workK12Apr workK12May workK12Jun workK12Jul workK12Aug workK12Sep workK12Oct 
> workK12Nov workK12Dec workCollegeJan workCollegeFeb workCollegeMar workColleg
> eApr workCollegeMay workCollegeJun workCollegeJul workCollegeAug workCollegeS
> ep workCollegeOct workCollegeNov workCollegeDec otherJan otherFeb otherMar ot
> herApr otherMay otherJun otherJul otherAug otherSep otherOct otherNov otherDe
> c activityJan activityFeb activityMar activityApr activityMay activityJun act
> ivityJul activityAug activitySep activityOct activityNov activityDec RECALLwo
> rkFTRecallJan RECALLworkFTRecallFeb RECALLworkFTRecallMar RECALLworkFTRecallA
> pr RECALLworkFTRecallMay RECALLworkFTRecallJun RECALLworkFTRecallJul RECALLwo
> rkFTRecallAug RECALLworkFTRecallSep RECALLworkFTRecallOct RECALLworkFTRecallN
> ov RECALLworkFTRecallDec RECALLworkPTRecallJan RECALLworkPTRecallFeb RECALLwo
> rkPTRecallMar RECALLworkPTRecallApr RECALLworkPTRecallMay RECALLworkPTRecallJ
> un RECALLworkPTRecallJul RECALLworkPTRecallAug RECALLworkPTRecallSep RECALLwo
> rkPTRecallOct RECALLworkPTRecallNov RECALLworkPTRecallDec RECALLmilitaryRecal
> lJan RECALLmilitaryRecallFeb RECALLmilitaryRecallMar RECALLmilitaryRecallApr 
> RECALLmilitaryRecallMay RECALLmilitaryRecallJun RECALLmilitaryRecallJul RECAL
> LmilitaryRecallAug RECALLmilitaryRecallSep RECALLmilitaryRecallOct RECALLmili
> taryRecallNov RECALLmilitaryRecallDec RECALLworkRecallJan RECALLworkRecallFeb
>  RECALLworkRecallMar RECALLworkRecallApr RECALLworkRecallMay RECALLworkRecall
> Jun RECALLworkRecallJul RECALLworkRecallAug RECALLworkRecallSep RECALLworkRec
> allOct RECALLworkRecallNov RECALLworkRecallDec RECALLworkSchRecallJan RECALLw
> orkSchRecallFeb RECALLworkSchRecallMar RECALLworkSchRecallApr RECALLworkSchRe
> callMay RECALLworkSchRecallJun RECALLworkSchRecallJul RECALLworkSchRecallAug 
> RECALLworkSchRecallSep RECALLworkSchRecallOct RECALLworkSchRecallNov RECALLwo
> rkSchRecallDec RECALLworkK12RecallJan RECALLworkK12RecallFeb RECALLworkK12Rec
> allMar RECALLworkK12RecallApr RECALLworkK12RecallMay RECALLworkK12RecallJun R
> ECALLworkK12RecallJul RECALLworkK12RecallAug RECALLworkK12RecallSep RECALLwor
> kK12RecallOct RECALLworkK12RecallNov RECALLworkK12RecallDec RECALLworkCollege
> RecallJan RECALLworkCollegeRecallFeb RECALLworkCollegeRecallMar RECALLworkCol
> legeRecallApr RECALLworkCollegeRecallMay RECALLworkCollegeRecallJun RECALLwor
> kCollegeRecallJul RECALLworkCollegeRecallAug RECALLworkCollegeRecallSep RECAL
> LworkCollegeRecallOct RECALLworkCollegeRecallNov RECALLworkCollegeRecallDec R
> ECALLotherRecallJan RECALLotherRecallFeb RECALLotherRecallMar RECALLotherReca
> llApr RECALLotherRecallMay RECALLotherRecallJun RECALLotherRecallJul RECALLot
> herRecallAug RECALLotherRecallSep RECALLotherRecallOct RECALLotherRecallNov R
> ECALLotherRecallDec RECALLactivityRecallJan RECALLactivityRecallFeb RECALLact
> ivityRecallMar RECALLactivityRecallApr RECALLactivityRecallMay RECALLactivity
> RecallJun RECALLactivityRecallJul RECALLactivityRecallAug RECALLactivityRecal
> lSep RECALLactivityRecallOct RECALLactivityRecallNov RECALLactivityRecallDec 
> gradGraduate yrGradGraduate grad4yr yrGrad4yr grad2yr yrGrad2yr gradHS yrGrad
> HS gradDiploma yrGradDiploma gradGED yrGradGED annualHrsWrkCalc annualHrsWrkC
> alcCalc annualHrsWrkRaw annualHrsWrkOld Grad_month BA_month AA_month Diploma_
> month GED_month HS_month Grad_year BA_year AA_year Diploma_year GED_year HS_y
> ear WageJobCurrent WageJobMain CompJobCurrent CompJobMain Interview_date last
> _int_day R*interview* Highest_degree_ever selfEmployedJobMain selfEmployedJob
> Current indJobMain indJobCurrent occJobMain occJobCurrent long_miss_flag max_
> nonmissing_int_year lastValidSchoolDate

. 
. label values HHsize1997 .

. 
. foreach x of local months {
  2.     assert other`x'==0             if activity`x'==1
  3.     assert RECALLotherRecall`x'==0 if RECALLactivityRecall`x'==1
  4. }

. 
. * reshape to monthly data
. reshape long enrCollege enr2yr enr4yr enrGradSch enrK12 weeksWrk weeksSelfEmp
> loyed avgHrsWrk monthlyHrsWrk wage wageAlt wageMedian wageAltMedian comp comp
> Alt compMedian compAltMedian weeksMilitary workFT workPT atWork workSch workK
> 12 workCollege military other activity RECALLworkFTRecall RECALLworkPTRecall 
> RECALLworkRecall RECALLworkSchRecall RECALLworkK12Recall RECALLworkCollegeRec
> all RECALLmilitaryRecall RECALLotherRecall RECALLactivityRecall , string i(id
>  year) j(month)
(note: j = Apr Aug Dec Feb Jan Jul Jun Mar May Nov Oct Sep)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                   332408   -> 4.0e+06
Number of variables                 605   ->     210
j variable (12 values)                    ->   month
xij variables:
enrCollegeApr enrCollegeAug ... enrCollegeSep->enrCollege
      enr2yrApr enr2yrAug ... enr2yrSep   ->   enr2yr
      enr4yrApr enr4yrAug ... enr4yrSep   ->   enr4yr
enrGradSchApr enrGradSchAug ... enrGradSchSep->enrGradSch
      enrK12Apr enrK12Aug ... enrK12Sep   ->   enrK12
weeksWrkApr weeksWrkAug ... weeksWrkSep   ->   weeksWrk
weeksSelfEmployedApr weeksSelfEmployedAug ... weeksSelfEmployedSep->weeksSelfEm
> ployed
avgHrsWrkApr avgHrsWrkAug ... avgHrsWrkSep->   avgHrsWrk
monthlyHrsWrkApr monthlyHrsWrkAug ... monthlyHrsWrkSep->monthlyHrsWrk
            wageApr wageAug ... wageSep   ->   wage
   wageAltApr wageAltAug ... wageAltSep   ->   wageAlt
wageMedianApr wageMedianAug ... wageMedianSep->wageMedian
wageAltMedianApr wageAltMedianAug ... wageAltMedianSep->wageAltMedian
            compApr compAug ... compSep   ->   comp
   compAltApr compAltAug ... compAltSep   ->   compAlt
compMedianApr compMedianAug ... compMedianSep->compMedian
compAltMedianApr compAltMedianAug ... compAltMedianSep->compAltMedian
weeksMilitaryApr weeksMilitaryAug ... weeksMilitarySep->weeksMilitary
      workFTApr workFTAug ... workFTSep   ->   workFT
      workPTApr workPTAug ... workPTSep   ->   workPT
      atWorkApr atWorkAug ... atWorkSep   ->   atWork
   workSchApr workSchAug ... workSchSep   ->   workSch
   workK12Apr workK12Aug ... workK12Sep   ->   workK12
workCollegeApr workCollegeAug ... workCollegeSep->workCollege
militaryApr militaryAug ... militarySep   ->   military
         otherApr otherAug ... otherSep   ->   other
activityApr activityAug ... activitySep   ->   activity
RECALLworkFTRecallApr RECALLworkFTRecallAug ... RECALLworkFTRecallSep->RECALLwo
> rkFTRecall
RECALLworkPTRecallApr RECALLworkPTRecallAug ... RECALLworkPTRecallSep->RECALLwo
> rkPTRecall
RECALLworkRecallApr RECALLworkRecallAug ... RECALLworkRecallSep->RECALLworkReca
> ll
RECALLworkSchRecallApr RECALLworkSchRecallAug ... RECALLworkSchRecallSep->RECAL
> LworkSchRecall
RECALLworkK12RecallApr RECALLworkK12RecallAug ... RECALLworkK12RecallSep->RECAL
> LworkK12Recall
RECALLworkCollegeRecallApr RECALLworkCollegeRecallAug ... RECALLworkCollegeReca
> llSep->RECALLworkCollegeRecall
RECALLmilitaryRecallApr RECALLmilitaryRecallAug ... RECALLmilitaryRecallSep->RE
> CALLmilitaryRecall
RECALLotherRecallApr RECALLotherRecallAug ... RECALLotherRecallSep->RECALLother
> Recall
RECALLactivityRecallApr RECALLactivityRecallAug ... RECALLactivityRecallSep->RE
> CALLactivityRecall
-----------------------------------------------------------------------------

. ren hgcIn          hgc

. ren atWork       work

. 
. ren RECALLworkFTRecall      workFTRecall      

. ren RECALLworkPTRecall      workPTRecall      

. ren RECALLmilitaryRecall    militaryRecall    

. ren RECALLworkRecall        workRecall        

. ren RECALLworkSchRecall     workSchRecall     

. ren RECALLworkK12Recall     workK12Recall     

. ren RECALLworkCollegeRecall workCollegeRecall 

. ren RECALLotherRecall       otherRecall      

. ren RECALLactivityRecall    activityRecall

. 
. ren weeksWrk       weeksWorked 

. ren avgHrsWrk      avgHrs 

. ren monthlyHrsWrk  hoursWorked 

. ren WageJobCurrent wageJobCurrent

. ren WageJobMain    wageJobMain

. ren CompJobCurrent compJobCurrent

. ren CompJobMain    compJobMain

. 
. foreach x of local months {
  2.     assert other==0       if activity==1
  3.     assert otherRecall==0 if activityRecall==1
  4. }

. 
. * convert string month variable to numeric
. generat month_num = .
(3,988,896 missing values generated)

. replace month_num = 1  if month=="Jan"
(332,408 real changes made)

. replace month_num = 2  if month=="Feb"
(332,408 real changes made)

. replace month_num = 3  if month=="Mar"
(332,408 real changes made)

. replace month_num = 4  if month=="Apr"
(332,408 real changes made)

. replace month_num = 5  if month=="May"
(332,408 real changes made)

. replace month_num = 6  if month=="Jun"
(332,408 real changes made)

. replace month_num = 7  if month=="Jul"
(332,408 real changes made)

. replace month_num = 8  if month=="Aug"
(332,408 real changes made)

. replace month_num = 9  if month=="Sep"
(332,408 real changes made)

. replace month_num = 10 if month=="Oct"
(332,408 real changes made)

. replace month_num = 11 if month=="Nov"
(332,408 real changes made)

. replace month_num = 12 if month=="Dec"
(332,408 real changes made)

. drop month

. ren month_num month

. sort id year month

. 
. * label months with value label
. lab def vlMonth 1 "Jan" 2 "Feb" 3 "Mar" 4 "Apr" 5 "May" 6 "Jun" 7 "Jul" 8 "Au
> g" 9 "Sep" 10 "Oct" 11 "Nov" 12 "Dec"

. lab val month vlMonth

. 
. * rename to be CPS variables
. ren wageJobCurrent         wageJobCPS

. ren compJobCurrent         compJobCPS

. ren occJobCurrent          occJobCPS

. ren indJobCurrent          indJobCPS

. ren selfEmployedJobCurrent selfEmployedJobCPS

. 
. * convert our annualized age variable to a monthly basis
. *  need to assure that it stays sorted in the current order
. sort id year month

. generat sorter = _n

. generat ageYr = year-birthYear

. generat ageMo = month-birthMonth

. replace ageYr = ageYr-1 if ageMo<0
(1,846,855 real changes made)

. drop ageMo

. bys id ageYr (sorter): gen ageMo = [_n-1]

. drop age sorter

. ren ageYr age

. 
. * drop people outside of age ranges we want
. keep if inrange(age,13,.)
(1,668,151 observations deleted)

. 
. * set the panel
. gen uniqueTime = age*100+ageMo+1

. xtset id uniqueTime
       panel variable:  id (unbalanced)
        time variable:  uniqueTime, 1301 to 3612, but with gaps
                delta:  1 unit

. 
. * replace absorbing graduation dummies by new monthly basis:
. ren gradGraduate gradGraduateAnnual

. ren grad4yr      grad4yrAnnual

. ren grad2yr      grad2yrAnnual

. ren gradDiploma  gradDiplomaAnnual

. ren gradGED      gradGEDAnnual

. ren gradHS       gradHSAnnual

. 
. bys id: gen gradGraduate = (month>=Grad_month    & year==Grad_year   ) | (yea
> r>Grad_year   )

. bys id: gen grad4yr      = (month>=BA_month      & year==BA_year     ) | (yea
> r>BA_year     )

. bys id: gen grad2yr      = (month>=AA_month      & year==AA_year     ) | (yea
> r>AA_year     )

. bys id: gen gradDiploma  = (month>=Diploma_month & year==Diploma_year) | (yea
> r>Diploma_year)

. bys id: gen gradGED      = (month>=GED_month     & year==GED_year    ) | (yea
> r>GED_year    )

.         gen gradHS       =  max(gradGED,gradDiploma)

. 
. * impute highest grade completed on a monthly basis
. * do hgc_monthly_impute.do // this file was not updated with Round 15 update 
> because we don't end up using hgc in any of the final estimations
. 
. * impute people as being in HS if they were 13 and not initially classified a
> s HS, but eventually graduated HS
. bys id: egen everHS = max(gradHS)

. replace other    = 0 if other==1 & activity==6 & age==13 & everHS==1 & month~
> =6 & month~=7 & month~=8
(327 real changes made)

. replace activity = 1 if            activity==6 & age==13 & everHS==1 & month~
> =6 & month~=7 & month~=8
(327 real changes made)

. replace other    = 0 if other==1 & activity==6 & age==14 & everHS==1 & month~
> =6 & month~=7 & month~=8
(703 real changes made)

. replace activity = 1 if            activity==6 & age==14 & everHS==1 & month~
> =6 & month~=7 & month~=8
(703 real changes made)

. 
. * impute SOME people as being in HS if they were 13 and not initially classif
> ied as HS, but never gradHS
. replace other    = 0 if activity==6 & other==1 & age==13 & month~=6 & month~=
> 7 & month~=8 & (id==46 | id==343 | id==344 | id==345 | id==2142 | id==3033 | 
> id==4225 | id==5282 | id==5447 | id==6219 | id==6345 | id==6659 | id==7000)
(21 real changes made)

. replace activity = 1 if activity==6            & age==13 & month~=6 & month~=
> 7 & month~=8 & (id==46 | id==343 | id==344 | id==345 | id==2142 | id==3033 | 
> id==4225 | id==5282 | id==5447 | id==6219 | id==6345 | id==6659 | id==7000)
(21 real changes made)

. 
. * replace enrK12 if activity==1 | activity==2 but enrK12==0
. replace enrK12     = 1 if enrK12==0 & enrCollege==0 & (activity==1 | activity
> ==2) & age<18
(18,129 real changes made)

. replace enrK12     = 1 if enrK12==0 & enrCollege==0 & (activity==1 | activity
> ==2) & age>17 & gradHS==0
(0 real changes made)

. replace enrCollege = 1 if enrK12==0 & enrCollege==0 & (activity==1 | activity
> ==2) & age>17 & gradHS==1
(0 real changes made)

. * replace workK12    = 1 if activity==2 & gradHS==0
. * replace enrK12     = 1 if workK12 & ~enrK12
. * replace enrCollege = 1 if workCollege & ~enrCollege
. 
. count if activity==1 & other
  0

. 
. compress
  variable oversampleRace was float now byte
  variable month was float now byte
  variable age was float now byte
  variable ageMo was float now byte
  variable uniqueTime was float now int
  variable gradGraduate was float now byte
  variable grad4yr was float now byte
  variable grad2yr was float now byte
  variable gradDiploma was float now byte
  variable gradGED was float now byte
  variable gradHS was float now byte
  variable everHS was float now byte
  (81,226,075 bytes saved)

. save y97_all_balanced.dta, replace
file y97_all_balanced.dta saved

. !zip -m y97_all_balanced.dta.zip y97_all_balanced.dta

  adding: y97_all_balanced.dta (deflated 96%)

. 
. *=================================================
. * Frequency stats and droppings
. *=================================================
. xtset id uniqueTime
       panel variable:  id (unbalanced)
        time variable:  uniqueTime, 1301 to 3612, but with gaps
                delta:  1 unit

. xtsum id if inrange(year,1997,2016)

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4504.492   2603.226          1       9022 |     N = 2146332
         between |             2603.136          1       9022 |     n =    8984
         within  |                    0   4504.492   4504.492 | T-bar = 238.906

. xtsum id if inrange(age,16,36) & female==0 

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4469.546   2608.252          2       9021 |     N = 1021897
         between |             2606.137          2       9021 |     n =    4599
         within  |                    0   4469.546   4469.546 | T-bar =   222.2

. xtsum id if inrange(age,16,36) & female==0 & mixed==0

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4481.455   2610.661          2       9021 |     N = 1012937
         between |             2608.374          2       9021 |     n =    4559
         within  |                    0   4481.455   4481.455 | T-bar = 222.184

. 
. * -------------------------------------------------------------------------
. * get number of people in each birth cohort for potential survey definition
. * -------------------------------------------------------------------------
. 
. * If t0=13:
. * yob    ages_interviewed  #ints (years) by 36  # ints (years) when incorpora
> ting retrospective info
. * ---------------------------------------------------------------------------
> ----------------
. * 84        12~31                19                 19
. * 83        13~32                20                 20
. * 82        14~33                20                 21
. * 81        15~34                20                 22
. * 80        16~35                20                 23
. 
. * If t0=16:
. * yob    ages_interviewed  #ints (years) by 36  # ints (years) when incorpora
> ting retrospective info
. * ---------------------------------------------------------------------------
> ----------------
. * 84        12~31                16                 16
. * 83        13~32                17                 17
. * 82        14~33                18                 18
. * 81        15~34                19                 29
. * 80        16~35                20                 21
. 
. bys id (uniqueTime): gen firstPer = _n==1

. tab birthYear if female==0 & mixed==0 & firstPer

 Birth year |      Freq.     Percent        Cum.
------------+-----------------------------------
       1980 |        843       18.49       18.49
       1981 |        941       20.64       39.13
       1982 |        943       20.68       59.82
       1983 |        930       20.40       80.21
       1984 |        902       19.79      100.00
------------+-----------------------------------
      Total |      4,559      100.00

. 
. * * If t0=13
. * generat numPotentialSurveys = 0
. * replace numPotentialSurveys = 14 if birthYear==1984 & firstPer & female==0 
> & mixed==0
. * replace numPotentialSurveys = 15 if birthYear==1983 & firstPer & female==0 
> & mixed==0
. * replace numPotentialSurveys = 15 if birthYear==1982 & firstPer & female==0 
> & mixed==0
. * replace numPotentialSurveys = 14 if birthYear==1981 & firstPer & female==0 
> & mixed==0
. * replace numPotentialSurveys = 13 if birthYear==1980 & firstPer & female==0 
> & mixed==0
. 
. * If t0=16
. generat numPotentialSurveys = 0

. replace numPotentialSurveys = 16 if birthYear==1984 & firstPer & female==0 & 
> mixed==0
(902 real changes made)

. replace numPotentialSurveys = 17 if birthYear==1983 & firstPer & female==0 & 
> mixed==0
(930 real changes made)

. replace numPotentialSurveys = 18 if birthYear==1982 & firstPer & female==0 & 
> mixed==0
(943 real changes made)

. replace numPotentialSurveys = 19 if birthYear==1981 & firstPer & female==0 & 
> mixed==0
(941 real changes made)

. replace numPotentialSurveys = 20 if birthYear==1980 & firstPer & female==0 & 
> mixed==0
(843 real changes made)

. 
. sum numPotentialSurveys if firstPer & female==0 & mixed==0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
numPotenti~s |      4,559    17.97653    1.393309         16         20

. 
. generat totPotentialSurveysObs = sum(numPotentialSurveys)

. l totPotentialSurveysObs if _n==_N

         +----------+
         | totPot~s |
         |----------|
2320745. |    81955 |
         +----------+

. 
. * * If t0=13
. * generat numPotentialSurveysPlusRetro = 0
. * replace numPotentialSurveysPlusRetro = 14 if birthYear==1984 & firstPer & f
> emale==0 & mixed==0
. * replace numPotentialSurveysPlusRetro = 15 if birthYear==1983 & firstPer & f
> emale==0 & mixed==0
. * replace numPotentialSurveysPlusRetro = 16 if birthYear==1982 & firstPer & f
> emale==0 & mixed==0
. * replace numPotentialSurveysPlusRetro = 16 if birthYear==1981 & firstPer & f
> emale==0 & mixed==0
. * replace numPotentialSurveysPlusRetro = 16 if birthYear==1980 & firstPer & f
> emale==0 & mixed==0
. 
. * If t0=16
. generat numPotentialSurveysPlusRetro = 0

. replace numPotentialSurveysPlusRetro = 16 if birthYear==1984 & firstPer & fem
> ale==0 & mixed==0
(902 real changes made)

. replace numPotentialSurveysPlusRetro = 17 if birthYear==1983 & firstPer & fem
> ale==0 & mixed==0
(930 real changes made)

. replace numPotentialSurveysPlusRetro = 18 if birthYear==1982 & firstPer & fem
> ale==0 & mixed==0
(943 real changes made)

. replace numPotentialSurveysPlusRetro = 19 if birthYear==1981 & firstPer & fem
> ale==0 & mixed==0
(941 real changes made)

. replace numPotentialSurveysPlusRetro = 21 if birthYear==1980 & firstPer & fem
> ale==0 & mixed==0
(843 real changes made)

. 
. sum numPotentialSurveysPlusRetro if firstPer & female==0 & mixed==0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
numPotenti~o |      4,559    18.16144     1.68539         16         21

. 
. generat totPotentialSurveysPlusRetroObs = sum(numPotentialSurveysPlusRetro)

. l totPotentialSurveysPlusRetroObs if _n==_N

         +----------+
         | tot~oObs |
         |----------|
2320745. |    82798 |
         +----------+

. 
. * drop mixed race and recode race to be consistent with 79
. drop race

. gen race = .
(2,320,745 missing values generated)

. replace race = 1 if white==1
(1,204,288 real changes made)

. replace race = 2 if black==1
(604,413 real changes made)

. replace race = 3 if hispanic==1
(490,625 real changes made)

. replace race = 4 if mixed==1
(21,419 real changes made)

. label define vlrace_true 1 "White" 2 "Black" 3 "Hispanic" 4 "Mixed"

. lab val race vlrace_true

. drop if mixed==1
(21,419 observations deleted)

. xtsum id if female==0

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4480.798   2610.303          2       9021 |     N = 1177061
         between |             2608.374          2       9021 |     n =    4559
         within  |                    0   4480.798   4480.798 | T-bar = 258.184

. 
. * drop months for people after R17 interview date
. drop if R17interviewDate<=ym(year,month) & ~mi(R17interviewDate)
(91,173 observations deleted)

. * xtsum id if female==0 // if t0=13
. xtsum id if inrange(age,16,36) & female==0 // if t0=16

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4480.083   2610.979          2       9021 |     N =  968033
         between |             2608.374          2       9021 |     n =    4559
         within  |                    0   4480.083   4480.083 | T-bar = 212.335

. 
. * drop months for people after last valid interview date
. gen yrmo = year*100+month

. gen yrmo_last = year(last_int_day)*100+month(last_int_day)
(595,491 missing values generated)

. drop if yrmo>=yrmo_last
(300,704 observations deleted)

. * xtsum id if female==0 // if t0=13
. xtsum id if inrange(age,16,36) & female==0 // if t0=16

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4525.455    2603.42          2       9021 |     N =  805761
         between |             2607.696          2       9021 |     n =    4444
         within  |                    0   4525.455   4525.455 | T-bar = 181.314

. 
. * xtsum id if female==0 & ageMo==0 // if t0=13
. xtsum id if female==0 & ageMo==0 & inrange(age,16,36)

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4523.892   2603.254          2       9021 |     N =   69202
         between |             2607.696          2       9021 |     n =    4444
         within  |                    0   4523.892   4523.892 | T-bar =  15.572

. 
. * drop everything after the beginning of long missed interview spells
. drop if long_miss_flag
(1,595 observations deleted)

. * xtsum id if female==0 // if t0=13
. xtsum id if inrange(age,16,36) & female==0 // if t0=16

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4525.867   2603.369          2       9021 |     N =  804923
         between |             2607.676          2       9021 |     n =    4443
         within  |                    0   4525.867   4525.867 | T-bar = 181.167

. 
. * drop right-censored interview spells
. tab max_nonmissing_int_year year if year>=2011

max_nonmis |
sing_int_y |                     Year of Survey
       ear |      2011       2012       2013       2014       2015 |     Total
-----------+-------------------------------------------------------+----------
      2014 |     8,592      8,592      8,592      8,592      8,592 |    51,552 
      2015 |    56,880     56,880     56,880     56,880     47,289 |   274,809 
      2016 |    19,956     19,956     19,956     19,956     19,956 |   102,368 
-----------+-------------------------------------------------------+----------
     Total |    85,428     85,428     85,428     85,428     75,837 |   428,729 


max_nonmis |  Year of
sing_int_y |   Survey
       ear |      2016 |     Total
-----------+-----------+----------
      2014 |     8,592 |    51,552 
      2015 |         0 |   274,809 
      2016 |     2,588 |   102,368 
-----------+-----------+----------
     Total |    11,180 |   428,729 


. keep if year<=max_nonmissing_int_year
(17,184 observations deleted)

. xtsum id if inrange(age,16,36) & female==0

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4524.234   2603.834          2       9021 |     N =  794531
         between |             2607.676          2       9021 |     n =    4443
         within  |                    0   4524.234   4524.234 | T-bar = 178.828

. xtsum id if inrange(age,16,36) & female==0 & mixed~=1 & ~long_miss_flag & yea
> r<=max_nonmissing_int_year

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4524.234   2603.834          2       9021 |     N =  794531
         between |             2607.676          2       9021 |     n =    4443
         within  |                    0   4524.234   4524.234 | T-bar = 178.828

. 
. * drop observations after someone "illegally" went to college (without a Dipl
> oma)
. drop if mdy(month,1,year)>=lastValidSchoolDate
(5,209 observations deleted)

. xtsum id if inrange(age,16,36) & female==0

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4527.465   2603.071          2       9021 |     N =  792660
         between |             2607.676          2       9021 |     n =    4443
         within  |                    0   4527.465   4527.465 | T-bar = 178.406

. xtsum id if inrange(age,16,36) & female==0 & mixed~=1 & ~long_miss_flag & yea
> r<=max_nonmissing_int_year

Variable         |      Mean   Std. Dev.       Min        Max |    Observations
-----------------+--------------------------------------------+----------------
id       overall |  4527.465   2603.071          2       9021 |     N =  792660
         between |             2607.676          2       9021 |     n =    4443
         within  |                    0   4527.465   4527.465 | T-bar = 178.406

. 
. preserve

.     collapse (count) n=ageMo if inrange(age,16,36) & female==0 & mixed~=1 & ~
> long_miss_flag & year<=max_nonmissing_int_year, by(id)

.     sum n, d

                        (count) ageMo
-------------------------------------------------------------
      Percentiles      Smallest
 1%            7              1
 5%           32              1
10%           59              1       Obs               4,443
25%          182              1       Sum of Wgt.       4,443

50%          200                      Mean           178.4065
                        Largest       Std. Dev.      62.28247
75%          218            243
90%          229            244       Variance       3879.107
95%          234            244       Skewness      -1.515485
99%          239            245       Kurtosis       3.995471

. restore

. 
. * cohort graph to put in appendix
. table age year birthYear if ageMo==0
note: table too wide, birthYear moved to by()

-------------------------------------------------------------------------------
Birth |
year  |
and   |                             Year of Survey                             
age   |  1993  1994  1995  1996  1997  1998  1999  2000  2001  2002  2003  2004
------+------------------------------------------------------------------------
1980  |
   13 | 1,675                                                                  
   14 |       1,675                                                            
   15 |             1,675                                                      
   16 |                   1,675                                                
   17 |                         1,638                                          
   18 |                               1,618                                    
   19 |                                     1,568                              
   20 |                                           1,523                        
   21 |                                                 1,485                  
   22 |                                                       1,449            
   23 |                                                             1,406      
   24 |                                                                   1,373
   25 |                                                                        
   26 |                                                                        
   27 |                                                                        
   28 |                                                                        
   29 |                                                                        
   30 |                                                                        
   31 |                                                                        
   32 |                                                                        
   33 |                                                                        
   34 |                                                                        
   35 |                                                                        
   36 |                                                                        
------+------------------------------------------------------------------------
1981  |
   13 |       1,858                                                            
   14 |             1,858                                                      
   15 |                   1,858                                                
   16 |                         1,826                                          
   17 |                               1,792                                    
   18 |                                     1,748                              
   19 |                                           1,702                        
   20 |                                                 1,656                  
   21 |                                                       1,616            
   22 |                                                             1,577      
   23 |                                                                   1,535
   24 |                                                                        
   25 |                                                                        
   26 |                                                                        
   27 |                                                                        
   28 |                                                                        
   29 |                                                                        
   30 |                                                                        
   31 |                                                                        
   32 |                                                                        
   33 |                                                                        
   34 |                                                                        
   35 |                                                                        
   36 |                                                                        
------+------------------------------------------------------------------------
1982  |
   13 |             1,822                                                      
   14 |                   1,822                                                
   15 |                         1,781                                          
   16 |                               1,761                                    
   17 |                                     1,734                              
   18 |                                           1,699                        
   19 |                                                 1,669                  
   20 |                                                       1,640            
   21 |                                                             1,608      
   22 |                                                                   1,577
   23 |                                                                        
   24 |                                                                        
   25 |                                                                        
   26 |                                                                        
   27 |                                                                        
   28 |                                                                        
   29 |                                                                        
   30 |                                                                        
   31 |                                                                        
   32 |                                                                        
   33 |                                                                        
   34 |                                                                        
   35 |                                                                        
   36 |                                                                        
------+------------------------------------------------------------------------
1983  |
   13 |                   1,793                                                
   14 |                         1,772                                          
   15 |                               1,754                                    
   16 |                                     1,731                              
   17 |                                           1,714                        
   18 |                                                 1,684                  
   19 |                                                       1,656            
   20 |                                                             1,628      
   21 |                                                                   1,591
   22 |                                                                        
   23 |                                                                        
   24 |                                                                        
   25 |                                                                        
   26 |                                                                        
   27 |                                                                        
   28 |                                                                        
   29 |                                                                        
   30 |                                                                        
   31 |                                                                        
   32 |                                                                        
   33 |                                                                        
   34 |                                                                        
   35 |                                                                        
   36 |                                                                        
------+------------------------------------------------------------------------
1984  |
   13 |                         1,722                                          
   14 |                               1,713                                    
   15 |                                     1,700                              
   16 |                                           1,684                        
   17 |                                                 1,663                  
   18 |                                                       1,645            
   19 |                                                             1,599      
   20 |                                                                   1,570
   21 |                                                                        
   22 |                                                                        
   23 |                                                                        
   24 |                                                                        
   25 |                                                                        
   26 |                                                                        
   27 |                                                                        
   28 |                                                                        
   29 |                                                                        
   30 |                                                                        
   31 |                                                                        
   32 |                                                                        
   33 |                                                                        
   34 |                                                                        
   35 |                                                                        
   36 |                                                                        
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
Birth |
year  |
and   |                             Year of Survey                             
age   |  2005  2006  2007  2008  2009  2010  2011  2012  2013  2014  2015  2016
------+------------------------------------------------------------------------
1980  |
   13 |                                                                        
   14 |                                                                        
   15 |                                                                        
   16 |                                                                        
   17 |                                                                        
   18 |                                                                        
   19 |                                                                        
   20 |                                                                        
   21 |                                                                        
   22 |                                                                        
   23 |                                                                        
   24 |                                                                        
   25 | 1,346                                                                  
   26 |       1,320                                                            
   27 |             1,300                                                      
   28 |                   1,288                                                
   29 |                         1,270                                          
   30 |                               1,270                                    
   31 |                                     1,269                              
   32 |                                           1,268                        
   33 |                                                 1,267                  
   34 |                                                       1,267            
   35 |                                                               983      
   36 |                                                                      32
------+------------------------------------------------------------------------
1981  |
   13 |                                                                        
   14 |                                                                        
   15 |                                                                        
   16 |                                                                        
   17 |                                                                        
   18 |                                                                        
   19 |                                                                        
   20 |                                                                        
   21 |                                                                        
   22 |                                                                        
   23 |                                                                        
   24 | 1,498                                                                  
   25 |       1,486                                                            
   26 |             1,461                                                      
   27 |                   1,447                                                
   28 |                         1,431                                          
   29 |                               1,431                                    
   30 |                                     1,430                              
   31 |                                           1,429                        
   32 |                                                 1,429                  
   33 |                                                       1,428            
   34 |                                                             1,137      
   35 |                                                                      42
   36 |                                                                        
------+------------------------------------------------------------------------
1982  |
   13 |                                                                        
   14 |                                                                        
   15 |                                                                        
   16 |                                                                        
   17 |                                                                        
   18 |                                                                        
   19 |                                                                        
   20 |                                                                        
   21 |                                                                        
   22 |                                                                        
   23 | 1,545                                                                  
   24 |       1,522                                                            
   25 |             1,500                                                      
   26 |                   1,483                                                
   27 |                         1,468                                          
   28 |                               1,467                                    
   29 |                                     1,464                              
   30 |                                           1,461                        
   31 |                                                 1,461                  
   32 |                                                       1,460            
   33 |                                                             1,149      
   34 |                                                                      43
   35 |                                                                        
   36 |                                                                        
------+------------------------------------------------------------------------
1983  |
   13 |                                                                        
   14 |                                                                        
   15 |                                                                        
   16 |                                                                        
   17 |                                                                        
   18 |                                                                        
   19 |                                                                        
   20 |                                                                        
   21 |                                                                        
   22 | 1,562                                                                  
   23 |       1,541                                                            
   24 |             1,514                                                      
   25 |                   1,495                                                
   26 |                         1,474                                          
   27 |                               1,472                                    
   28 |                                     1,471                              
   29 |                                           1,471                        
   30 |                                                 1,469                  
   31 |                                                       1,469            
   32 |                                                             1,161      
   33 |                                                                      53
   34 |                                                                        
   35 |                                                                        
   36 |                                                                        
------+------------------------------------------------------------------------
1984  |
   13 |                                                                        
   14 |                                                                        
   15 |                                                                        
   16 |                                                                        
   17 |                                                                        
   18 |                                                                        
   19 |                                                                        
   20 |                                                                        
   21 | 1,535                                                                  
   22 |       1,514                                                            
   23 |             1,488                                                      
   24 |                   1,465                                                
   25 |                         1,449                                          
   26 |                               1,446                                    
   27 |                                     1,445                              
   28 |                                           1,442                        
   29 |                                                 1,442                  
   30 |                                                       1,440            
   31 |                                                             1,141      
   32 |                                                                      51
   33 |                                                                        
   34 |                                                                        
   35 |                                                                        
   36 |                                                                        
-------------------------------------------------------------------------------

. 
. *--------------------------------------------------
. * Graph the choice shares by age and caldendar time
. *--------------------------------------------------
. generate caldate = ym(year,month)

. preserve

.     format caldate  %tm

.     gen tempy = 1

.     collapse (count) tempy, by(activity caldate)

.     xtset activity caldate
       panel variable:  activity (unbalanced)
        time variable:  caldate, 1993m1 to 2016m7, but with gaps
                delta:  1 month

.     fillin activity caldate

.     drop _fillin

.     recode tempy (. = 0)
(tempy: 135 changes made)

.     sort caldate activity

.     
.     * collapse sum(tempy), by(activity caldate) ????
.     
.     *----------------------------------------------------------------
.     * Create pct variables for total degrees and education degrees
.     *  as well as cumulative pct and total/1000
.     *----------------------------------------------------------------
.     foreach X in tempy {
  2.         bys caldate: egen `X'_denom = total(`X')
  3.         gen `X'_pct = `X'/`X'_denom
  4.     }

.     
.     * Adjust pct variables so that they can be in an area plot
.     foreach X in tempy {
  2.         * Order in area graph (top2bottom): public, non-profit, for-profit
.         gen `X'_pct2 = .
  3.         bys caldate (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2]
>  + `X'_pct[3] + `X'_pct[4] + `X'_pct[5] + `X'_pct[6] if activity==6
  4.         bys caldate (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2]
>  + `X'_pct[3] + `X'_pct[4] + `X'_pct[5]              if activity==5
  5.         bys caldate (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2]
>  + `X'_pct[3] + `X'_pct[4]                           if activity==4
  6.         bys caldate (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2]
>  + `X'_pct[3]                                        if activity==3
  7.         bys caldate (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2]
>                                                      if activity==2
  8.         bys caldate (activity): replace `X'_pct2 = `X'_pct[1]             
>                                                      if activity==1
  9.     }
(1,698 missing values generated)
(283 real changes made)
(283 real changes made)
(283 real changes made)
(283 real changes made)
(283 real changes made)
(283 real changes made)

.     
.     twoway  (area tempy_pct2 caldate if activity==6, lcolor(midblue) fcolor(e
> ltblue) lwidth(vthin) ) (area tempy_pct2 caldate if activity==5, lcolor(midgr
> een) fcolor(eltgreen) lwidth(vthin) ) (area tempy_pct2 caldate if activity==4
> , lcolor(cranberry) fcolor(erose) lwidth(vthin)) (area tempy_pct2 caldate if 
> activity==3, lcolor(dknavy) fcolor(edkblue) lwidth(vthin) ) (area tempy_pct2 
> caldate if activity==2, lcolor(sand) fcolor(sandb) lwidth(vthin) ) (area temp
> y_pct2 caldate if activity==1, lcolor(brown) fcolor(stone) lwidth(vthin) )   
> ,legend(order(6 "{stSerif:School Only}" 5 "{stSerif:Work in School}" 4 "{stSe
> rif:Work PT}" 3 "{stSerif:Work FT}" 2 "{stSerif:Military}" 1 "{stSerif:Other}
> ") rows(2) ) title( "") ytitle( "{stSerif:Probability}") xtitle( "{stSerif:Da
> te}")  xlabel(,format(%tm)) graphregion(fcolor(white) lcolor(white)) note( "{
> stSerif:Source: NLSY97}")

.     graph export choiceSharesMonthly.eps, replace
(file choiceSharesMonthly.eps written in EPS format)

. restore

. 
. preserve

.     gen monthAlt = ( month-(birthMonth-1) )*( year-age==birthYear ) + ( month
> +(12-birthMonth+1) )*( year-age==birthYear+1  )

.     gen yearmo = year*100+month

.     gen agemo  =  age*100+monthAlt

.     gen tempy = 1

.     collapse (count) tempy, by(activity agemo)

.     xtset activity agemo
       panel variable:  activity (unbalanced)
        time variable:  agemo, 1301 to 3606, but with gaps
                delta:  1 unit

.     fillin activity agemo

.     drop _fillin

.     recode tempy (. = 0)
(tempy: 104 changes made)

.     sort agemo activity

.     *----------------------------------------------------------------
.     * Create pct variables for total degrees and education degrees
.     *  as well as cumulative pct and total/1000
.     *----------------------------------------------------------------
.     foreach X in tempy {
  2.         bys agemo: egen `X'_denom = total(`X')
  3.         gen `X'_pct = `X'/`X'_denom
  4.     }

.     
.     * Adjust pct variables so that they can be in an area plot
.     foreach X in tempy {
  2.         * Order in area graph (top2bottom): public, non-profit, for-profit
.         gen `X'_pct2 = .
  3.         bys agemo (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2] +
>  `X'_pct[3] + `X'_pct[4] + `X'_pct[5] + `X'_pct[6] if activity==6
  4.         bys agemo (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2] +
>  `X'_pct[3] + `X'_pct[4] + `X'_pct[5]              if activity==5
  5.         bys agemo (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2] +
>  `X'_pct[3] + `X'_pct[4]                           if activity==4
  6.         bys agemo (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2] +
>  `X'_pct[3]                                        if activity==3
  7.         bys agemo (activity): replace `X'_pct2 = `X'_pct[1] + `X'_pct[2]  
>                                                    if activity==2
  8.         bys agemo (activity): replace `X'_pct2 = `X'_pct[1]               
>                                                    if activity==1
  9.     }
(1,692 missing values generated)
(282 real changes made)
(282 real changes made)
(282 real changes made)
(282 real changes made)
(282 real changes made)
(282 real changes made)

.     
.     /* * Add var to add vline
>     gen liner1 = .
>     gen liner2 = .
>     gen liner3 = .
>     replace liner1 = 1600 if year==2003
>     replace liner2 = 400 if year==2003
>     replace liner3 = 100 if year==2003
> 
>     gen nclb = "NCLB" */
.     
.     replace agemo = agemo/100
(1,692 real changes made)

.     
.     twoway  (area tempy_pct2 agemo if activity==6, lcolor(midblue) fcolor(elt
> blue) lwidth(vthin) ) (area tempy_pct2 agemo if activity==5, lcolor(midgreen)
>  fcolor(eltgreen) lwidth(vthin) ) (area tempy_pct2 agemo if activity==4, lcol
> or(cranberry) fcolor(erose) lwidth(vthin)) (area tempy_pct2 agemo if activity
> ==3, lcolor(dknavy) fcolor(edkblue) lwidth(vthin) ) (area tempy_pct2 agemo if
>  activity==2, lcolor(sand) fcolor(sandb) lwidth(vthin) ) (area tempy_pct2 age
> mo if activity==1, lcolor(brown) fcolor(stone) lwidth(vthin) )   ,legend(orde
> r(6 "{stSerif:School Only}" 5 "{stSerif:Work in School}" 4 "{stSerif:Work PT}
> " 3 "{stSerif:Work FT}" 2 "{stSerif:Military}" 1 "{stSerif:Other}") rows(2) )
>  title( "") ytitle( "{stSerif:Probability}") xtitle( "{stSerif:Age}") xlabel(
> 13(2)36) graphregion(fcolor(white) lcolor(white)) note( "{stSerif:Source: NLS
> Y97}")

.     graph export choiceSharesMonthlyAge.eps, replace
(file choiceSharesMonthlyAge.eps written in EPS format)

. restore

. 
. compress
  variable firstPer was float now byte
  variable numPotentialSurveys was float now byte
  variable numPotentialSurveysPlusRetro was float now byte
  variable race was float now byte
  variable caldate was float now int
  (26,368,454 bytes saved)

. save y97_all.dta, replace
file y97_all.dta saved

. 
. log close
      name:  <unnamed>
       log:  /home/data/ransom/WageReturnsRepo/Data/y97/y97_create_trim.log
  log type:  text
 closed on:  30 Jan 2019, 10:33:23
-------------------------------------------------------------------------------

. exit

end of do-file

. 
end of do-file
